{"version":3,"sources":["assets/Script/test/HeroHit.js","assets/Script/pool/NodePool.js","assets/Script/pool/PoolComponent.js","assets/Script/core/min/Stately.js","assets/Script/test/addMap.js","assets/Script/core/min/async.js","assets/Script/config/binConfig.js","assets/Script/blow/bomb1.js","assets/Script/blow/bomb2.js","assets/Script/blow/bomb3.js","assets/Script/bullet/bullet10.js","assets/Script/bullet/bullet1.js","assets/Script/bullet/bullet2.js","assets/Script/bullet/bullet3.js","assets/Script/bullet/bullet4.js","assets/Script/bullet/bullet5.js","assets/Script/bullet/bullet6.js","assets/Script/bullet/bullet7.js","assets/Script/bullet/bullet8.js","assets/Script/bullet/bullet9.js","assets/Script/control/buttonControl.js","assets/Script/control/control.js","assets/Script/test/drag.js","assets/Script/test/draw.js","assets/Script/enemy/enemyControl.js","assets/Script/factory/enemyFactory.js","assets/Script/enemy/enemyFind.js","assets/Script/enemy/enemyHp.js","assets/Script/enemy/enemyMelee.js","assets/Script/enemy/enemyMove.js","assets/Script/enemy/enemySend.js","assets/Script/enemy/enemySettng.js","assets/Script/enemy/enemySpine.js","assets/Script/fire/fire.js","assets/Script/core/follow.js","assets/Script/game/gameAction.js","assets/Script/config/gameConfig.js","assets/Script/game/gameControl.js","assets/Script/game/gameEvent.js","assets/Script/scene/gameGuanka.js","assets/Script/scene/gameMain.js","assets/Script/ui/gameOverLossPanel.js","assets/Script/ui/gameOverWinPanel .js","assets/Script/scene/gameOver.js","assets/Script/ui/gamePausePanel.js","assets/Script/config/gamePopup.js","assets/Script/game/gameScene.js","assets/Script/config/gameSound.js","assets/Script/game/gameUtils.js","assets/Script/config/guan1_1.js","assets/Script/guangka/guanItem.js","assets/Script/guangka/guankazhang.js","assets/Script/scene/hall.js","assets/Script/test/heros.js","assets/Script/pool/hpComponent.js","assets/Script/core/hua.js","assets/Script/bullet/hurt.js","assets/Script/test/itemTest.js","assets/Script/test/jdTest.js","assets/Script/core/min/jm.js","assets/Script/control/joystickBtn.js","assets/Script/control/joystick.js","assets/Script/control/keyboard.js","assets/Script/core/loading.js","assets/Script/game/localStorage.js","assets/Script/core/min/lodash.js","assets/Script/scene/login.js","assets/Script/scene/mapEdit.js","assets/Script/core/mapSetting.js","assets/Script/test/move.js","assets/Script/pool/persisPool.js","assets/Script/core/persistNode.js","assets/Script/core/persistPrefab.js","assets/Script/core/popupLayer.js","assets/Script/zhujie/roleControl.js","assets/Script/scene/roleEdit.js","assets/Script/zhujie/roleFind.js","assets/Script/zhujie/roleHp.js","assets/Script/layer/roleLayer.js","assets/Script/zhujie/roleMove.js","assets/Script/core/roleRotation.js","assets/Script/zhujie/roleSpine.js","assets/Script/zhujie/roleSprite.js","assets/Script/core/rotationNode.js","assets/Script/layer/shootBomb.js","assets/Script/layer/shootBullet.js","assets/Script/layer/shootFire.js","assets/Script/game/soundManager.js","assets/Script/zhujie/spineAction.js","assets/Script/zhujie/spine.js","assets/Script/factory/taHp.js","assets/Script/factory/taPaoguan.js","assets/Script/factory/taSprite.js","assets/Script/control/top.js","assets/Script/control/touchStage.js","assets/Script/core/uiNode.js","assets/migration/use_reversed_rotateBy.js","assets/Script/core/utils.js","assets/Script/core/uuids.js","assets/Script/core/widget_child.js","assets/Script/you/youControl.js","assets/Script/you/youFind.js","assets/Script/you/youHp.js","assets/Script/you/youMove.js","assets/Script/you/youSend.js","assets/Script/you/youSetting.js","assets/Script/you/youSpine.js","assets/Script/config/zhujueConfig.js"],"names":["cc","Class","extends","Component","properties","gravity","onLoad","this","speed","v2","prePosition","preStep","_lastSpeedY","onEnable","director","getCollisionManager","enabled","enabledDebugDraw","onDisable","start","onCollisionEnter","other","self","node","color","Color","RED","touchingNumber","console","log","world","aabb","preAabb","clone","onCollisionStay","onCollisionExit","WHITE","onDestroy","update","module","exports","name","prefab","Prefab","ctor","nodePool","NodePool","getNode","data","parent","size","get","instantiate","pool","addChild","poolComponents","getComponentsInChildren","i","reuse","put","removeFromParent","unuse","onComplete","factory","toString","Object","prototype","InvalidStateError","message","Error","constructor","Stately","statesObject","initialStateName","call","resolveSpecialEventFn","stateName","fnName","property","stateStore","hasOwnProperty","toLowerCase","currentState","getMachineState","setMachineState","nextState","onEnterState","onLeaveState","eventName","arguments","lastState","caller","getMachineEvents","events","push","stateMachine","transition","nextEvent","onBeforeEvent","onAfterEvent","eventValue","apply","length","test","machine","define","amd","cell","Node","removeAllChildren","r","parseInt","Math","random","g","b","getComponent","setInfo","func","thisArg","args","nativeMax","max","overRest$1","transform","undefined","index","array","Array","otherArgs","identity","value","rest","initialParams","fn","callback","pop","applyEach$1","eachfn","fns","go","that","cb","concat","freeGlobal","global","freeSelf","root","Function","Symbol$1","Symbol","objectProto","nativeObjectToString","symToStringTag$1","toStringTag","getRawTag","isOwn","tag","unmasked","e","result","nativeObjectToString$1","objectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","isObject","type","asyncTag","funcTag","genTag","proxyTag","isFunction","MAX_SAFE_INTEGER","isLength","isArrayLike","breakLoop","noop","once","callFn","iteratorSymbol","iterator","getIterator","coll","baseTimes","n","iteratee","isObjectLike","argsTag","baseIsArguments","objectProto$3","hasOwnProperty$2","propertyIsEnumerable","isArguments","isArray","freeExports","nodeType","freeModule","Buffer","isBuffer","MAX_SAFE_INTEGER$1","reIsUint","isIndex","typedArrayTags","freeExports$1","freeModule$1","freeProcess","process","nodeUtil","binding","nodeIsTypedArray","isTypedArray","hasOwnProperty$1","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","key","objectProto$5","nativeKeys","arg","overArg","keys","hasOwnProperty$3","baseKeys","object","Ctor","createArrayIterator","len","createES2015Iterator","item","next","done","createObjectIterator","obj","okeys","onlyOnce","_eachOfLimit","limit","nextElem","running","iterateeCallback","err","replenish","elem","eachOfLimit","doLimit","iterable","eachOfArrayLike","completed","iteratorCallback","eachOfGeneric","Infinity","eachOf","doParallel","_asyncMap","arr","results","counter","_","v","map","applyEach","doParallelLimit","mapLimit","mapSeries","applyEachSeries","apply$2","callArgs","asyncify","then","arrayEach","baseFor","keysFunc","props","baseForOwn","baseFindIndex","predicate","fromIndex","fromRight","baseIsNaN","strictIndexOf","baseIndexOf","auto","tasks","concurrency","numTasks","runningTasks","hasError","listeners","create","readyTasks","readyToCheck","uncheckedDependencies","enqueueTask","task","runTask","processQueue","shift","run","taskCallback","safeResults","val","rkey","taskFn","getDependents","taskName","dependencies","slice","remainingDependencies","dependencyName","join","taskListeners","dependent","checkForDeadlocks","arrayMap","symbolTag","isSymbol","INFINITY","symbolProto","symbolToString","baseToString","baseSlice","end","castSlice","charsEndIndex","strSymbols","chrSymbols","charsStartIndex","asciiToArray","string","split","reHasUnicode","RegExp","hasUnicode","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","unicodeToArray","match","stringToArray","reTrim","trim","chars","guard","replace","FN_ARGS","FN_ARG_SPLIT","FN_ARG","STRIP_COMMENTS","parseParams","autoInject","newTasks","params","newTask","taskCb","newArgs","hasSetImmediate","setImmediate","hasNextTick","nextTick","fallback","setTimeout","wrap","defer","setImmediate$1","DLL","head","tail","setInitial","dll","queue","worker","payload","_insert","insertAtFront","q","started","idle","drain","l","_tasks","unshift","_next","workers","_workersList","splice","error","buffer","unsaturated","isProcessing","saturated","empty","paused","kill","min","workersList","pause","resume","cargo","removeLink","prev","insertAfter","newNode","insertBefore","eachOfSeries","reduce","memo","x","seq$1","functions","newargs","nextargs","compose","reverse","concat$1","y","concatSeries","constant","values","ignoredArgs","_createTester","check","getResult","testResult","testPassed","_findGetResult","detect","detectLimit","detectSeries","consoleFunc","dir","doDuring","truth","doWhilst","doUntil","during","_withoutIndex","eachLimit","eachLimit$1","eachSeries","ensureAsync","sync","innerArgs","notId","every","everyLimit","everySeries","baseProperty","filterArray","truthValues","filterGeneric","sort","a","_filter","filter","filterLimit","filterSeries","forever","errback","mapValuesLimit","newObj","mapValues","mapValuesSeries","has","memoize","hasher","queues","memoized","unmemoized","_parallel","parallelLimit","parallelLimit$1","queue$1","items","priorityQueue","priority","nextNode","race","TypeError","reduceRight","reflect","reflectCallback","cbArgs","reject$1","reject","reflectAll","rejectLimit","rejectSeries","constant$1","retry","opts","options","times","intervalFunc","acc","t","interval","errorFilter","parseTimes","attempt","retryAttempt","retryable","series","some","Boolean","someLimit","someSeries","sortBy","comparator","left","right","criteria","timeout","asyncFn","milliseconds","info","originalCallback","timer","timedOut","injectedCallback","clearTimeout","timeoutCallback","code","origCallback","nativeCeil","ceil","nativeMax$1","baseRange","step","timeLimit","count","timesSeries","accumulator","k","unmemoize","whilst","until","waterfall","taskIndex","nextTask","each","parallel","seq","timesLimit","all","any","forEach","forEachSeries","forEachLimit","forEachOf","forEachOfSeries","forEachOfLimit","inject","foldl","foldr","select","selectLimit","selectSeries","wrapSync","allLimit","allSeries","anyLimit","anySeries","find","findLimit","findSeries","defineProperty","async","junguan","hp","attack","findX","PoolComponent","require","game","soundManager","playEffect","gameSound","dao_dan_bao_zha","init","group","angle","animation","Animation","_isinit","playAdditive","spriteFrames","gameUtils","getSpriteFrames","bomb_atlas","aniName","flashClip","AnimationClip","createWithSpriteFrames","wrapMode","WrapMode","Normal","addClip","play","destroy","bind","fire","addSpeedY","range","qing_xing_qiang_jie4","idx","hd","PI","speedX","cos","width","speedY","sin","curRange","bullet_atlas","fireClip","Loop","state","active","assign","emit","dt","qing_xing_qiang_jie2","_isInit","prefabName","readyClip","curPos","qing_xing_qiang_jie1","clip","zhong_xing_qiang_jie5","startClip","_spriteFrames","_lastPos","_curPos","rotation","getRotation","gong_fu_bo_dong_quan","qing_xing_qiang_jie3","up","switchBtn","shoot","on","EventType","TOUCH_START","upTouchStart","TOUCH_END","upTouchEnd","TOUCH_CANCEL","switchTouchStart","switchTouchEnd","shootStart","shootEnd","off","leftTouchStart","gameControl","leftTouchEnd","rightTouchStart","rightTouchEnd","downTouchStart","down","downTouchEnd","weapons","touchDown","joystick","btnContinue","sys","os","OS_ANDROID","OS_IOS","addComponent","enterGame","levelGame","TOUCH_MOVE","on_touch_move","TOUCH_ENDED","getLocation","delta","getDelta","draw","clear","lineTo","drawNow","colors","YELLOW","BLUE","GREEN","colorIndex","p","c","Graphics","strokeColor","moveTo","close","stroke","fill","p1","p2","_isMove","attackTme","emitMove","onFindEnter","onFindExit","sendTime","targets","target","isDeath","indexOf","isOver","bingTime","fff","nextBin","bingPos","convertToWorldSpaceAR","gameConfig","guanKaInfo","config","bingList","j","bing","HpComponent","progressBar","ProgressBar","onHurt","curHp","isShow","opacity","showTime","updateBar","totalHp","zy","progress","format","hurt","hurtValue","shooting","shoot_start","shoot_end","hps","maxSpeed","jumps","jumpSpeed","drag","onKeyDown","onKeyUp","_moveFlags","roleState","_up","jumping","zIndex","body","RigidBody","gameAction","MOVE_LEFT","MOVE_RIGHT","_upPressed","onBeginContact","onEndContact","onPreSolve","onPostSolve","linearVelocity","abs","setState","mapRect","bulletName","sendNode","shootNum","shoot_num","shootPos","point1","targetPos","point2","scaleX","box","BoxCollider","parentBox","PhysicsBoxCollider","offset","setRoleState","death","gameOver","collision_shoot_start","shootIng","Collider","sp","timeScale","changeAction","Skeleton","spine","setStartListener","trackEntry","setCompleteListener","animationName","setAnimation","curAction","setMix","pos","aniNames","default","widget","Widget","updateAlignment","getBoundingBox","minX","maxX","winSize","minY","maxY","height","lateUpdate","Vec2","ZERO","nodepos","convertToNodeSpaceAR","position","jump","crouch","guan1_1","load_scene","popup_prefab","closed_prefab","moveLeft","scrollView","ScrollView","jiaose","zhangLabel","Label","shangBtn","Button","xiaBtn","list","localStorage","getItem","setItem","num","curNum","curZhang","curGuan","guankazhangs","zhangNodeList","curIndex","zhang","content","_i","updateBtnState","interactable","updataMap","onShang","onXia","playMusic","bgm1_1","onClosed","gameEvent","gameScene","hall","addEvent","win","getPhysicsManager","gamePopup","gameOver_win","bgm_win","gameOver_loss","bgm_lose","onBackHome","onReStart","gameGuanka","url","gamePause","gameMain","mapEdit","roleEdit","bao_zha_jing_bao","bgm1_2","bgm1_3","bgm2_1","bgm2_2","bgm2_3","bgm2_4","bgm3_1","bgm3_2","bgm3_3","bgm4_1","bgm4_2","bgm4_3","bgm4_4","bi_sha_yin_xiao1","bi_sha_yin_xiao2","bi_sha_yin_xiao3","bo_li_po_sui","boss_jing_bao","bu_chong_dan_yao","chong_xing_qiang_jie1","chong_xing_qiang_jie2","chong_xing_qiang_jie3","chong_xing_qiang_jie4","chong_xing_qiang_jie5","chong_xing_qiang_jie6","chong_xing_qiang_jie7","chu_shui","da_bao_zha","da_ji_sheng_yin","da_tiao_yue","da_xiang_jiao_sheng","di_bing_si_wang01","di_bing_si_wang02","di_bing_si_wang03","di_bing_si_wang04","e_yu1","fei_ji_fei_guo","fei_ji_fei_lai","fei_ji_fei_zou","fei_ji_jin_ru","fei_ji_tiao_chu","gong_fu_da_xiao","gong_fu_sheng_long_quan","gong_fu_xuan_feng_tui","gong_gong_ji1","gong_gong_ji2","gong_ji","hong_zha_ji_luo_dan","huo_che1","huo_che2","huo_jian_fa_she","ji_fen_yin_xiao","ji_guang_pao","ji_qiang1","ji_qiang2","ji_qiang3","ji_qiang4","ji_qiang5","ji_qiang6","ji_qiang7","ji_qiang8","jian_dao_fen_shu","kan_dao","kong_zi_dan","luo_shui","ma_sheng_yin1","ma_sheng_yin2","mu_xiang_po_sui","op","qia_che_cha_che","qia_che_kai_dong","reng_shou_lei","shi_bing_shou_liang","shou_lei_bao_zha","shou_qiang_shang_zi_dan","tan_ke_she_ji","tan_ke_yun_xing","teng_tiao","wen_chong1","wen_chong2","xi_xie_cao_gong_ji","xiao_dao01","xiao_dao02","xiao_dao03","xiao_dao04","xiao_dao_chu_dao","xiao_gui_chang_lao_si_wang","xiao_gui_chui_jian","xiao_gui_gong_ji","xiao_gui_si_wang","xiao_gui_zhan_li","xiao_yin1","xiao_yin2","xiao_yin3","xiao_yin4","zha_lan_kai_qi","zhi_sheng_fei_ji","zhong_dan1","zhong_dan2","zhong_xing_qiang_jie1","zhong_xing_qiang_jie2","zhong_xing_qiang_jie3","zhong_xing_qiang_jie4","zhu_jiao_si_wang1","zhu_jiao_si_wang2","atan2","standardRotation","limitRotation","getNextPos","getLength","sqrt","pow","atlas","textName","frames","frameName","jm","sprintf","frame","getSpriteFrame","de_bu","shootLen","de_jun","de_pao","hanjian","rb_bu","rb_qi","rb_quan","rb_zu","rb_wu","bl_man","bl_woman","stars","Sprite","label","gkIcon","guan","flg","onTouch","level","spriteFrame","ui_atlas","star","onEnterGame","event","hero","huaValue","huaLevel","updateHua","setHua","hueValue","mat","hueMatrix","red","v4","green","blue","material","getComponents","RenderComponent","getMaterial","setProperty","xRotateMat","rs","rc","yRotateMat","zRotateMat","matrixMult","temp","mat1000","hue","rot","mag","xrs","xrc","yrs","yrc","zrs","zrc","seq2","seq3","vale","v1","registries","fnTest","xyz","extend","prop","_super","tmp","ret","desc","set","_className","writable","attr","attrs","Random","seed","g_seed","randomMax","setSeed","getSeed","randomInt","round","randomDouble","randomRange","randomOdds","odds","EventEmitter","_events","_persistEvents","addListener","__createListener","__equalsListener","listener1","listener2","listener","onPersist","arg1","arg2","arg3","arg4","arg5","removeListener","o","removePersistListener","delListener","removeAllListeners","_emitPersist","handler","h","eventEmitter","em","removeEventListener","enableEvent","disableEvent","TagObject","_tags","removeAllTags","hasTag","hasTagAny","tags","hasTagAll","addTag","addTags","removeTag","removeTags","tagObject","Tag","enableTag","disableTag","Entity","guid","entityManager","_components","_componentsByClass","_componentGUID","entityId","_entitiesByTag","isEmptyObject","removeAllComponents","removeChild","removeEntity","children","without","components","componentsByClass","cClassName","className","bUsedName","singleton","vByClass","classAlias","onAdd","removeComponent","c_or_name","onRemove","removeComponents","_clip","origin","isEmpty","toJSON","et","entityType","cloneDeep","cs","_singleton","_nameReadOnly","entity","_entity","getName","_name","setName","getSignleton","getEntity","component","Factory","destory","C","eval","factories","EntityManager","__parseConfigInfo","_processors","_factories","_entityTypes","_pools","_entities","_entitiesByName","addFactory","addComponents","addProcessors","processors","addFactories","bArray","addProcessor","notAlias","addEntityType","addEntityTypes","f","removeFactory","removeProcessor","processor","createEntity","_opts","merge","addEntity","createEntityChildren","removeEntityChildren","_e","getEntityById","eid","getEntities","selector","entities","del","and","or","sprintfWrapper","exp","matches","strings","convCount","stringPosStart","stringPosEnd","matchPosEnd","newString","exec","lastIndex","substring","sign","pad","precision","negative","argument","substitution","convert","fromCharCode","parseFloat","toFixed","toUpperCase","nosign","_onTouchStart","_onTouchMove","_onTouchEnd","_isTouch","key_down","key_up","control","controlNode","tooltip","stick","maxRadius","Float","isTouch","_dir","_setStickPosition","jPos","setPosition","systemEvent","SystemEvent","KEY_DOWN","KEY_UP","keyCode","macro","KEY","d","w","s","progressNode","resLabel","barLabel","addPersistRootNode","curScene","loadScene","loader","onProgress","completedCount","totalCount","uuids","scene","lastId","onCompleteScene","id","lastIndexOf","_localStorage","removeItem","JSON","stringify","LARGE_ARRAY_SIZE","FUNC_ERROR_TEXT","PLACEHOLDER","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","HOT_COUNT","HOT_SPAN","MAX_INTEGER","NAN","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","arrayTag","boolTag","dateTag","domExcTag","errorTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsLower","rsMisc","rsUpper","rsMiscLower","rsMiscUpper","rsEmoji","reApos","reComboMark","reUnicodeWord","reHasUnicodeWord","contextProps","templateCounter","cloneableTags","stringEscapes","\\","'","\n","\r"," "," ","freeParseFloat","freeParseInt","moduleExports","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","addMapEntry","pair","addSetEntry","add","arrayAggregator","setter","arrayEachRight","arrayEvery","arrayFilter","resIndex","arrayIncludes","arrayIncludesWith","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","asciiWords","baseFindKey","collection","eachFunc","baseIndexOfWith","baseMean","baseSum","basePropertyOf","baseReduce","baseSortBy","comparer","current","baseToPairs","baseUnary","baseValues","cacheHas","cache","countHolders","placeholder","deburrLetter","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","escapeHtmlChar","&","<",">","\"","escapeStringChar","chr","getValue","hasUnicodeWord","iteratorToArray","mapToArray","replaceHolders","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","unescapeHtmlChar","&amp;","&lt;","&gt;","&quot;","&#39;","unicodeWords","runInContext","context","uid","defaults","pick","Date","arrayProto","funcProto","coreJsData","funcToString","idCounter","maskSrcKey","IE_PROTO","objectCtorString","oldDash","reIsNative","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","spreadableSymbol","isConcatSpreadable","symIterator","getNative","ctxClearTimeout","ctxNow","now","ctxSetTimeout","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","nativeIsFinite","isFinite","nativeJoin","nativeMin","nativeNow","nativeParseInt","nativeRandom","nativeReverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolValueOf","valueOf","lodash","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","entry","ListCache","MapCache","SetCache","__data__","Stack","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","configurable","enumerable","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","initCloneArray","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","escape","evaluate","interpolate","variable","imports","hash","getMapData","pairs","createBaseEach","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","createBaseFor","baseForRight","baseFunctions","baseGet","path","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGt","baseHas","baseHasIn","baseInRange","baseIntersection","arrays","othLength","othIndex","caches","maxLength","seen","baseInverter","baseInvoke","last","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","baseIteratee","baseMatchesProperty","baseMatches","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","iteratees","orders","getIteratee","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","baseShuffle","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","copy","cloneArrayBuffer","arrayBuffer","byteLength","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","isIterateeCall","createBind","isBind","createCtor","wrapper","createCaseFirst","methodName","charAt","trailing","createCompounder","words","deburr","thisBinding","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","isAry","isBindKey","isFlip","holdersCount","newHolders","reorder","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","createToPairs","createWrap","mergeData","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","isPartial","arrLength","arrValue","othValue","compared","objProps","objLength","skipCtor","objCtor","othCtor","flatten","otherFunc","symbol","stubArray","getView","transforms","getWrapDetails","hasPath","hasFunc","input","insertWrapDetails","details","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","srcBitmask","newBitmask","isCombo","oldArray","shortOut","reference","updateWrapDetails","lastCalled","stamp","remaining","rand","quote","memoizeCapped","difference","differenceBy","differenceWith","findIndex","findLastIndex","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","unzipWith","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","before","bindKey","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","leadingEdge","timerExpired","remainingWait","shouldInvoke","timeSinceLastCall","trailingEdge","debounced","isInvoking","cancel","flush","delay","resolver","Cache","negate","overArgs","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","remainder","isBinary","assignIn","assignInWith","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","omit","pickBy","toPairs","toPairsIn","camelCase","word","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","pattern","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","after","castArray","chunk","compact","cond","conforms","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functionsIn","initial","mapKeys","matchesProperty","nthArg","omitBy","orderBy","propertyOf","pullAllBy","pullAllWith","remove","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","spread","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","updateWith","valuesIn","zipObject","zipObjectDeep","entriesIn","extendWith","clamp","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","escapeRegExp","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","isBoolean","isElement","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","strLength","padEnd","padStart","radix","floating","repeat","sample","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","toLower","toSafeInteger","toUpper","trimEnd","trimStart","truncate","omission","search","newEnd","unescape","uniqueId","prefix","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","isRight","view","iterLength","takeCount","iterIndex","commit","wrapped","window","zhujueConfig","tween","delayTime","oBack","EVENT_ENGINE_INITED","points","PolygonCollider","PhysicsPolygonCollider","mapPoint","mapRotation","mapXList","startPoint","endPoint","targetRect","rect","bulletPool","firePool","bombPool","bingPool","SpriteAtlas","map_atlas","materias","Material","materia","resLoader","bg","popopNodes","loadingList","childList","autoRes","showNodes","isPopup","setScale","fadeIn","scaleTo","fadeOut","_scaleTo","msg","loadPrefab","poolComponent","loadRes","childrenCount","onClick","track","Enum","attack1","attack2","_skeleton","animations","duration","trackIndex","ra1","ra2","anim1","anim2","mixTime","onMove","clearTrack","addAnimation","onAim","onAttack1","onAttack2","onjump","switchSkin","aim","aimFlg","aimPos","pos1","pos2","weaponData","chubing","yList","_lastX","changeDirection","stageTouch","sp_skeleton_data","trackIndex2","weaponIndex","weapon","attackId","arm","findBone","armPos","worldX","worldY","armRotation","rotationLimit","rotationLimit1","rotationLimit2","aimY","setSkin","weaponPos","shootData","bomb1","bomb2","bomb3","shootFire","_musicUrl","_musicMute","_musicVolume","_effectList","_effectMute","_effectVolume","_curMusicId","musicMute","effectMute","musicVolume","effectVolume","audioEngine","stopMusic","setMusicVolume","stopAllEffects","setEffectsVolume","loop","afresh","resources","load","AudioClip","stop","pauseMusic","resumeMusic","checkEffect","setVolume","getState","stopEffect","stopAllEffect","attackTimeScale1","attackTimeScale2","Vector2","CircleCollider","setMaterial","worldPos","sx","psy","flip2","targetGroup","sendPos","dissolve","hua","mask","Mask","zhujiaoXue","zhujiaoWeapon","onGamePaues","canvas","on_touch_start","on_touch_end","touchPos","touch","on_mouse_move","txt","showPhysicsManager","physicsManager","debugDrawFlags","PhysicsManager","DrawBits","e_aabbBit","e_jointBit","e_shapeBit","showDebugDraw","showTest","RotateBy","_reverse","Number","str","fu","str2","d74d7172-1fa1-41e8-ae9e-1445ebea0cd8","c121fa0b-79d4-4da2-9501-b6f47d741f31","6893700d-458b-4d35-a7b4-13324ee4e80a","f9e4f40f-79e5-4a17-a89d-98190f3b0c1f","722f8927-0f8a-454c-a29a-451c3c78ddc6","d4920577-b3d4-48b1-b263-c2296232b89e","ba2eee8c-0715-4bce-a4a6-b869f819d7c8","1948c7a5-087a-46eb-92a8-ceeba2b119cb","53e07a1a-b349-47cd-9001-bf409925e79a","aceab0cc-a72f-4f67-a699-60f836d6597d","84f8d933-f260-4aa0-a747-bf9074997abc","76dddb12-e5dc-4569-a677-290b63ff9fc9","4ef34dfa-8f37-4487-ae66-47f8caff1cb2","ac99f0d4-f1a7-4383-8228-be069253714a","145be925-1992-4ede-ba47-c48fb0ac68f5","a1a251c5-123f-4f6d-815d-94657961f2a5","1f39306a-b852-4e2b-9743-5abe80628cbd","6d00b8b2-e61f-4abf-8ef7-99d2472512d8","39ec2272-d7cc-47f4-8ea7-8e95e168e269","2bcdf419-1e3e-434a-b178-3aff3599dfe1","25d2a150-8424-4374-8b88-ca504b7379ee","60a51721-5c82-4649-b09e-5a8cd3f556fb","4ac294cc-8060-4bae-8449-0c00998d6d64","a3f10d4b-8617-4002-8a6b-10b5ab5037e8","66584e35-8531-4b88-8da1-95f08dca7859","82bdfc19-5df3-49f2-b012-f1acc986d873","68588a96-c0f8-4d25-be2e-087f5da1774b","748536db-9909-4ac1-a12c-364d0aa53022","a450a7c0-4f64-47f0-a73d-1154469851d5","82a9b684-4c52-4f0c-904f-98282d700caa","b4b5aa8c-d9b4-45c8-9bcd-1a8e23e06ec2","2a4c8933-3824-49bd-b51c-4f41d2c5669f","a9094eb2-11ed-40fc-b6c6-cb53666c2ca6","1f9a16e3-a619-4eaf-bb25-d6046caecb9a","17a8720c-1a8a-4d2f-ae3f-0abf80ede220","edd686c3-69e1-4abb-95eb-937536448a80","784999e0-c15d-4cbc-884a-6454252e25d5","8a35ac54-2e27-44c0-8a89-bfb6190c0260","7dfd1234-d9a6-4e42-b0d9-43bfc7e9dbcf","5923f13c-05f1-4c37-9e84-b6a847ad8bec","42e52b4d-c8d9-44c0-b434-8f8122e073af","6a0ef7eb-70f3-4f0b-84c4-d2d2555f6713","77e9e707-4e99-46a0-a12b-8573de050390","382d9ea1-540d-49bc-80af-6dddb98615cd","bb79dbb4-3568-4b09-9f7c-e46abed3f4b0","added5c0-fd60-4bb0-a7d7-d3d47a2d0661","c6dbb023-0bdc-4afe-b1d2-7ac6c2a4c836","17814bcb-6bf6-4a5e-8cf6-69edd02371d9","7158748d-fef8-47af-8df1-cb2c938e5f02","62e4bf93-ae55-45d1-966e-0bc5f34c42fb","b5066e85-d3a7-4361-8093-6213c44c63b9","dc304605-47aa-4294-b956-836ea36d2e49","cc5a8177-2ff6-450f-9a32-66267f93dca7","cc35a6c0-9fee-4fd9-8586-5e6f9b4ca1ae","d9be01ee-f87c-4d1a-9710-2a34edb22a07","adf6919a-b418-4319-be48-bce33504ecc7","b5679139-1b0f-4c25-87ad-259c8bd8cdf5","4c6210cd-49a8-4ffc-a499-beda3d9f80e6","8ff34567-5577-4bc8-9466-be4fcd60b997","76000b4b-a75c-4cd2-be48-fc78fb02db8f","ceec43ef-13d4-4894-8467-f16c4eda962b","02481be8-e4bb-4981-8dbd-869ab7cdd022","c3c68ad3-d9ba-4bf3-b083-2cbc86b579ec","cf7d62ea-7b74-4ac6-a0ee-1a38740aec90","484b3047-5b17-41c8-8077-6696fbb48588","36329aef-0c59-4153-8481-d35dcbd2f515","f5f9cdc3-1cc3-4d9b-8f27-2aa388d69a4e","9be6ca02-0fca-4c8c-b25a-773e595bc89f","7c983613-6ba3-486a-b97b-294c1fc009f1","8d7309d1-df37-4232-926c-e37af479b59d","785ff632-b997-4849-b48b-e6215bdf590d","8ce30dd6-b74b-437c-897e-c1b37736b09a","b16e541e-9dbd-4f1f-bf65-ac0f3dee5ae8","6212f79b-8b44-49de-bb57-5ffe12546d4f","81173b70-1514-4264-b2ad-1e49ffd20ef2","da3314f5-2a03-41be-a516-5ddce4c1fb57","72b015e8-5388-453f-9c89-e33c2576ecff","8b2242ae-2e83-41fd-8c59-92f5c1284dbd","8f78eedb-98bc-409c-8226-731829480a38","053c4e8a-2aaa-4d53-8b37-480cb0739cc5","39c7784e-d3a0-4fa5-acab-cdfa17f571ea","ea4e3f35-a763-4fe2-9875-da968b5f5064","406ae0c7-be52-44d5-ad74-f8e408267574","828a49df-93ab-41ca-a0ea-eb6a11bdd6c1","7b7e5b14-b647-442a-81c8-3ff9f88cdb8b","19ad5542-1625-4503-b262-c50bcd8dfa5a","eea41dcb-74ed-4375-af75-196f04dc61e1","6a7bf3ac-2ceb-4147-9907-90b0af130e6a","2b5e460e-6cd1-4222-aa7f-aea47d72d9d3","fddbdf19-62e7-44db-bd2f-7ed3720a7528","ea4ba105-01a6-4c25-862c-05766f22a1eb","243beeb9-3d54-468e-8a38-ae9acc3b20fc","9c0e4762-b897-497d-91e9-007b3dae08a6","74e2c78b-95c1-4ca8-863c-863f5530b19b","fb01ddd8-3646-49c5-92c8-d029688a0b10","60ce20b3-e1d4-405e-b256-fbc15778bd37","00436054-5924-49ae-80a5-45fdf18ad5d6","a91971a2-780c-4111-aa6a-f7b8d5e4ea3e","23a0228e-17f7-4e06-8f19-8a066578f08f","b2e813aa-e29e-4342-9bcc-19ef1edc54ec","bc38dff1-da3b-4339-a4fb-8690144a7bff","caf67b9f-4c4e-4938-90e6-9a8c51a191fc","e5bd938e-a6b2-401e-951d-3e6ec80d0ff7","a7c6985c-3b59-49de-b559-40c1f1564db6","0675de16-7951-4d80-ba38-63b8feb9b2a1","71461f37-447a-4888-85b8-b2e588fce6e7","96f9f85b-bd87-4fa5-b1b9-8240f14ac4eb","70bbdde9-d486-4bc2-90e0-a8c7af97ae41","21c38d01-bfe3-42e3-8efb-cd0a8c61faa0","aab9d84e-2069-4f49-a121-c8b64dc52e79","d7e49f6d-22a5-43b3-be52-d932cd55f0c7","6d7efd66-f60d-4877-b925-616f38315c81","ef50fb6e-2f96-4ec6-9904-9a34b85c26b6","e3deaadc-f5a4-4869-a011-fc932cb5d30a","b5d94dc8-a07e-42d2-b464-fea03b79340c","cfa5d072-9c4d-4a44-93c9-25fd62d61309","9f25e94a-1146-41e3-95c0-c99c4082125c","68e72ccb-9e6b-475b-8dc9-cb4d03febca8","d554fe6f-d7b2-4e39-96e4-ad2d381b3626","73769868-e8fb-4cb9-88b3-5b049d783b6f","6bd765f7-c5cf-4501-9ccd-f53b0680bd1f","edc78f33-856c-4578-8f1d-c74f3c6df9cd","13ee1ed9-4525-4a42-adc7-1bd6cd4a8ec3","4c0fca4c-f5b1-4a72-a2da-e672d3d1dd17","1ce5dd04-7251-4163-913f-3e15555185bf","ef562280-0de4-4d7d-913b-f52bb6efb4f0","cef8102c-baf1-4573-8f8a-7eef5140fb11","7c028552-b4aa-4d85-bbe3-5bfe4db4a81b","4f9c0f60-474a-4556-81d8-f971cd623a85","ce85cbaa-0a78-4374-8d2e-8a4aa1fae41c","9e025219-615a-46be-bfdb-b07237e9805e","d7a9af53-c9e9-40ed-8efe-13f8191e44e2","1a5642f7-d86c-4069-bd3d-1cc6dc9dbdd6","c644ab44-e1f2-4db5-b6c5-2d8dca7859b9","0b2a09d8-081b-42c8-95c5-214faa5789f4","8acfa13a-a57f-421f-a95d-211d97ee7f3e","5e46b8f8-c6fe-49f4-8523-003a3fbb7201","2137eb51-7702-41a3-b3c2-ab98f2a81ac0","fc667369-8869-4f52-a6c3-e9955b092e74","c18fb841-23a1-4af4-8f1a-64ba916a5725","5e9f609d-a95f-433b-acc5-d32d36837f98","bd39a5c9-0e7d-47c3-b57c-3631fb82dc65","afba2962-98f0-4f31-924d-2f93937dfb7c","12279e82-9382-42b2-a883-4d4494cf5305","faef6d38-dbd9-4b3b-9b77-5f3d435299db","e9420ee6-2c99-4f1a-99f8-4accdc37eb96","90dbd414-a83e-4619-a8ab-e5633b0b59b0","212fe3f6-8663-4d50-9d8c-682f6e4c20d6","7e51dda1-06dd-4fd5-9181-27c3aa6b6be0","75a96c1e-8a17-47c3-b67e-0ae4dd88f5bf","7349f8cb-3f82-47a2-8007-0da7426ffee5","aa662cf7-9fa7-49f2-97e1-15249ccbdc3c","a424fbd2-991a-47cc-8c62-3892f6045a00","5bbbc6aa-c77a-4f8a-a37f-3b3cfc8449c4","c9f8e421-20e1-4a76-acef-d0d0732ddcaa","c3d01c9f-06f6-487e-8b99-957723041898","b74a1d9b-be79-4ad6-bea4-dfdacb389997","50bb7197-d7d8-4837-9de1-82e2b1dfa773","4a1b3fc5-0aec-44a7-8b91-b55e0b8c17f2","6b129464-2a51-4763-9944-fe99e5971c72","fb6d40da-2dbc-448e-a5f3-6defca3a36ea","6fdceaf3-db4c-4eb6-ad92-3c8bec1edccf","9a4afb81-d4ae-4f99-94ae-2214e513646e","4481caf5-0fa1-4282-a9b2-95a1c9df9b8f","10c5b3ef-952e-4497-8710-2080fcac9c16","c29ee5ce-f9d5-4635-84e8-206eeb97b576","a8e86f80-c28a-47c9-bb3e-cc114500cb66","5f8934bd-e457-43bc-b6ce-3c1e1e43272c","b05cc512-0023-438b-affc-5efb61fa6d67","c8a124bf-5a70-4b51-8584-2ff1e9090cf1","924daa2a-c30d-460e-870f-7d167f76f0e1","b30db9cc-97bb-4978-bfbf-c678f6a4e7f4","7f96de80-6290-4af2-972f-66a96eff7815","46d88b77-fd4e-46b9-9c83-5a87b7ed85b5","1a12f395-f854-449d-a9b7-84b9af33ff5d","10617c07-9c0a-4077-9017-5e23cd66e265","b908855b-451b-4a35-8626-9be644c51c1a","c39cd3c7-3c5c-4c11-bd5a-c7878a568168","3bf4636a-ac47-4981-b30c-a8a09b945604","e224540e-9273-4521-962d-518e27c94db5","735f3df8-c7e1-45ac-b398-4cd945525615","79c2a587-a61b-4ef0-93d5-cc2b4bf7699b","96251dca-50dd-4c6d-a462-4c3fc223c48b","7941fe60-bb88-4551-b05b-705ded65b9aa","ae822c9f-5d0d-4ab1-9b37-555aee7abd8c","58994d51-c7af-4fcb-8186-89e81c5e8973","af435d6b-8897-4054-8163-b30288b37dc6","d28e0554-cd1e-4a9f-808c-d5e47e6884fc","2aeeee88-9d07-4d71-967e-ca6ff2f9d42a","b8c260e8-1108-434e-a19f-e3d8abf4d08a","ad8bb846-4d36-48fc-b7bb-43e2a9f2000e","a06a81e2-0c87-44e3-922a-65ed73992dad","d2b78e13-308b-4ba5-90b1-524f5d4f8d5a","e76a360a-16cc-41e1-b156-80579989b315","b318b1f8-4379-4bca-a42d-08d9a43e5996","fb077dee-7461-4727-953e-a7f934db8cd8","62ccc97a-0ed0-4912-a063-532c0854a359","d778568d-148b-4e0b-8d21-758705a4e1ac","ee90971f-2c1d-4cb2-9795-5c94c19c6916","9af5ef60-fc6d-4245-a87d-01f482587470","6cba3c31-1ee9-4041-9d93-9a8aa25d3591","ee880050-75b2-4203-933d-03579f54a416","d9609912-b99d-4472-ad90-705944fe5781","0ae7f48f-7b94-4a8a-b663-f4daa5a8f24c","784aab60-1595-4fe4-8c67-623eca92cd5e","e3f712fe-b9a8-4c6f-b78a-7a1818ca1dc6","7b3bf0b7-b05f-48fe-b8e0-58088860455a","3d12b588-94ae-4005-91a8-f8a4823544e8","90603e77-1a6a-4075-a5d0-9c262e2992bc","47428093-6708-414b-bd16-9a9709ff7a98","c17e2eca-6072-4af0-9f4e-e8fd089a3d1d","b2179323-b8b2-4aea-ba9e-2938db071b72","6213aa0b-5d14-4413-89f7-33f46fcbec44","30f6433a-b584-4f8a-9ed8-b3af0cbe26b5","9bfd3f2e-a7dd-4ce6-b516-294820c72f6b","8469bf2e-700c-46f6-ba02-29205890033f","9a0754c7-f627-45a2-8d5b-1e2d24770705","9f341c3c-f148-4e75-9061-a57f89b97535","181f2173-ea11-4515-86ef-a18b99c7effb","7e0ddc9c-6538-4924-be43-7ff9a24d8939","c9bef81a-cf66-4835-b27d-c428fe0b9534","54fb58de-2046-4b43-94e7-f2e94d2bf375","090f4474-8326-4ee1-9ab3-3b61e3edd720","440b6d6a-696a-436a-b835-e76f93897ba0","afd47a59-cfd7-4538-a7c2-8c0d835f6103","27005419-26ee-4d0e-b800-71655458fc98","9fc247b8-f7af-4c76-91c7-798e4980d468","ba601b5a-a671-4923-86c7-b95bd4bead22","9b0bb07f-21ee-462f-bd16-27d3e7503a03","9be7b5e4-2032-4cb3-990e-102e32d4dc47","b8a607e2-d40d-406a-abff-33fe820c3522","f63c0b96-6717-4c63-bbd4-a87efcfeafa2","94d5569c-5c26-48f2-9ab8-837feb93972e","f91294bd-8ac0-4d46-bae6-1bf7b3440453","17d00811-a977-43e5-b274-aa5fe9c34fa2","0a2dd1d7-fcef-455a-9058-867c7aeecdf8","9b2d9fda-3564-4310-88f5-369c25356f8e","beb80f1b-7edd-4cbc-b80e-dcf3a9387b88","74242578-1c17-48d2-9751-6352836deaea","5cd22f2d-1bc4-4194-be95-a5cf80543187","d6a74371-7ebf-4940-8a5c-6d28e20469d5","c3d3ee02-2adb-4f93-927a-bfa2b6f31f6d","8196b422-d426-40e3-86b5-af8093f95558","ba6c7efe-15de-49c4-adb6-daf8c1ceabc5","4cd24669-e56c-45c7-bd29-b7f868a4666f","childNode","1","bid","2","3","4"],"mappings":"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","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        gravity: -1000,//重力\r\n    },\r\n    onLoad() {\r\n\r\n\r\n        this.speed = cc.v2(0, 0);//速度\r\n        this.prePosition = cc.v2();\r\n        this.preStep = cc.v2();\r\n        this._lastSpeedY = 0;\r\n    },\r\n    onEnable: function () {\r\n        cc.director.getCollisionManager().enabled = true;\r\n        cc.director.getCollisionManager().enabledDebugDraw = true;\r\n    },\r\n    onDisable: function () {\r\n        cc.director.getCollisionManager().enabled = false;\r\n        cc.director.getCollisionManager().enabledDebugDraw = false;\r\n    },\r\n    start() {\r\n    },\r\n    /**\r\n     * 当碰撞产生的时候调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionEnter: function (other, self) {\r\n\r\n        this.node.color = cc.Color.RED;\r\n        this.touchingNumber ++;\r\n\r\n\r\n        console.log('on collision enter');\r\n        // // 碰撞系统会计算出碰撞组件在世界坐标系下的相关的值，并放到 world 这个属性里面\r\n        // var world = self.world;\r\n        // // 碰撞组件的 aabb 碰撞框\r\n        // var aabb = world.aabb;\r\n        // // 节点碰撞前上一帧 aabb 碰撞框的位置\r\n        // var preAabb = world.preAabb;\r\n        // // 碰撞框的世界矩阵\r\n        // var t = world.transform;\r\n        // // 以下属性为圆形碰撞组件特有属性\r\n        // var r = world.radius;\r\n        // var p = world.position;\r\n        // // 以下属性为 矩形 和 多边形 碰\r\n\r\n\r\n        // 1st step\r\n        // get pre aabb, go back before collision\r\n        var otherAabb = other.world.aabb;\r\n        var otherPreAabb = other.world.preAabb.clone();\r\n\r\n        var selfAabb = self.world.aabb;\r\n        var selfPreAabb = self.world.preAabb.clone();\r\n        //cc.log(otherAabb,otherPreAabb);\r\n\r\n\r\n\r\n        // // 2nd step\r\n        // //向前x轴，检查x轴是否碰撞\r\n        // selfPreAabb.x = selfAabb.x;\r\n        // otherPreAabb.x = otherAabb.x;\r\n        // if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\r\n        //     if (this.speed.x < 0 && (selfPreAabb.xMax > otherPreAabb.xMax)) {\r\n        //         this.node.x = otherPreAabb.xMax - this.node.parent.x;\r\n        //         this.collisionX = -1;\r\n        //     }\r\n        //     else if (this.speed.x > 0 && (selfPreAabb.xMin < otherPreAabb.xMin)) {\r\n        //         this.node.x = otherPreAabb.xMin - selfPreAabb.width - this.node.parent.x;\r\n        //         this.collisionX = 1;\r\n        //     }\r\n        //\r\n        //     this.speed.x = 0;\r\n        //     other.touchingX = true;\r\n        //     return;s\r\n        // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n    /**\r\n     * 当碰撞产生后，碰撞结束前的情况下，每次计算碰撞结果后调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionStay: function (other, self) {\r\n        console.log('on collision stay');\r\n    },\r\n    /**\r\n     * 当碰撞结束后调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionExit: function (other, self) {\r\n        console.log('on collision exit');\r\n        this.touchingNumber --;\r\n        if (this.touchingNumber === 0) {\r\n            this.node.color = cc.Color.WHITE;\r\n        }\r\n\r\n    },\r\n    onDestroy() {\r\n    },\r\n    update(dt) {\r\n    },\r\n});\r\n","module.exports = cc.Class({\r\n    name: 'NodePool',\r\n    properties: {\r\n        prefab: cc.Prefab\r\n    },\r\n    ctor() {\r\n        this.nodePool = new cc.NodePool();\r\n    },\r\n    //获取一个节点\r\n    getNode: function (data, parent) {\r\n        let node = null;\r\n        if (this.nodePool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\r\n            node = this.nodePool.get();\r\n        } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\r\n            node = cc.instantiate(this.prefab);\r\n            node.pool = this;\r\n        }\r\n        if (parent) parent.addChild(node);\r\n        let poolComponents = node.getComponentsInChildren(\"PoolComponent\");\r\n        for (let i in poolComponents) {\r\n            let poolComponent = poolComponents[i];\r\n            poolComponent.reuse(data); //启用\r\n        }\r\n        return node;\r\n    },\r\n    put: function (node) {\r\n        node.removeFromParent();\r\n        this.nodePool.put(node); // 通过之前传入的管理类实例回收子弹\r\n        let poolComponents = node.getComponentsInChildren(\"PoolComponent\");\r\n        for (let i in poolComponents) {\r\n            let poolComponent = poolComponents[i];\r\n            poolComponent.unuse(); //启用\r\n        }\r\n    }\r\n});","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n    },\r\n    onComplete: function () {\r\n    }\r\n});\r\n","/*\n * Stately.js: A JavaScript based finite-state machine (FSM) engine.\n *\n * Copyright (c) 2012 Florian Schäfer (florian.schaefer@gmail.com)\n * Released under MIT license.\n *\n * Version: 2.0.0\n *\n */\n(function (root, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        root.Stately = factory();\n    }\n})(this, function () {\n\n    var\n        toString = Object.prototype.toString,\n\n        InvalidStateError = (function () {\n\n            function InvalidStateError(message) {\n\n                this.name = 'InvalidStateError';\n\n                this.message = message;\n            }\n\n            InvalidStateError.prototype = new Error();\n\n            InvalidStateError.prototype.constructor = InvalidStateError;\n\n            return InvalidStateError;\n        })();\n\n    function Stately(statesObject, initialStateName) {\n\n        if (typeof statesObject === 'function') {\n\n            statesObject = statesObject();\n        }\n\n        if (toString.call(statesObject) !== '[object Object]') {\n\n            throw new InvalidStateError('Stately.js: Invalid states object: `' + statesObject + '`.');\n        }\n\n        function resolveSpecialEventFn(stateName, fnName) {\n\n            for (var property in stateStore[stateName]) {\n\n                if (stateStore[stateName].hasOwnProperty(property)) {\n\n                    if (property.toLowerCase() === fnName.toLowerCase()) {\n\n                        return stateStore[stateName][property];\n\n                    }\n                }\n            }\n        }\n\n        var\n            currentState,\n\n            stateStore = {\n\n                getMachineState: function getMachineState() {\n\n                    return currentState.name;\n                },\n\n                setMachineState: function setMachineState(nextState /*, eventName */) {\n\n                    var\n                        eventName = arguments[1],\n\n                        onEnterState,\n\n                        onLeaveState,\n\n                        lastState = currentState;\n\n                    if (typeof nextState === 'string') {\n\n                        nextState = stateStore[nextState];\n\n                    }\n\n                    if (!nextState || !nextState.name || !stateStore[nextState.name]) {\n\n                        throw new InvalidStateError('Stately.js: Transitioned into invalid state: `' + setMachineState.caller + '`.');\n                    }\n\n                    currentState = nextState;\n\n                    onLeaveState = resolveSpecialEventFn(lastState.name, \"onLeave\");\n\n                    if (onLeaveState && typeof onLeaveState === 'function') {\n\n                        onLeaveState.call(stateStore, eventName, lastState.name, currentState.name);\n                    }\n\n                    onEnterState = resolveSpecialEventFn(currentState.name, \"onEnter\");\n\n                    if (onEnterState && typeof onEnterState === 'function') {\n\n                        onEnterState.call(stateStore, eventName, lastState.name, nextState.name);\n                    }\n\n                    return this;\n                },\n\n                getMachineEvents: function getMachineEvents() {\n\n                    var events = [];\n\n                    for (var property in currentState) {\n\n                        if (currentState.hasOwnProperty(property)) {\n\n                            if (typeof currentState[property] === 'function') {\n\n                                events.push(property);\n                            }\n                        }\n                    }\n\n                    return events;\n                }\n\n            },\n\n            stateMachine = {\n\n                getMachineState: stateStore.getMachineState,\n\n                getMachineEvents: stateStore.getMachineEvents\n\n            },\n\n            transition = function transition(stateName, eventName, nextEvent) {\n\n                return function event() {\n\n                    var\n                        onBeforeEvent,\n\n                        onAfterEvent,\n\n                        nextState,\n\n                        eventValue = stateMachine;\n\n                    if (stateStore[stateName] !== currentState) {\n\n                        if (nextEvent) {\n\n                            eventValue = nextEvent.apply(stateStore, arguments);\n                        }\n\n                        return eventValue;\n                    }\n\n                    onBeforeEvent = resolveSpecialEventFn(currentState.name, \"onBefore\" + eventName);\n\n                    if (onBeforeEvent && typeof onBeforeEvent === 'function') {\n\n                        onBeforeEvent.call(stateStore, eventName, currentState.name, currentState.name);\n                    }\n\n                    eventValue = stateStore[stateName][eventName].apply(stateStore, arguments);\n\n                    if (typeof eventValue === 'undefined') {\n\n                        nextState = currentState;\n\n                        eventValue = stateMachine;\n\n                    } else if (typeof eventValue === 'string') {\n\n                        nextState = stateStore[eventValue];\n\n                        eventValue = stateMachine;\n\n                    } else if (toString.call(eventValue) === '[object Object]') {\n\n                        nextState = (eventValue === stateStore ? currentState : eventValue);\n\n                        eventValue = stateMachine;\n\n                    } else if (toString.call(eventValue) === '[object Array]' && eventValue.length >= 1) {\n\n                        if (typeof eventValue[0] === 'string') {\n\n                            nextState = stateStore[eventValue[0]];\n\n                        } else {\n\n                            nextState = eventValue[0];\n\n                        }\n\n                        eventValue = eventValue[1];\n                    }\n\n                    onAfterEvent = resolveSpecialEventFn(currentState.name, \"onAfter\" + eventName);\n\n                    if (onAfterEvent && typeof onAfterEvent === 'function') {\n\n                        onAfterEvent.call(stateStore, eventName, currentState.name, nextState.name);\n                    }\n\n                    stateStore.setMachineState(nextState, eventName);\n\n                    return eventValue;\n                };\n            };\n\n        for (var stateName in statesObject) {\n\n            if (statesObject.hasOwnProperty(stateName)) {\n\n                stateStore[stateName] = statesObject[stateName];\n\n                for (var eventName in stateStore[stateName]) {\n\n                    if (stateStore[stateName].hasOwnProperty(eventName)) {\n\n                        if (typeof stateStore[stateName][eventName] === 'string') {\n\n                            stateStore[stateName][eventName] = (function (stateName) {\n\n                                return function event() {\n\n                                    return this[stateName];\n                                };\n\n                            })(stateStore[stateName][eventName]);\n                        }\n\n                        if (\n                            typeof stateStore[stateName][eventName] === 'function'\n                                && !/^onEnter$/i.test(eventName)\n                                && !/^onLeave$/i.test(eventName)\n                                && !/^onBefore/i.test(eventName)\n                                && !/^onAfter/i.test(eventName)\n                        ) {\n\n                            stateMachine[eventName] = transition(stateName, eventName, stateMachine[eventName]);\n                        }\n                    }\n                }\n\n                stateStore[stateName].name = stateName;\n\n                if (!currentState) {\n\n                    currentState = stateStore[stateName];\n                }\n            }\n        }\n\n        if (typeof stateStore[initialStateName] !== 'undefined') {\n            currentState = stateStore[initialStateName];\n        }\n\n        if (!currentState) {\n\n            throw new InvalidStateError('Stately.js: Invalid initial state.');\n        }\n\n        return stateMachine;\n    }\n\n    Stately.machine = function machine(statesObject, initialStateName) {\n        return new Stately(statesObject, initialStateName);\n    };\n\n    Stately.InvalidStateError = InvalidStateError;\n\n    return Stately;\n\n});\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        cell: cc.Node\r\n    },\r\n    onLoad() {\r\n        this.node.removeAllChildren();\r\n        var num = 30;\r\n        for (let i = 0; i < num; i++) {\r\n            let cell = cc.instantiate(this.cell);\r\n            let r = parseInt(Math.random() * 255);\r\n            let g = parseInt(Math.random() * 255);\r\n            let b = parseInt(Math.random() * 255);\r\n            cell.color = cc.color(r, g, b);\r\n            cell.getComponent(\"itemTest\").setInfo(i);\r\n            this.node.addChild(cell);\r\n        }\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.async = global.async || {})));\n}(this, (function (exports) { 'use strict';\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest$1(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n// Lodash rest function without function.toString()\n// remappings\nfunction rest(func, start) {\n    return overRest$1(func, start, identity);\n}\n\nvar initialParams = function (fn) {\n    return rest(function (args /*..., callback*/) {\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    });\n};\n\nfunction applyEach$1(eachfn) {\n    return rest(function (fns, args) {\n        var go = initialParams(function (args, callback) {\n            var that = this;\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat(cb));\n            }, callback);\n        });\n        if (args.length) {\n            return go.apply(this, args);\n        } else {\n            return go;\n        }\n    });\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop = {};\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nvar iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nvar getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n};\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar objectTag = '[object Object]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$1.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? { value: coll[i], key: i } : null;\n    };\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done) return null;\n        i++;\n        return { value: item.value, key: i };\n    };\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? { value: obj[key], key: key } : null;\n    };\n}\n\nfunction iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function () {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nfunction _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            } else if (value === breakLoop || done && running <= 0) {\n                done = true;\n                return callback(null);\n            } else {\n                replenish();\n            }\n        }\n\n        function replenish() {\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n        }\n\n        replenish();\n    };\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, iteratee, callback);\n}\n\nfunction doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if (++completed === length || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nvar eachOf = function (coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, iteratee, callback);\n};\n\nfunction doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, iteratee, callback);\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines)\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nvar map = doParallel(_asyncMap);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument, `fns`, is provided, it will\n * return a function which lets you pass in the arguments as if it were a single\n * function call. The signature is `(..args, callback)`. If invoked with any\n * arguments, `callback` is required.\n * @example\n *\n * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async.applyEach([enableSearch, updateSchema]),\n *     callback\n * );\n */\nvar applyEach = applyEach$1(map);\n\nfunction doParallelLimit(fn) {\n    return function (obj, limit, iteratee, callback) {\n        return fn(_eachOfLimit(limit), obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a transformed\n * item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapLimit = doParallelLimit(_asyncMap);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapSeries = doLimit(mapLimit, 1);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument is provided, it will return\n * a function which lets you pass in the arguments as if it were a single\n * function call.\n */\nvar applyEachSeries = applyEach$1(mapSeries);\n\n/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nvar apply$2 = rest(function (fn, args) {\n    return rest(function (callArgs) {\n        return fn.apply(null, args.concat(callArgs));\n    });\n});\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2016 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function to convert to an\n * asynchronous function.\n * @returns {Function} An asynchronous wrapper of the `func`. To be invoked with\n * (callback).\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es6 example\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function (value) {\n                callback(null, value);\n            }, function (err) {\n                callback(err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * Determines the best order for running the functions in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the functions pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * Functions also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the function itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns undefined\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nvar auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || noop);\n    var keys$$1 = keys(tasks);\n    var numTasks = keys$$1.length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    baseForOwn(tasks, function (task, key) {\n        if (!isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        arrayEach(dependencies, function (dependencyName) {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key + '` has a non-existent dependency `' + dependencyName + '` in ' + dependencies.join(', '));\n            }\n            addListener(dependencyName, function () {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(function () {\n            runTask(key, task);\n        });\n    }\n\n    function processQueue() {\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while (readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        arrayEach(taskListeners, function (fn) {\n            fn();\n        });\n        processQueue();\n    }\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            runningTasks--;\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            if (err) {\n                var safeResults = {};\n                baseForOwn(results, function (val, rkey) {\n                    safeResults[rkey] = val;\n                });\n                safeResults[key] = args;\n                hasError = true;\n                listeners = Object.create(null);\n\n                callback(err, safeResults);\n            } else {\n                results[key] = args;\n                taskComplete(key);\n            }\n        }));\n\n        runningTasks++;\n        var taskFn = task[task.length - 1];\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            arrayEach(getDependents(currentTask), function (dependent) {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error('async.auto cannot execute tasks due to a recursive dependency');\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        baseForOwn(tasks, function (task, key) {\n            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n};\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\nvar symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\nvar rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange$1 = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nvar FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg) {\n        return trim(arg.replace(FN_ARG, ''));\n    });\n    return func;\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is a function of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    baseForOwn(tasks, function (taskFn, key) {\n        var params;\n\n        if (isArray(taskFn)) {\n            params = taskFn.slice(0, -1);\n            taskFn = taskFn[taskFn.length - 1];\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (taskFn.length === 1) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if (taskFn.length === 0 && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = arrayMap(params, function (name) {\n                return results[name];\n            });\n            newArgs.push(taskCb);\n            taskFn.apply(null, newArgs);\n        }\n    });\n\n    auto(newTasks, callback);\n}\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return rest(function (fn, args) {\n        defer(function () {\n            fn.apply(null, args);\n        });\n    });\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function (node) {\n    if (node.prev) node.prev.next = node.next;else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = DLL;\n\nDLL.prototype.insertAfter = function (node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function (node) {\n    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);\n};\n\nDLL.prototype.push = function (node) {\n    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);\n};\n\nDLL.prototype.shift = function () {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function () {\n    return this.tail && this.removeLink(this.tail);\n};\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    } else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                callback: callback || noop\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    }\n\n    function _next(tasks) {\n        return rest(function (args) {\n            workers -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n                var index = baseIndexOf(workersList, task, 0);\n                if (index >= 0) {\n                    workersList.splice(index);\n                }\n\n                task.callback.apply(task, args);\n\n                if (args[0] != null) {\n                    q.error(args[0], task.data);\n                }\n            }\n\n            if (workers <= q.concurrency - q.buffer) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n            q.process();\n        });\n    }\n\n    var workers = 0;\n    var workersList = [];\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        concurrency: concurrency,\n        payload: payload,\n        saturated: noop,\n        unsaturated: noop,\n        buffer: concurrency / 4,\n        empty: noop,\n        drain: noop,\n        error: noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = noop;\n            q._tasks.empty();\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var tasks = [],\n                    data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    data.push(node.data);\n                }\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n                workers += 1;\n                workersList.push(tasks[0]);\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                var cb = onlyOnce(_next(tasks));\n                worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return workers;\n        },\n        workersList: function () {\n            return workersList;\n        },\n        idle: function () {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function () {\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) {\n                return;\n            }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    return q;\n}\n\n/**\n * A cargo of tasks for the worker function to complete. Cargo inherits all of\n * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n * @typedef {Object} CargoObject\n * @memberOf module:ControlFlow\n * @property {Function} length - A function returning the number of items\n * waiting to be processed. Invoke like `cargo.length()`.\n * @property {number} payload - An `integer` for determining how many tasks\n * should be process per round. This property can be changed after a `cargo` is\n * created to alter the payload on-the-fly.\n * @property {Function} push - Adds `task` to the `queue`. The callback is\n * called once the `worker` has finished processing the task. Instead of a\n * single task, an array of `tasks` can be submitted. The respective callback is\n * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n * @property {Function} saturated - A callback that is called when the\n * `queue.length()` hits the concurrency and further tasks will be queued.\n * @property {Function} empty - A callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - A callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke like `cargo.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n */\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing an array\n * of queued tasks, which must call its `callback(err)` argument when finished,\n * with an optional `err` argument. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargo.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n */\nfunction cargo(worker, payload) {\n  return queue(worker, 1, payload);\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * `key` is the item's key, or index in the case of an array. The iteratee is\n * passed a `callback(err)` which must be called once it has completed. If no\n * error has occurred, the callback should be run without arguments or with an\n * explicit `null` argument. Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachOfSeries = doLimit(eachOfLimit, 1);\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback || noop);\n    eachOfSeries(coll, function (x, i, callback) {\n        iteratee(memo, x, function (err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, memo);\n    });\n}\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nvar seq$1 = rest(function seq(functions) {\n    return rest(function (args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = noop;\n        }\n\n        reduce(functions, args, function (newargs, fn, cb) {\n            fn.apply(that, newargs.concat(rest(function (err, nextargs) {\n                cb(err, nextargs);\n            })));\n        }, function (err, results) {\n            cb.apply(that, [err].concat(results));\n        });\n    });\n});\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nvar compose = rest(function (args) {\n  return seq$1.apply(null, args.reverse());\n});\n\nfunction concat$1(eachfn, arr, fn, callback) {\n    var result = [];\n    eachfn(arr, function (x, index, cb) {\n        fn(x, function (err, y) {\n            result = result.concat(y || []);\n            cb(err);\n        });\n    }, function (err) {\n        callback(err, result);\n    });\n}\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. There is no guarantee that the\n * results array will be returned in the original order of `coll` passed to the\n * `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nvar concat = doParallel(concat$1);\n\nfunction doSeries(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOfSeries, obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatSeries = doSeries(concat$1);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {Function} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nvar constant = rest(function (values) {\n    var args = [null].concat(values);\n    return initialParams(function (ignoredArgs, callback) {\n        return callback.apply(this, args);\n    });\n});\n\nfunction _createTester(check, getResult) {\n    return function (eachfn, arr, iteratee, cb) {\n        cb = cb || noop;\n        var testPassed = false;\n        var testResult;\n        eachfn(arr, function (value, _, callback) {\n            iteratee(value, function (err, result) {\n                if (err) {\n                    callback(err);\n                } else if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    callback(null, breakLoop);\n                } else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            if (err) {\n                cb(err);\n            } else {\n                cb(null, testPassed ? testResult : getResult(false));\n            }\n        });\n    };\n}\n\nfunction _findGetResult(v, x) {\n    return x;\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nvar detect = doParallel(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectLimit = doParallelLimit(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectSeries = doLimit(detectLimit, 1);\n\nfunction consoleFunc(name) {\n    return rest(function (fn, args) {\n        fn.apply(null, args.concat(rest(function (err, args) {\n            if (typeof console === 'object') {\n                if (err) {\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) {\n                    arrayEach(args, function (x) {\n                        console[name](x);\n                    });\n                }\n            }\n        })));\n    });\n}\n\n/**\n * Logs the result of an `async` function to the `console` using `console.dir`\n * to display the properties of the resulting object. Only works in Node.js or\n * in browsers that support `console.dir` and `console.error` (such as FF and\n * Chrome). If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n * the order of operations, the arguments `test` and `fn` are switched.\n *\n * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n * @name doDuring\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.during]{@link module:ControlFlow.during}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error if one occured, otherwise `null`.\n */\nfunction doDuring(fn, test, callback) {\n    callback = onlyOnce(callback || noop);\n\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        args.push(check);\n        test.apply(this, args);\n    });\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    check(null, true);\n}\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} iteratee - A function which is called each time `test`\n * passes. The function is passed a `callback(err)`, which must be called once\n * it has completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with the non-error callback results of \n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test.apply(this, args)) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `fn`. Invoked with the non-error callback results of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction doUntil(fn, test, callback) {\n    doWhilst(fn, function () {\n        return !test.apply(this, arguments);\n    }, callback);\n}\n\n/**\n * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n * is passed a callback in the form of `function (err, truth)`. If error is\n * passed to `test` or `fn`, the main callback is immediately called with the\n * value of the error.\n *\n * @name during\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (callback).\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error, if one occured, otherwise `null`.\n * @example\n *\n * var count = 0;\n *\n * async.during(\n *     function (callback) {\n *         return callback(null, count < 5);\n *     },\n *     function (callback) {\n *         count++;\n *         setTimeout(callback, 1000);\n *     },\n *     function (err) {\n *         // 5 seconds have passed\n *     }\n * );\n */\nfunction during(test, fn, callback) {\n    callback = onlyOnce(callback || noop);\n\n    function next(err) {\n        if (err) return callback(err);\n        test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    test(check);\n}\n\nfunction _withoutIndex(iteratee) {\n    return function (value, index, callback) {\n        return iteratee(value, callback);\n    };\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item\n * in `coll`. The iteratee is passed a `callback(err)` which must be called once\n * it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is not\n * passed to the iteratee. Invoked with (item, callback). If you need the index,\n * use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n  eachOf(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * iteratee is passed a `callback(err)` which must be called once it has\n * completed. If no error has occurred, the `callback` should be run without\n * arguments or with an explicit `null` argument. The array index is not passed\n * to the iteratee. Invoked with (item, callback). If you need the index, use\n * `eachOfLimit`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The iteratee is passed a `callback(err)` which must be called\n * once it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is\n * not passed to the iteratee. Invoked with (item, callback). If you need the\n * index, use `eachOfSeries`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachSeries = doLimit(eachLimit$1, 1);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {Function} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    return initialParams(function (args, callback) {\n        var sync = true;\n        args.push(function () {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate$1(function () {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    });\n}\n\nfunction notId(v) {\n    return !v;\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nvar every = doParallel(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everyLimit = doParallelLimit(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everySeries = doLimit(everyLimit, 1);\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            truthValues[index] = !!v;\n            callback(err);\n        });\n    }, function (err) {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            if (err) {\n                callback(err);\n            } else {\n                if (v) {\n                    results.push({ index: index, value: x });\n                }\n                callback();\n            }\n        });\n    }, function (err) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, arrayMap(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), baseProperty('value')));\n        }\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    filter(eachfn, coll, iteratee, callback || noop);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nvar filter = doParallel(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar filterLimit = doParallelLimit(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n */\nvar filterSeries = doLimit(filterLimit, 1);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the\n * callback then `errback` is called with the error, and execution stops,\n * otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} fn - a function to call repeatedly. Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback || noop);\n    var task = ensureAsync(fn);\n\n    function next(err) {\n        if (err) return done(err);\n        task(next);\n    }\n    next();\n}\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback || noop);\n    var newObj = {};\n    eachOfLimit(obj, limit, function (val, key, next) {\n        iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value and key in\n * `coll`. The iteratee is passed a `callback(err, transformed)` which must be\n * called once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\n\nvar mapValues = doLimit(mapValuesLimit, Infinity);\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nvar mapValuesSeries = doLimit(mapValuesLimit, 1);\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an `async` function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {Function} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || identity;\n    var memoized = initialParams(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            setImmediate$1(function () {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            fn.apply(null, args.concat(rest(function (args) {\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            })));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `setImmediate`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @alias setImmediate\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nfunction _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        task(rest(function (err, args) {\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            results[key] = args;\n            callback(err);\n        }));\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallelLimit(tasks, callback) {\n  _parallel(eachOf, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Collection} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n */\nfunction parallelLimit$1(tasks, limit, callback) {\n  _parallel(_eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Object} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {Function} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {Function} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {Function} saturated - a callback that is called when the number of\n * running workers hits the `concurrency` limit, and further tasks will be\n * queued.\n * @property {Function} unsaturated - a callback that is called when the number\n * of running workers is less than the `concurrency` & `buffer` limits, and\n * further tasks will not be queued.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - a callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} error - a callback that is called when a task errors.\n * Has the signature `function(error, task)`.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`.\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain = function() {\n *     console.log('all items have been processed');\n * };\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * q.push({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nvar queue$1 = function (worker, concurrency) {\n  return queue(function (items, cb) {\n    worker(items[0], cb);\n  }, concurrency, 1);\n};\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nvar priorityQueue = function (worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    // Override push to accept second parameter representing priority\n    q.push = function (data, priority, callback) {\n        if (callback == null) callback = noop;\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        priority = priority || 0;\n        var nextNode = q._tasks.head;\n        while (nextNode && priority >= nextNode.priority) {\n            nextNode = nextNode.next;\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority: priority,\n                callback: callback\n            };\n\n            if (nextNode) {\n                q._tasks.insertBefore(nextNode, item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n};\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing functions to run. Each function\n * is passed a `callback(err, result)` which it must call on completion with an\n * error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        tasks[i](callback);\n    }\n}\n\nvar slice = Array.prototype.slice;\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight(array, memo, iteratee, callback) {\n  var reversed = slice.call(array).reverse();\n  reduce(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the function in another function that always returns data even when it\n * errors.\n *\n * The object returned has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push(rest(function callback(err, cbArgs) {\n            if (err) {\n                reflectCallback(null, {\n                    error: err\n                });\n            } else {\n                var value = null;\n                if (cbArgs.length === 1) {\n                    value = cbArgs[0];\n                } else if (cbArgs.length > 1) {\n                    value = cbArgs;\n                }\n                reflectCallback(null, {\n                    value: value\n                });\n            }\n        }));\n\n        return fn.apply(this, args);\n    });\n}\n\nfunction reject$1(eachfn, arr, iteratee, callback) {\n    _filter(eachfn, arr, function (value, cb) {\n        iteratee(value, function (err, v) {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nvar reject = doParallel(reject$1);\n\n/**\n * A helper function that wraps an array or an object of functions with reflect.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array} tasks - The array of functions to wrap in `async.reflect`.\n * @returns {Array} Returns an array of functions, each function wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (isArray(tasks)) {\n        results = arrayMap(tasks, reflect);\n    } else {\n        results = {};\n        baseForOwn(tasks, function (task, key) {\n            results[key] = reflect.call(this, task);\n        });\n    }\n    return results;\n}\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectLimit = doParallelLimit(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectSeries = doLimit(rejectLimit, 1);\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {Function} task - A function which receives two arguments: (1) a\n * `callback(err, result)` which must be called when finished, passing `err`\n * (which can be `null`) and the `result` of the function's execution, and (2)\n * a `results` object, containing the results of the previously executed\n * functions (if nested inside another control flow). Invoked with\n * (callback, results).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // It can also be embedded within other control flow functions to retry\n * // individual methods that are not as reliable, like this:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retry(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nfunction retry(opts, task, callback) {\n    var DEFAULT_TIMES = 5;\n    var DEFAULT_INTERVAL = 0;\n\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || noop;\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || noop;\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var attempt = 1;\n    function retryAttempt() {\n        task(function (err) {\n            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt));\n            } else {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n\n    retryAttempt();\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it\n * retryable, rather than immediately calling it with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`\n * @param {Function} task - the asynchronous function to wrap\n * @returns {Functions} The wrapped function, which when invoked, will retry on\n * an error, based on the parameters specified in `opts`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nvar retryable = function (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    return initialParams(function (args, callback) {\n        function taskFn(cb) {\n            task.apply(null, args.concat(cb));\n        }\n\n        if (opts) retry(opts, taskFn, callback);else retry(taskFn, callback);\n    });\n};\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run, each\n * function is passed a `callback(err, result)` it must call on completion with\n * an error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n  _parallel(eachOfSeries, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nvar some = doParallel(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someLimit = doParallelLimit(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someSeries = doLimit(someLimit, 1);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, sortValue)` which must be called once\n * it has completed with an error (which can be `null`) and a value to use as\n * the sort criteria. Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy(coll, iteratee, callback) {\n    map(coll, function (x, callback) {\n        iteratee(x, function (err, criteria) {\n            if (err) return callback(err);\n            callback(null, { value: x, criteria: criteria });\n        });\n    }, function (err, results) {\n        if (err) return callback(err);\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria,\n            b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} asyncFn - The asynchronous function you want to set the\n * time limit.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {Function} Returns a wrapped function that can be used with any of\n * the control flow functions. Invoke this function with the same\n * parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var originalCallback, timer;\n    var timedOut = false;\n\n    function injectedCallback() {\n        if (!timedOut) {\n            originalCallback.apply(null, arguments);\n            clearTimeout(timer);\n        }\n    }\n\n    function timeoutCallback() {\n        var name = asyncFn.name || 'anonymous';\n        var error = new Error('Callback function \"' + name + '\" timed out.');\n        error.code = 'ETIMEDOUT';\n        if (info) {\n            error.info = info;\n        }\n        timedOut = true;\n        originalCallback(error);\n    }\n\n    return initialParams(function (args, origCallback) {\n        originalCallback = origCallback;\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        asyncFn.apply(null, args.concat(injectedCallback));\n    });\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\nvar nativeMax$1 = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n */\nfunction timeLimit(count, limit, iteratee, callback) {\n  mapLimit(baseRange(0, count, 1), limit, iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nvar times = doLimit(timeLimit, Infinity);\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n */\nvar timesSeries = doLimit(timeLimit, 1);\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in series, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {Function} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator. The `iteratee` is\n * passed a `callback(err)` which accepts an optional error as its first\n * argument. If an error is passed to the callback, the transform is stopped\n * and the main `callback` is immediately called with the error.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc.push(item * 2)\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform(coll, accumulator, iteratee, callback) {\n    if (arguments.length === 3) {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = isArray(coll) ? [] : {};\n    }\n    callback = once(callback || noop);\n\n    eachOf(coll, function (v, k, cb) {\n        iteratee(accumulator, v, k, cb);\n    }, function (err) {\n        callback(err, accumulator);\n    });\n}\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {Function} fn - the memoized function\n * @returns {Function} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {Function} iteratee - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    if (!test()) return callback(null);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test()) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `fn`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `fn`. Invoked with ().\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, fn, callback) {\n    whilst(function () {\n        return !test.apply(this, arguments);\n    }, fn, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of functions to run, each function is passed\n * a `callback(err, result1, result2, ...)` it must call on completion. The\n * first argument is an error (which can be `null`) and any further arguments\n * will be passed as arguments in order to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nvar waterfall = function (tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        if (taskIndex === tasks.length) {\n            return callback.apply(null, [null].concat(args));\n        }\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            if (err) {\n                return callback.apply(null, [err].concat(args));\n            }\n            nextTask(args);\n        }));\n\n        args.push(taskCallback);\n\n        var task = tasks[taskIndex++];\n        task.apply(null, args);\n    }\n\n    nextTask([]);\n};\n\n/**\n * Async is a utility module which provides straight-forward, powerful functions\n * for working with asynchronous JavaScript. Although originally designed for\n * use with [Node.js](http://nodejs.org) and installable via\n * `npm install --save async`, it can also be used directly in the browser.\n * @module async\n */\n\n/**\n * A collection of `async` functions for manipulating collections, such as\n * arrays and objects.\n * @module Collections\n */\n\n/**\n * A collection of `async` functions for controlling the flow through a script.\n * @module ControlFlow\n */\n\n/**\n * A collection of `async` utility functions.\n * @module Utils\n */\nvar index = {\n  applyEach: applyEach,\n  applyEachSeries: applyEachSeries,\n  apply: apply$2,\n  asyncify: asyncify,\n  auto: auto,\n  autoInject: autoInject,\n  cargo: cargo,\n  compose: compose,\n  concat: concat,\n  concatSeries: concatSeries,\n  constant: constant,\n  detect: detect,\n  detectLimit: detectLimit,\n  detectSeries: detectSeries,\n  dir: dir,\n  doDuring: doDuring,\n  doUntil: doUntil,\n  doWhilst: doWhilst,\n  during: during,\n  each: eachLimit,\n  eachLimit: eachLimit$1,\n  eachOf: eachOf,\n  eachOfLimit: eachOfLimit,\n  eachOfSeries: eachOfSeries,\n  eachSeries: eachSeries,\n  ensureAsync: ensureAsync,\n  every: every,\n  everyLimit: everyLimit,\n  everySeries: everySeries,\n  filter: filter,\n  filterLimit: filterLimit,\n  filterSeries: filterSeries,\n  forever: forever,\n  log: log,\n  map: map,\n  mapLimit: mapLimit,\n  mapSeries: mapSeries,\n  mapValues: mapValues,\n  mapValuesLimit: mapValuesLimit,\n  mapValuesSeries: mapValuesSeries,\n  memoize: memoize,\n  nextTick: nextTick,\n  parallel: parallelLimit,\n  parallelLimit: parallelLimit$1,\n  priorityQueue: priorityQueue,\n  queue: queue$1,\n  race: race,\n  reduce: reduce,\n  reduceRight: reduceRight,\n  reflect: reflect,\n  reflectAll: reflectAll,\n  reject: reject,\n  rejectLimit: rejectLimit,\n  rejectSeries: rejectSeries,\n  retry: retry,\n  retryable: retryable,\n  seq: seq$1,\n  series: series,\n  setImmediate: setImmediate$1,\n  some: some,\n  someLimit: someLimit,\n  someSeries: someSeries,\n  sortBy: sortBy,\n  timeout: timeout,\n  times: times,\n  timesLimit: timeLimit,\n  timesSeries: timesSeries,\n  transform: transform,\n  unmemoize: unmemoize,\n  until: until,\n  waterfall: waterfall,\n  whilst: whilst,\n\n  // aliases\n  all: every,\n  any: some,\n  forEach: eachLimit,\n  forEachSeries: eachSeries,\n  forEachLimit: eachLimit$1,\n  forEachOf: eachOf,\n  forEachOfSeries: eachOfSeries,\n  forEachOfLimit: eachOfLimit,\n  inject: reduce,\n  foldl: reduce,\n  foldr: reduceRight,\n  select: filter,\n  selectLimit: filterLimit,\n  selectSeries: filterSeries,\n  wrapSync: asyncify\n};\n\nexports['default'] = index;\nexports.applyEach = applyEach;\nexports.applyEachSeries = applyEachSeries;\nexports.apply = apply$2;\nexports.asyncify = asyncify;\nexports.auto = auto;\nexports.autoInject = autoInject;\nexports.cargo = cargo;\nexports.compose = compose;\nexports.concat = concat;\nexports.concatSeries = concatSeries;\nexports.constant = constant;\nexports.detect = detect;\nexports.detectLimit = detectLimit;\nexports.detectSeries = detectSeries;\nexports.dir = dir;\nexports.doDuring = doDuring;\nexports.doUntil = doUntil;\nexports.doWhilst = doWhilst;\nexports.during = during;\nexports.each = eachLimit;\nexports.eachLimit = eachLimit$1;\nexports.eachOf = eachOf;\nexports.eachOfLimit = eachOfLimit;\nexports.eachOfSeries = eachOfSeries;\nexports.eachSeries = eachSeries;\nexports.ensureAsync = ensureAsync;\nexports.every = every;\nexports.everyLimit = everyLimit;\nexports.everySeries = everySeries;\nexports.filter = filter;\nexports.filterLimit = filterLimit;\nexports.filterSeries = filterSeries;\nexports.forever = forever;\nexports.log = log;\nexports.map = map;\nexports.mapLimit = mapLimit;\nexports.mapSeries = mapSeries;\nexports.mapValues = mapValues;\nexports.mapValuesLimit = mapValuesLimit;\nexports.mapValuesSeries = mapValuesSeries;\nexports.memoize = memoize;\nexports.nextTick = nextTick;\nexports.parallel = parallelLimit;\nexports.parallelLimit = parallelLimit$1;\nexports.priorityQueue = priorityQueue;\nexports.queue = queue$1;\nexports.race = race;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.reflect = reflect;\nexports.reflectAll = reflectAll;\nexports.reject = reject;\nexports.rejectLimit = rejectLimit;\nexports.rejectSeries = rejectSeries;\nexports.retry = retry;\nexports.retryable = retryable;\nexports.seq = seq$1;\nexports.series = series;\nexports.setImmediate = setImmediate$1;\nexports.some = some;\nexports.someLimit = someLimit;\nexports.someSeries = someSeries;\nexports.sortBy = sortBy;\nexports.timeout = timeout;\nexports.times = times;\nexports.timesLimit = timeLimit;\nexports.timesSeries = timesSeries;\nexports.transform = transform;\nexports.unmemoize = unmemoize;\nexports.until = until;\nexports.waterfall = waterfall;\nexports.whilst = whilst;\nexports.all = every;\nexports.allLimit = everyLimit;\nexports.allSeries = everySeries;\nexports.any = some;\nexports.anyLimit = someLimit;\nexports.anySeries = someSeries;\nexports.find = detect;\nexports.findLimit = detectLimit;\nexports.findSeries = detectSeries;\nexports.forEach = eachLimit;\nexports.forEachSeries = eachSeries;\nexports.forEachLimit = eachLimit$1;\nexports.forEachOf = eachOf;\nexports.forEachOfSeries = eachOfSeries;\nexports.forEachOfLimit = eachOfLimit;\nexports.inject = reduce;\nexports.foldl = reduce;\nexports.foldr = reduceRight;\nexports.select = filter;\nexports.selectLimit = filterLimit;\nexports.selectSeries = filterSeries;\nexports.wrapSync = asyncify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","module.exports = {\r\n    \"junguan\": {\r\n        hp: 300,\r\n        attack: 40,\r\n        findX: 40\r\n    }\r\n}","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    onLoad() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.dao_dan_bao_zha,false);\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        this.node.x = data.v.x;\r\n        this.node.y = data.v.y;\r\n        //结束动画\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isinit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bomb_atlas, data.aniName);\r\n            let flashClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            flashClip.name = 'end';\r\n            flashClip.wrapMode = cc.WrapMode.Normal;\r\n            animation.addClip(flashClip);\r\n            animation.play('end');\r\n        }\r\n        else {\r\n            animation.playAdditive('end', 0);\r\n        }\r\n        animation.once(\"finished\", function () {\r\n            let pool = this.node.pool;\r\n            if (pool) {\r\n                pool.put(this.node);\r\n            }\r\n            else {\r\n                this.node.removeFromParent(true);\r\n                this.node.destroy();\r\n            }\r\n        }.bind(this))\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    onLoad() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.dao_dan_bao_zha,false);\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        this.node.x = data.v.x;\r\n        this.node.y = data.v.y;\r\n        //结束动画\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isinit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bomb_atlas, data.aniName);\r\n            let flashClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            flashClip.name = 'end';\r\n            flashClip.wrapMode = cc.WrapMode.Normal;\r\n            animation.addClip(flashClip);\r\n            animation.play('end');\r\n        }\r\n        else {\r\n            animation.playAdditive('end', 0);\r\n        }\r\n        animation.once(\"finished\", function () {\r\n            let pool = this.node.pool;\r\n            if (pool) {\r\n                pool.put(this.node);\r\n            }\r\n            else {\r\n                this.node.removeFromParent(true);\r\n                this.node.destroy();\r\n            }\r\n        }.bind(this))\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    }\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    onLoad() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.dao_dan_bao_zha,false);\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        this.node.x = data.v.x;\r\n        this.node.y = data.v.y;\r\n        //结束动画\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isinit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bomb_atlas, data.aniName);\r\n            let flashClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            flashClip.name = 'end';\r\n            flashClip.wrapMode = cc.WrapMode.Normal;\r\n            animation.addClip(flashClip);\r\n            animation.play('end');\r\n        }\r\n        else {\r\n            animation.playAdditive('end', 0);\r\n        }\r\n        animation.once(\"finished\", function () {\r\n            let pool = this.node.pool;\r\n            if (pool) {\r\n                pool.put(this.node);\r\n            }\r\n            else {\r\n                this.node.removeFromParent(true);\r\n                this.node.destroy();\r\n            }\r\n        }.bind(this))\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    }\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        speed: 500,\r\n        fire: cc.Animation,\r\n        addSpeedY: 100,\r\n        range: 2000,\r\n    },\r\n    onLoad() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.qing_xing_qiang_jie4, false);\r\n        this.data = data;\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        this.idx = 0;\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        this.speedX = Math.cos(hd) * this.speed;\r\n        this.speedY = Math.sin(hd) * this.speed;\r\n        this.curRange = this.range;\r\n        //火焰动画\r\n        if (!this._isinit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, \"fire1\");\r\n            let fireClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 30);\r\n            fireClip.name = 'fire';\r\n            fireClip.wrapMode = cc.WrapMode.Loop;\r\n            this.fire.addClip(fireClip);\r\n            this.fire.play('fire');\r\n        }\r\n        this.state = \"move\";\r\n        this.node.active = true;\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    //碰撞检测到\r\n    onCollisionEnter: function (other, self) {\r\n        this.end();\r\n    },\r\n    end() {\r\n        if (this.state == \"end\") return;\r\n        this.state = \"end\";\r\n        this.data = _.assign(this.data, {\r\n            aniName: \"bomb1\",//预制体名称\r\n            v: cc.v2(this.node.x, this.node.y), //位置\r\n            angle: 0,//角度\r\n            group: this.node.group //组\r\n        });\r\n        game.emit(\"bomb3\", this.data);//爆炸\r\n        let pool = this.node.pool;\r\n        if (pool) {\r\n            pool.put(this.node);\r\n        }\r\n        else {\r\n            this.node.removeFromParent(true);\r\n            this.node.destroy();\r\n        }\r\n    },\r\n    update(dt) {\r\n        if (this.state != \"move\") {\r\n            return;\r\n        }\r\n        // let hd = this.node.angle * Math.PI / 180;\r\n        // this.speedX = Math.cos(hd) * this.speed;\r\n        // this.speedY = Math.sin(hd) * this.speed;\r\n        //\r\n        this.idx++;\r\n        this.curRange -= this.speed * dt;\r\n        if (this.curRange <= 0) {\r\n            this.end();\r\n            return;\r\n        }\r\n        // let curPos = cc.v2(this.node.x, this.node.y);\r\n        // // this.speedY -= 9.8;\r\n        this.node.x += this.speedX * dt;\r\n        this.node.y += this.speedY * dt;\r\n        // let pos = cc.v2(this.node.x, this.node.y);\r\n        // let rotation = game.gameUtils.getRotation(curPos, pos);\r\n        // this.node.angle = rotation;\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        speed: 1000,\r\n        range: 1000\r\n    },\r\n    onLoad() {\r\n    },\r\n    start() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.qing_xing_qiang_jie2,false);\r\n        this.state = \"ready\";\r\n        this.idx = 0;\r\n        this.curRange = this.range;\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        this.speedX = Math.cos(hd) * this.speed;\r\n        this.speedY = Math.sin(hd) * this.speed;\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isInit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, data.prefabName);\r\n            let readyClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            readyClip.name = 'move';\r\n            readyClip.wrapMode = cc.WrapMode.Loop;\r\n            animation.addClip(readyClip);\r\n            animation.play(\"move\");\r\n            this._isInit = true;\r\n        }\r\n        else {\r\n            animation.playAdditive('move', 0);\r\n        }\r\n        this.state = \"move\";\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        game.emit(\"shootFire\", {aniName: \"eff1\", v: data.v, angle: data.angle});//开火动画\r\n    },\r\n    end() {\r\n        if (this.state == \"end\") return;\r\n        this.state = \"end\";\r\n        var curPos = cc.v2(this.node.x, this.node.y);\r\n        var angle = this.node.angle;\r\n        game.emit(\"shootFire\", {aniName: \"eff2\", v: curPos, angle: angle});//开火动画\r\n        // game.emit(\"shootFire\", \"eff1\", \"eff2\", curPos, angle);//开火动画\r\n        var pool = this.node.pool;\r\n        if (pool) {\r\n            pool.put(this.node);\r\n        }\r\n        else {\r\n            this.node.removeFromParent(true);\r\n            this.node.destroy();\r\n        }\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onCollisionEnter: function (other, self) {\r\n        this.end();\r\n    },\r\n    update(dt) {\r\n        if (this.state != \"move\") {\r\n            return;\r\n        }\r\n        this.idx++;\r\n        this.curRange -= this.speed * dt;\r\n        if (this.curRange <= 0) {\r\n            this.end();\r\n            return;\r\n        }\r\n        this.node.x += this.speedX * dt;\r\n        this.node.y += this.speedY * dt;\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    onLoad() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.qing_xing_qiang_jie1,false);\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isInit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, \"bullet2\");\r\n            let clip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            clip.name = 'start';\r\n            clip.wrapMode = cc.WrapMode.Normal;\r\n            animation.addClip(clip);\r\n            this._isInit = true;\r\n        }\r\n        animation.playAdditive('start', 0);\r\n        animation.once(\"finished\", function () {\r\n            let pool = this.node.pool;\r\n            if (pool) {\r\n                pool.put(this.node);\r\n            }\r\n            else {\r\n                this.node.removeFromParent(true);\r\n                this.node.destroy();\r\n            }\r\n        }.bind(this));\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        head: cc.Animation,\r\n    },\r\n    onLoad() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.zhong_xing_qiang_jie5, false);\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * (this.node.width / 2 + this.head.node.width);\r\n        this.speedY = Math.sin(hd) * (this.node.width / 2 + this.head.node.width);\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        //闪电头子动画\r\n        if (!this._isinit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, \"flashHead\");\r\n            let startClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 30);\r\n            startClip.name = 'start';\r\n            startClip.wrapMode = cc.WrapMode.Normal;\r\n            this.head.addClip(startClip);\r\n        }\r\n        this.head.playAdditive('start', 0);\r\n        //自身动画\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isinit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, data.prefabName);\r\n            let flashClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            flashClip.name = 'flash';\r\n            flashClip.wrapMode = cc.WrapMode.Normal;\r\n            animation.addClip(flashClip);\r\n        }\r\n        animation.playAdditive('flash', 0);\r\n        animation.once(\"finished\", function () {\r\n            let pool = this.node.pool;\r\n            if (pool) {\r\n                pool.put(this.node);\r\n            }\r\n            else {\r\n                this.node.removeFromParent(true);\r\n                this.node.destroy();\r\n            }\r\n        }.bind(this));\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        speed: 500,\r\n        fire: cc.Animation,\r\n        addSpeedY: 100,\r\n        range: 2000,\r\n    },\r\n    onLoad() {\r\n        this._lastPos = cc.v2(0, 0);\r\n        this._curPos = cc.v2(0, 0);\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.qing_xing_qiang_jie4, false);\r\n        this.data = data;\r\n        game.emit(\"shootFire\", {aniName: \"eff2\", v: data.v, angle: data.angle});//开火动画\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        this.idx = 0;\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        this.speedX = Math.cos(hd) * this.speed;\r\n        this.speedY = Math.sin(hd) * this.speed;\r\n        this.curRange = this.range;\r\n        //火焰动画\r\n        if (!this._isinit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, \"fire1\");\r\n            let fireClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 30);\r\n            fireClip.name = 'fire';\r\n            fireClip.wrapMode = cc.WrapMode.Loop;\r\n            this.fire.addClip(fireClip);\r\n            this.fire.play('fire');\r\n        }\r\n        this.state = \"move\";\r\n        this.node.active = true;\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    //碰撞检测到\r\n    onCollisionEnter: function (other, self) {\r\n        this.end();\r\n    },\r\n    end() {\r\n        if (this.state == \"end\") return;\r\n        this.state = \"end\";\r\n        this.data = _.assign(this.data, {\r\n            aniName: \"bomb1\",//预制体名称\r\n            v: cc.v2(this.node.x, this.node.y), //位置\r\n            angle: 0,//角度\r\n            group: this.node.group //组\r\n        });\r\n        game.emit(\"bomb1\", this.data);//爆炸\r\n        let pool = this.node.pool;\r\n        if (pool) {\r\n            pool.put(this.node);\r\n        }\r\n        else {\r\n            this.node.removeFromParent(true);\r\n            this.node.destroy();\r\n        }\r\n    },\r\n    update(dt) {\r\n        if (this.state != \"move\") {\r\n            return;\r\n        }\r\n        // let hd = this.node.angle * Math.PI / 180;\r\n        // this.speedX = Math.cos(hd) * this.speed;\r\n        // this.speedY = Math.sin(hd) * this.speed;\r\n        //\r\n        this.idx++;\r\n        this.curRange -= this.speed * dt;\r\n        if (this.curRange <= 0) {\r\n            this.end();\r\n            return;\r\n        }\r\n        this._lastPos.x = this.node.x;\r\n        this._lastPos.y = this.node.y;\r\n        // let curPos = cc.v2(this.node.x, this.node.y);\r\n        this.speedY -= 9.8;\r\n        this.node.x += this.speedX * dt;\r\n        this.node.y += this.speedY * dt;\r\n        this._curPos.x = this.node.x;\r\n        this._curPos.y = this.node.y;\r\n        //let pos = cc.v2(this.node.x, this.node.y);\r\n        let rotation = game.gameUtils.getRotation(this._lastPos, this._curPos);\r\n        this.node.angle = rotation;\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        speed: 1000,\r\n        range: 1000\r\n    },\r\n    onLoad() {\r\n    },\r\n    start() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.qing_xing_qiang_jie1,false);\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        this.state = \"ready\";\r\n        this.idx = 0;\r\n        this.curRange = this.range;\r\n        game.emit(\"shootFire\", {aniName: \"eff2\",v: data.v, angle: data.angle});//开火动画\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        this.speedX = Math.cos(hd) * this.speed;\r\n        this.speedY = Math.sin(hd) * this.speed;\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isInit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, data.prefabName);\r\n            let readyClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            readyClip.name = 'move';\r\n            readyClip.wrapMode = cc.WrapMode.Loop;\r\n            animation.addClip(readyClip);\r\n            animation.play(\"move\");\r\n            this._isInit = true;\r\n        }\r\n        else {\r\n            animation.playAdditive('move', 0);\r\n        }\r\n        this.state = \"move\";\r\n    },\r\n    end() {\r\n        if (this.state == \"end\") return;\r\n        this.state = \"end\";\r\n        var pool = this.node.pool;\r\n        if (pool) {\r\n            pool.put(this.node);\r\n        }\r\n        else {\r\n            this.node.removeFromParent(true);\r\n            this.node.destroy();\r\n        }\r\n        var curPos = cc.v2(this.node.x, this.node.y);\r\n        var angle = this.node.angle;\r\n        //game.emit(\"shootFire\", \"fire\", \"eff5\", curPos, angle);//开火动画\r\n        game.emit(\"shootFire\", {aniName: \"eff5\",v: curPos, angle: angle});//开火动画\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onCollisionEnter: function (other, self) {\r\n        this.end();\r\n    },\r\n    update(dt) {\r\n        if (this.state != \"move\") {\r\n            return;\r\n        }\r\n        this.idx++;\r\n        this.curRange -= this.speed * dt;\r\n        if (this.curRange <= 0) {\r\n            this.end();\r\n            return;\r\n        }\r\n        this.node.x += this.speedX * dt;\r\n        this.node.y += this.speedY * dt;\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        speed: 1000,\r\n        range: 1000\r\n    },\r\n    onLoad() {\r\n    },\r\n    start() {\r\n    },\r\n\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.gong_fu_bo_dong_quan,false);\r\n        this.init(data);\r\n    },\r\n\r\n    init(data) {\r\n\r\n        this.state = \"ready\";\r\n        this.idx = 0;\r\n        this.curRange = this.range;\r\n        //game.emit(\"shootFire\", \"fire\", \"eff1\", v, angle);//开火动画\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        this.speedX = Math.cos(hd) * this.speed;\r\n        this.speedY = Math.sin(hd) * this.speed;\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isInit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, data.prefabName);\r\n            let readyClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            readyClip.name = 'move';\r\n            readyClip.wrapMode = cc.WrapMode.Loop;\r\n            animation.addClip(readyClip);\r\n            animation.play(\"move\");\r\n            this._isInit = true;\r\n        }\r\n        else {\r\n            animation.playAdditive('move', 0);\r\n        }\r\n        this.state = \"move\";\r\n    },\r\n    end() {\r\n        if (this.state == \"end\") return;\r\n        this.state = \"end\";\r\n        var pool = this.node.pool;\r\n        if (pool) {\r\n            pool.put(this.node);\r\n        }\r\n        else {\r\n            this.node.removeFromParent(true);\r\n            this.node.destroy();\r\n        }\r\n        var curPos = cc.v2(this.node.x, this.node.y);\r\n        var angle = this.node.angle;\r\n\r\n        //\r\n        // this.data = _.assign(this.data, {\r\n        //     aniName: \"bomb1\",//预制体名称\r\n        //     v: cc.v2(this.node.x, this.node.y), //位置\r\n        //     angle: 0,//角度\r\n        //     group: this.node.group //组\r\n        // });\r\n        // game.emit(\"bomb1\", this.data);//爆炸\r\n\r\n\r\n        //game.emit(\"shootFire\", \"fire\", \"eff2\", curPos, angle);//开火动画\r\n        game.emit(\"shootFire\", {aniName: \"eff2\",v: curPos, angle: angle});//开火动画\r\n\r\n\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onCollisionEnter: function (other, self) {\r\n        this.end();\r\n    },\r\n    update(dt) {\r\n        if (this.state != \"move\") {\r\n            return;\r\n        }\r\n        this.idx++;\r\n        this.curRange -= this.speed * dt;\r\n        if (this.curRange <= 0) {\r\n            this.end();\r\n            return;\r\n        }\r\n        this.node.x += this.speedX * dt;\r\n        this.node.y += this.speedY * dt;\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        speed: 1000,\r\n        range: 1000\r\n    },\r\n    onLoad() {\r\n    },\r\n    start() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.qing_xing_qiang_jie3,false);\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        this.state = \"ready\";\r\n        this.idx = 0;\r\n        this.curRange = this.range;\r\n        //game.emit(\"shootFire\", \"fire\", \"eff1\", v, angle);//开火动画\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n\r\n\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        this.speedX = Math.cos(hd) * this.speed;\r\n        this.speedY = Math.sin(hd) * this.speed;\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isInit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, data.prefabName);\r\n            let readyClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            readyClip.name = 'move';\r\n            readyClip.wrapMode = cc.WrapMode.Loop;\r\n            animation.addClip(readyClip);\r\n            animation.play(\"move\");\r\n            this._isInit = true;\r\n        }\r\n        else {\r\n            animation.playAdditive('move', 0);\r\n        }\r\n        this.state = \"move\";\r\n    },\r\n    end() {\r\n        if (this.state == \"end\") return;\r\n        this.state = \"end\";\r\n        var pool = this.node.pool;\r\n        if (pool) {\r\n            pool.put(this.node);\r\n        }\r\n        else {\r\n            this.node.removeFromParent(true);\r\n            this.node.destroy();\r\n        }\r\n        var curPos = cc.v2(this.node.x, this.node.y);\r\n        var angle = this.node.angle;\r\n       // game.emit(\"shootFire\", \"fire\", \"eff2\", curPos, angle);//开火动画\r\n        game.emit(\"shootFire\", {aniName: \"eff2\",v: curPos, angle: angle});//开火动画\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onCollisionEnter: function (other, self) {\r\n        this.end();\r\n    },\r\n    update(dt) {\r\n        if (this.state != \"move\") {\r\n            return;\r\n        }\r\n        this.idx++;\r\n        this.curRange -= this.speed * dt;\r\n        if (this.curRange <= 0) {\r\n            this.end();\r\n            return;\r\n        }\r\n        this.node.x += this.speedX * dt;\r\n        this.node.y += this.speedY * dt;\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        speed: 500,\r\n        fire: cc.Animation,\r\n        addSpeedY: 100,\r\n        range: 2000,\r\n    },\r\n    onLoad() {\r\n        this._lastPos = cc.v2(0, 0);\r\n        this._curPos = cc.v2(0, 0);\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.qing_xing_qiang_jie4,false);\r\n        this.data=data;\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        this.idx = 0;\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        this.speedX = Math.cos(hd) * this.speed;\r\n        this.speedY = Math.sin(hd) * this.speed;\r\n        this.curRange = this.range;\r\n        //火焰动画\r\n        if (!this._isinit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, \"fire1\");\r\n            let fireClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 30);\r\n            fireClip.name = 'fire';\r\n            fireClip.wrapMode = cc.WrapMode.Loop;\r\n            this.fire.addClip(fireClip);\r\n            this.fire.play('fire');\r\n        }\r\n        this.state = \"move\";\r\n        this.node.active = true;\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    //碰撞检测到\r\n    onCollisionEnter: function (other, self) {\r\n        this.end();\r\n    },\r\n    end() {\r\n        if (this.state == \"end\") return;\r\n        this.state = \"end\";\r\n\r\n        this.data = _.assign(this.data, {\r\n            aniName: \"bomb1\",//预制体名称\r\n            v: cc.v2(this.node.x, this.node.y), //位置\r\n            angle: 0,//角度\r\n            group: this.node.group //组\r\n        });\r\n        game.emit(\"bomb2\", this.data);//爆炸\r\n\r\n\r\n        let pool = this.node.pool;\r\n        if (pool) {\r\n            pool.put(this.node);\r\n        }\r\n        else {\r\n            this.node.removeFromParent(true);\r\n            this.node.destroy();\r\n        }\r\n    },\r\n    update(dt) {\r\n        if (this.state != \"move\") {\r\n            return;\r\n        }\r\n        this.idx++;\r\n        this.curRange -= this.speed * dt;\r\n        if (this.curRange <= 0) {\r\n            this.end();\r\n            return;\r\n        }\r\n        // this._lastPos.x = this.node.x;\r\n        // this._lastPos.y = this.node.y;\r\n        // // this.speedY -= 9.8;\r\n        this.node.x += this.speedX * dt;\r\n        this.node.y += this.speedY * dt;\r\n        // let pos = cc.v2(this.node.x, this.node.y);\r\n        // let rotation = game.gameUtils.getRotation(curPos, pos);\r\n        // this.node.angle = rotation;\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        speed: 500,\r\n        fire: cc.Animation,\r\n        addSpeedY: 100,\r\n        range: 2000,\r\n    },\r\n    onLoad() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.qing_xing_qiang_jie4,false);\r\n        this.data = data;\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        this.idx = 0;\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        this.speedX = Math.cos(hd) * this.speed;\r\n        this.speedY = Math.sin(hd) * this.speed;\r\n        this.curRange = this.range;\r\n        //火焰动画\r\n        if (!this._isinit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, \"fire1\");\r\n            let fireClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 30);\r\n            fireClip.name = 'fire';\r\n            fireClip.wrapMode = cc.WrapMode.Loop;\r\n            this.fire.addClip(fireClip);\r\n            this.fire.play('fire');\r\n        }\r\n        this.state = \"move\";\r\n        this.node.active = true;\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    //碰撞检测到\r\n    onCollisionEnter: function (other, self) {\r\n        this.end();\r\n    },\r\n    end() {\r\n        if (this.state == \"end\") return;\r\n        this.state = \"end\";\r\n        this.data = _.assign(this.data, {\r\n            aniName: \"bomb1\",//预制体名称\r\n            v: cc.v2(this.node.x, this.node.y), //位置\r\n            angle: 0,//角度\r\n            group: this.node.group //组\r\n        });\r\n        game.emit(\"bomb2\", this.data);//爆炸\r\n        let pool = this.node.pool;\r\n        if (pool) {\r\n            pool.put(this.node);\r\n        }\r\n        else {\r\n            this.node.removeFromParent(true);\r\n            this.node.destroy();\r\n        }\r\n    },\r\n    update(dt) {\r\n        if (this.state != \"move\") {\r\n            return;\r\n        }\r\n        // let hd = this.node.angle * Math.PI / 180;\r\n        // this.speedX = Math.cos(hd) * this.speed;\r\n        // this.speedY = Math.sin(hd) * this.speed;\r\n        //\r\n        this.idx++;\r\n        this.curRange -= this.speed * dt;\r\n        if (this.curRange <= 0) {\r\n            this.end();\r\n            return;\r\n        }\r\n        // let curPos = cc.v2(this.node.x, this.node.y);\r\n        // // this.speedY -= 9.8;\r\n        this.node.x += this.speedX * dt;\r\n        this.node.y += this.speedY * dt;\r\n        // let pos = cc.v2(this.node.x, this.node.y);\r\n        // let rotation = game.gameUtils.getRotation(curPos, pos);\r\n        // this.node.angle = rotation;\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        left: cc.Node,\r\n        right: cc.Node,\r\n        up: cc.Node,\r\n        //down: cc.Node,\r\n        switchBtn: cc.Node,\r\n        shoot: cc.Node\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n    },\r\n    onEnable() {\r\n        // this.left.on(cc.Node.EventType.TOUCH_START, this.leftTouchStart, this);\r\n        // this.left.on(cc.Node.EventType.TOUCH_END, this.leftTouchEnd, this);\r\n        // this.left.on(cc.Node.EventType.TOUCH_CANCEL, this.leftTouchEnd, this);\r\n        // this.right.on(cc.Node.EventType.TOUCH_START, this.rightTouchStart, this);\r\n        // this.right.on(cc.Node.EventType.TOUCH_END, this.rightTouchEnd, this);\r\n        // this.right.on(cc.Node.EventType.TOUCH_CANCEL, this.rightTouchEnd, this);\r\n        this.up.on(cc.Node.EventType.TOUCH_START, this.upTouchStart, this);\r\n        this.up.on(cc.Node.EventType.TOUCH_END, this.upTouchEnd, this);\r\n        this.up.on(cc.Node.EventType.TOUCH_CANCEL, this.upTouchEnd, this);\r\n        // this.down.on(cc.Node.EventType.TOUCH_START, this.downTouchStart, this);\r\n        // this.down.on(cc.Node.EventType.TOUCH_END, this.downTouchEnd, this);\r\n        // this.down.on(cc.Node.EventType.TOUCH_CANCEL, this.downTouchEnd, this);\r\n        this.switchBtn.on(cc.Node.EventType.TOUCH_START, this.switchTouchStart, this);\r\n        this.switchBtn.on(cc.Node.EventType.TOUCH_END, this.switchTouchEnd, this);\r\n        this.switchBtn.on(cc.Node.EventType.TOUCH_CANCEL, this.switchTouchEnd, this);\r\n        this.shoot.on(cc.Node.EventType.TOUCH_START, this.shootStart, this);\r\n        this.shoot.on(cc.Node.EventType.TOUCH_END, this.shootEnd, this);\r\n        this.shoot.on(cc.Node.EventType.TOUCH_CANCEL, this.shootEnd, this);\r\n    },\r\n    onDisable() {\r\n        // this.left.off(cc.Node.EventType.TOUCH_START, this.leftTouchStart, this);\r\n        // this.left.off(cc.Node.EventType.TOUCH_END, this.leftTouchEnd, this);\r\n        // this.left.off(cc.Node.EventType.TOUCH_CANCEL, this.leftTouchEnd, this);\r\n        // this.right.off(cc.Node.EventType.TOUCH_START, this.rightTouchStart, this);\r\n        // this.right.off(cc.Node.EventType.TOUCH_END, this.rightTouchEnd, this);\r\n        // this.right.off(cc.Node.EventType.TOUCH_CANCEL, this.rightTouchEnd, this);\r\n        this.up.off(cc.Node.EventType.TOUCH_START, this.upTouchStart, this);\r\n        this.up.off(cc.Node.EventType.TOUCH_END, this.upTouchEnd, this);\r\n        this.up.off(cc.Node.EventType.TOUCH_CANCEL, this.upTouchEnd, this);\r\n        // this.down.off(cc.Node.EventType.TOUCH_START, this.downTouchStart, this);\r\n        // this.down.off(cc.Node.EventType.TOUCH_END, this.downTouchEnd, this);\r\n        // this.down.off(cc.Node.EventType.TOUCH_CANCEL, this.downTouchEnd, this);\r\n        this.switchBtn.off(cc.Node.EventType.TOUCH_START, this.switchTouchStart, this);\r\n        this.switchBtn.off(cc.Node.EventType.TOUCH_END, this.switchTouchEnd, this);\r\n        this.switchBtn.off(cc.Node.EventType.TOUCH_CANCEL, this.switchTouchEnd, this);\r\n        this.shoot.off(cc.Node.EventType.TOUCH_START, this.shootStart, this);\r\n        this.shoot.off(cc.Node.EventType.TOUCH_END, this.shootEnd, this);\r\n        this.shoot.off(cc.Node.EventType.TOUCH_CANCEL, this.shootEnd, this);\r\n    },\r\n    leftTouchStart(e) {\r\n        game.emit(\"key_down\", game.gameControl.left);\r\n    },\r\n    leftTouchEnd(e) {\r\n        game.emit(\"key_up\", game.gameControl.left);\r\n    },\r\n    rightTouchStart(e) {\r\n        game.emit(\"key_down\", game.gameControl.right);\r\n    },\r\n    rightTouchEnd(e) {\r\n        game.emit(\"key_up\", game.gameControl.right);\r\n    },\r\n    upTouchStart(e) {\r\n        game.emit(\"key_down\", game.gameControl.up);\r\n    },\r\n    upTouchEnd(e) {\r\n        game.emit(\"key_up\", game.gameControl.up);\r\n    },\r\n    downTouchStart(e) {\r\n        game.emit(\"key_down\", game.gameControl.down);\r\n    },\r\n    downTouchEnd(e) {\r\n        game.emit(\"key_up\", game.gameControl.down);\r\n    },\r\n    switchTouchStart(e) {\r\n        game.emit(\"key_down\", game.gameControl.weapons);\r\n    },\r\n    switchTouchEnd: function (e) {\r\n        game.emit(\"key_up\", game.gameControl.weapons);\r\n    },\r\n    shootStart(touch) {\r\n        game.emit(\"aim\", true);\r\n        game.touchDown = true;\r\n    },\r\n    shootEnd(touch) {\r\n        game.touchDown = false;\r\n        game.emit(\"aim\", false);\r\n    },\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        joystick: cc.Node,\r\n        btnContinue: cc.Node\r\n    },\r\n    onLoad() {\r\n        this.joystick.active = false;\r\n        //this.joystick.active = true;\r\n        this.btnContinue.active = false;\r\n        if (cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS) { //ANDROID IOS\r\n        } else {\r\n            this.node.addComponent(\"keyboard\"); //键盘组件\r\n            //cc.log(\"添加键盘组件\")\r\n        }\r\n        game.on(\"enterGame\", this.enterGame, this);\r\n        game.on(\"levelGame\", this.levelGame, this);\r\n    },\r\n    enterGame() {\r\n        this.btnContinue.active = true;\r\n    },\r\n    levelGame() {\r\n        this.btnContinue.active = false;\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n// LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, function (t) {\r\n        }, this)\r\n        //监听\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.on_touch_move, this);\r\n        //触摸抬起\r\n        this.node.on(cc.Node.EventType.TOUCH_ENDED, function (t) {\r\n        }, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, function (t) {\r\n        }, this);\r\n    },\r\n    on_touch_move(t) {\r\n        //定义一个n_pos变量存储当前触摸点的位置\r\n        var n_pos = t.getLocation();\r\n        var delta = t.getDelta();\r\n        this.node.x += delta.x;\r\n        this.node.y += delta.y;\r\n    },\r\n    start() {\r\n    }\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onLoad() {\r\n        this.node.on(\"draw\", this.draw, this);\r\n        this.node.on(\"drawClear\", this.clear, this);\r\n        this.node.on(\"lineTo\", this.lineTo, this);\r\n        this.node.on(\"drawNow\", this.drawNow, this);\r\n        this.colors = [\r\n            cc.Color.YELLOW,\r\n            cc.Color.BLUE,\r\n            cc.Color.GREEN,\r\n            cc.Color.RED\r\n        ];\r\n        this.colorIndex = 0;\r\n        game.root = this.node;\r\n    },\r\n    draw(p, c) {\r\n        var g = this.getComponent(cc.Graphics);\r\n        if (!c) {\r\n            this.colorIndex++;\r\n            this.colorIndex = this.colorIndex % this.colors.length;\r\n            c = this.colors[this.colorIndex];\r\n        }\r\n        // g.lineWidth = 10;\r\n        //  cc.log(\"绘制\", p, c)\r\n        g.strokeColor = c;\r\n        g.moveTo(p.x - 100, p.y);\r\n        g.lineTo(p.x + 100, p.y);\r\n        g.moveTo(p.x, p.y - 100);\r\n        g.lineTo(p.x, p.y + 100);\r\n        g.close();\r\n        g.stroke();\r\n        g.fill();\r\n    },\r\n    lineTo(p1, p2, c) {\r\n        var g = this.getComponent(cc.Graphics);\r\n        c = c || '#222bff';\r\n        // g.lineWidth = 10;\r\n        g.strokeColor = cc.Color.RED;\r\n        g.moveTo(p1.x, p1.y);\r\n        g.lineTo(p2.x, p2.y);\r\n    },\r\n    drawNow() {\r\n        var g = this.getComponent(cc.Graphics);\r\n        g.close();\r\n        g.stroke();\r\n        g.fill();\r\n    },\r\n    clear() {\r\n        var g = this.getComponent(cc.Graphics);\r\n        // g.lineWidth = 10;\r\n        g.clear()\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n        this.node.off(\"draw\", this.draw, this);\r\n        this.node.off(\"drawClear\", this.clear, this);\r\n        this.node.off(\"lineTo\", this.lineTo, this);\r\n        this.node.off(\"drawNow\", this.drawNow, this);\r\n    },\r\n    // update (dt) {},\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        _isMove: false,\r\n        attackTme: 1, //攻击时间\r\n    },\r\n    // get isMove() {\r\n    //     return this._isMove;\r\n    // },\r\n    emitMove(value) {\r\n        if (this._isMove != value) {\r\n            this._isMove = value;\r\n            if (value)\r\n                this.node.emit(\"key_down\", game.gameControl.left);\r\n            else\r\n                this.node.emit(\"key_up\", game.gameControl.left);\r\n        }\r\n    },\r\n    onLoad() {\r\n    },\r\n    unuse: function () {\r\n        this.node.off(\"onCollisionEnter\", this.onFindEnter, this);\r\n        this.node.off(\"onCollisionExit\", this.onFindExit, this);\r\n    },\r\n    reuse: function (data) {\r\n        this.sendTime = 0;\r\n        this.targets = [];\r\n        this.node.on(\"onCollisionEnter\", this.onFindEnter, this);\r\n        this.node.on(\"onCollisionExit\", this.onFindExit, this);\r\n    },\r\n    onEnable() {\r\n    },\r\n    onDisable() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onFindEnter(target) {\r\n        if (this.node.isDeath) return;\r\n        var node = target.node;\r\n        if (this.targets.indexOf(node) < 0) {\r\n            this.targets.push(node);\r\n        }\r\n    },\r\n    onFindExit(target) {\r\n        if (this.node.isDeath) return;\r\n        var node = target.node;\r\n        var idx = this.targets.indexOf(node)\r\n        if (idx >= 0) {\r\n            this.targets.splice(idx, 1);\r\n        }\r\n    },\r\n    start() {\r\n    },\r\n    update(dt) {\r\n        if (game.isOver) return;//游戏结束\r\n        if (this.node.isDeath) return; //角色死亡\r\n        this.sendTime += dt;\r\n        if (this.targets.length > 0) { //有目标\r\n            this.emitMove(false);\r\n            if (this.sendTime > this.attackTme) //攻击时间到了\r\n            {\r\n                this.sendTime = 0;\r\n                this.node.emit(\"attack\");\r\n            }\r\n        }\r\n        else {\r\n            this.emitMove(true);//= true;\r\n        }\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        bingTime: 10, //每隔5秒出一个军官\r\n    },\r\n    onDestroy() {\r\n        //clearInterval(this.makeJunGuan)\r\n    },\r\n    onLoad() {\r\n        this.fff = true;\r\n        this.nextBin = 0;\r\n        this.parent = this.node.parent;\r\n        this.bingPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        let gameConfig = require(game.guanKaInfo);\r\n        this.config = gameConfig;\r\n        this.bingList = [];\r\n        for (let i in gameConfig) {\r\n            let opts = gameConfig[i];\r\n            for (let j = 0; j < opts.count; j++) {\r\n                this.bingList.push(i);\r\n            }\r\n        }\r\n        let length = this.bingList.length;\r\n        this.bingList.sort(function (a, b) {\r\n            let c = parseInt(Math.random() * length - length / 2);\r\n            return c;\r\n        })\r\n    },\r\n    start() {\r\n    },\r\n    update(dt) {\r\n        if (game.isOver) return;\r\n        if (this.parent.isDeath) return;\r\n        this.nextBin += dt;\r\n        if (this.nextBin < this.bingTime) {\r\n            return;\r\n        }\r\n        this.nextBin = 0;\r\n        let bing = this.bingList.shift();\r\n        this.bingList.push(bing);\r\n        let data = this.config[bing];\r\n        if (this.fff) {\r\n            // this.fff = false;\r\n            game.emit(\"chubing\", bing, this.bingPos, data);\r\n        }\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    onEnable() {\r\n    },\r\n    //当该组件被禁用或节点变为无效时调用。\r\n    onDisable() {\r\n    },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    onDestroy() {\r\n    },\r\n    unuse: function () {\r\n    },\r\n    reuse: function (data) {\r\n        this.node.x=this.x-Math.random()*data.findX;\r\n    },\r\n    onLoad() {\r\n        this.parent = this.node.parent.parent;\r\n        this.x = this.node.x;\r\n    },\r\n    //碰撞进入\r\n    onCollisionEnter: function (other, self) {\r\n        if (game.isOver) return;\r\n        this.parent.emit(\"onCollisionEnter\", other, self)\r\n    },\r\n    //碰撞停留\r\n    onCollisionStay: function (other, self) {\r\n    },\r\n    //碰撞退出\r\n    onCollisionExit: function (other, self) {\r\n        if (game.isOver) return;\r\n        this.parent.emit(\"onCollisionExit\", other, self)\r\n    }\r\n});\r\n","let HpComponent = require(\"hpComponent\"); //池子组件\r\ncc.Class({\r\n    extends: HpComponent,\r\n    properties: {\r\n        progressBar: cc.ProgressBar\r\n    },\r\n    //受到的伤害\r\n    onHurt(value) {\r\n        this.curHp -= value;\r\n        this.isShow = true;\r\n        this.progressBar.node.opacity = 255;\r\n        this.showTime = 0;\r\n        this.updateBar();\r\n        if (this.curHp <= 0) {\r\n            this.node.emit(\"death\");\r\n            this.parent.emit(\"death\");\r\n        }\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        this.y = this.progressBar.node.y;\r\n    },\r\n    unuse: function () {\r\n    },\r\n    reuse: function (data) {\r\n        this.totalHp = this.curHp = data.hp; //数据配置\r\n        this.updateBar();\r\n        this.showTime = 0;\r\n        this.isShow = false;\r\n        this.progressBar.node.opacity = 0;\r\n        this.progressBar.node.y = (this.y + data.zy);\r\n    },\r\n    updateBar() {\r\n        var progress = (this.curHp / this.totalHp).format();\r\n        this.progressBar.progress = progress;\r\n    },\r\n    //碰撞检测到\r\n    onCollisionEnter: function (other, self) {\r\n        var hurt = other.node.getComponent(\"hurt\");\r\n        if (!hurt || hurt.hurtValue == 0) return;\r\n        this.curHp -= hurt.hurtValue;\r\n        hurt.end();\r\n        this.isShow = true;\r\n        this.progressBar.node.opacity = 255;\r\n        this.showTime = 0;\r\n        this.updateBar();\r\n        if (this.curHp <= 0) {\r\n            this.node.emit(\"death\");\r\n        }\r\n    },\r\n    onCollisionStay: function (other, self) {\r\n    },\r\n    //碰撞退出\r\n    onCollisionExit: function (other, self) {\r\n        // cc.log(\"碰撞退出\")\r\n    },\r\n    update(dt) {\r\n        this.showTime += dt;\r\n        if (this.isShow && this.showTime > 2) {\r\n            this.isShow = false;\r\n            this.progressBar.node.opacity = 0;\r\n        }\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\")\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        parent: cc.Node\r\n    },\r\n    unuse: function () {\r\n        this.shooting = false;\r\n        this.parent.off(\"shoot_start\", this.shoot_start, this);\r\n        this.parent.off(\"shoot_end\", this.shoot_end, this);\r\n    },\r\n    reuse: function (data) {\r\n        this.data = data;\r\n        if (!this.parent) this.parent = this.node.parent;\r\n        this.parent.on(\"shoot_start\", this.shoot_start, this);\r\n        this.parent.on(\"shoot_end\", this.shoot_end, this);\r\n        this.shooting = false;\r\n    },\r\n    //碰撞进入\r\n    onCollisionEnter: function (other, self) {\r\n        if (this.parent.isDeath) return;\r\n        if (game.isOver) return;\r\n        if (this.shooting) {\r\n            this.shoot(other);\r\n        }\r\n    },\r\n    //碰撞停留\r\n    onCollisionStay: function (other, self) {\r\n        if (this.shooting) {\r\n            this.shoot(other);\r\n        }\r\n    },\r\n    //碰撞退出\r\n    onCollisionExit: function (other, self) {\r\n    },\r\n    //开始射击\r\n    shoot_start() {\r\n        this.shooting = true;\r\n    },\r\n    //射击动作结束\r\n    shoot_end() {\r\n        this.shooting = false;\r\n    },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    shoot(other) {\r\n        this.shooting = false;\r\n        let hps = other.node.getComponentsInChildren(\"hpComponent\");\r\n        if (hps && hps.length) {\r\n            let hp = hps[0];\r\n            hp.onHurt(this.data.attack);\r\n        }\r\n    }\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        maxSpeed: 100,//最大速度\r\n        jumps: 2, //跳跃次数\r\n        // acceleration: 1500,//加速度\r\n        jumpSpeed: 500, //跳跃速度\r\n        drag: 600       //拖拽速度\r\n    },\r\n    unuse: function () {\r\n        this.node.off(\"key_down\", this.onKeyDown, this);\r\n        this.node.off(\"key_up\", this.onKeyUp, this);\r\n    },\r\n    reuse: function (data) {\r\n        this._moveFlags = 0;\r\n        this.node.roleState = this.roleState = 0;//角色状态  0=静止 1=移动 2=跳跃\r\n        this._up = false;\r\n        this.jumping = false;\r\n        this.node.zIndex = 10;\r\n        this.node.on(\"key_down\", this.onKeyDown, this);\r\n        this.node.on(\"key_up\", this.onKeyUp, this);\r\n    },\r\n    onDisable() {\r\n    },\r\n    onLoad: function () {\r\n        this.body = this.getComponent(cc.RigidBody);\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onKeyDown(data) {\r\n        if (this.node.isDeath) return;\r\n        if (game.isOver) return;\r\n        switch (data) {\r\n            case game.gameControl.left:\r\n                this._moveFlags |= game.gameAction.MOVE_LEFT;\r\n                break;\r\n            case game.gameControl.right:\r\n                this._moveFlags |= game.gameAction.MOVE_RIGHT;\r\n                break;\r\n            case game.gameControl.up:\r\n                if (!this._upPressed) {\r\n                    this._up = true;\r\n                }\r\n                this._upPressed = true;\r\n                break;\r\n            case game.gameControl.down:\r\n                //this.node.emit(\"switchSkin\");//更改方向\r\n                break;\r\n            case  game.gameControl.weapons:\r\n                this.node.emit(\"switchSkin\");//更改方向\r\n                break;\r\n        }\r\n    },\r\n    onKeyUp(data) {\r\n        if (this.node.isDeath) return;\r\n        if (game.isOver) return;\r\n        switch (data) {\r\n            case game.gameControl.left:\r\n                this._moveFlags &= ~game.gameAction.MOVE_LEFT;\r\n                break;\r\n            case game.gameControl.right:\r\n                this._moveFlags &= ~game.gameAction.MOVE_RIGHT;\r\n                break;\r\n            case game.gameControl.down:\r\n            case game.gameControl.up:\r\n                this._upPressed = false;\r\n                break;\r\n        }\r\n    },\r\n    // 只在两个碰撞体开始接触时被调用一次\r\n    onBeginContact: function (contact, selfCollider, otherCollider) {\r\n        this.jumping = false;\r\n    },\r\n    // 只在两个碰撞体结束接触时被调用一次\r\n    onEndContact: function (contact, selfCollider, otherCollider) {\r\n    },\r\n    // 每次将要处理碰撞体接触逻辑时被调用\r\n    onPreSolve: function (contact, selfCollider, otherCollider) {\r\n    },\r\n    // 每次处理完碰撞体接触逻辑时被调用\r\n    onPostSolve: function (contact, selfCollider, otherCollider) {\r\n    },\r\n    update: function (dt) {\r\n        if (game.isOver) return;\r\n        var speed = this.body.linearVelocity;\r\n        if (this.node.isDeath) {\r\n            speed.x = 0;\r\n            this.body.linearVelocity = speed;\r\n            return\r\n        }\r\n        if (this._moveFlags === game.gameAction.MOVE_LEFT) {\r\n            // speed.x -= this.acceleration * dt;\r\n            // if (speed.x < -this.maxSpeed) {\r\n            //     speed.x = -this.maxSpeed;\r\n            // }\r\n            speed.x = -this.maxSpeed;\r\n            this.node.emit(\"changeDirection\", -1);//更改方向\r\n        }\r\n        else if (this._moveFlags === game.gameAction.MOVE_RIGHT) {\r\n            // speed.x += this.acceleration * dt;\r\n            // if (speed.x > this.maxSpeed) {\r\n            //     speed.x = this.maxSpeed;\r\n            // }\r\n            speed.x = this.maxSpeed;\r\n            this.node.emit(\"changeDirection\", 1);//更改方向\r\n        }\r\n        else {\r\n            speed.x = 0;\r\n            // if (speed.x != 0) {\r\n            //     var d = this.drag * dt;\r\n            //     if (Math.abs(speed.x) <= d) {\r\n            //         speed.x = 0;\r\n            //     } else {\r\n            //         speed.x -= speed.x > 0 ? d : -d;\r\n            //     }\r\n            // }\r\n        }\r\n        if (Math.abs(speed.y) < 1) {\r\n            this.jumps = 2;\r\n        }\r\n        if (this.jumps > 0 && this._up) {\r\n            speed.y = this.jumpSpeed;\r\n            this.jumps--;\r\n            this.setState(2);\r\n            this.jumping = true;\r\n        }\r\n        this._up = false;\r\n        if (this.jumping == false) {\r\n            if (speed.x > 0 || speed.x < 0) {\r\n                this.setState(1);\r\n            }\r\n            else {\r\n                this.setState(0);\r\n            }\r\n        }\r\n        if (speed.x != 0) {\r\n            if (speed.x < 0) {\r\n                if (this.node.x < (game.mapRect.x + 10)) {\r\n                    speed.x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (this.node.x > (game.mapRect.x + game.mapRect.width - 10)) {\r\n                    speed.x = 0;\r\n                }\r\n            }\r\n            if (speed.y == 0) {\r\n                speed.y = 10;\r\n            }\r\n        }\r\n        this.body.linearVelocity = speed;\r\n    },\r\n    //设置角色状态\r\n    setState(value) {\r\n        if (this.roleState == value) return;\r\n        this.node.roleState = this.roleState = value;\r\n        this.node.emit(\"roleState\", this.roleState);//更改动作\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\")\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        bulletName: \"bullet1\",\r\n        parent: cc.Node,\r\n        sendNode: cc.Node,\r\n        shootNum: 5\r\n    },\r\n    unuse: function () {\r\n        this.shooting = false;\r\n        this.shoot_num = 0;\r\n        this.parent.off(\"shoot_start\", this.shoot_start, this);\r\n        this.parent.off(\"shoot_end\", this.shoot_end, this);\r\n    },\r\n    reuse: function (data) {\r\n        this.data = _.clone(data);\r\n        if (!this.parent) this.parent = this.node.parent;\r\n        this.parent.on(\"shoot_start\", this.shoot_start, this);\r\n        this.parent.on(\"shoot_end\", this.shoot_end, this);\r\n        this.shooting = false;\r\n        this.shoot_num = 0;\r\n    },\r\n    //碰撞进入\r\n    onCollisionEnter: function (other, self) {\r\n        if (this.parent.isDeath) return;\r\n        if (game.isOver) return;\r\n        this.shoot_num = 0;\r\n        if (this.shooting) {\r\n            this.parent.emit(\"collision_shoot_start\");\r\n        }\r\n    },\r\n    //碰撞停留\r\n    onCollisionStay: function (other, self) {\r\n        if (this.shooting) {\r\n            this.shoot_num++;\r\n            if (this.shoot_num >= this.shootNum) {\r\n                this.shoot();\r\n            }\r\n        }\r\n    },\r\n    //碰撞退出\r\n    onCollisionExit: function (other, self) {\r\n        this.shoot_num = 0;\r\n    },\r\n    //开始射击\r\n    shoot_start() {\r\n        this.shooting = true;\r\n    },\r\n    //射击动作结束\r\n    shoot_end() {\r\n        if (this.shooting) {\r\n            this.shoot();\r\n        }\r\n        // this.shooting = false;\r\n    },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    shoot() {\r\n        this.shooting = false;\r\n        var sendNode = this.sendNode || this.node;\r\n        let shootPos = sendNode.convertToWorldSpaceAR(game.point1);\r\n        let targetPos = sendNode.convertToWorldSpaceAR(game.point2);\r\n        let angle = game.gameUtils.getRotation(shootPos, targetPos);\r\n        if (this.node.scaleX < 0) {\r\n            angle = 360 - angle;\r\n        }\r\n        else {\r\n        }\r\n        // _.assignIn(this.data, {\r\n        this.data.prefabName = this.bulletName;//预制体名称\r\n        this.data.v = shootPos;//位置\r\n        this.data.angle = angle;//角度\r\n        this.data.group = \"enbull\"; //组\r\n        //prefabName\r\n        game.emit(\"shoot\", this.data);\r\n        this.parent.emit(\"collision_shoot_end\");\r\n        this.shoot_num = 0;\r\n    }\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onLoad() {\r\n        var parent = this.node.parent; //父节点\r\n        var box = this.node.getComponent(cc.BoxCollider); //碰撞组件\r\n        if (box) {\r\n            var parentBox = parent.getComponent(cc.PhysicsBoxCollider);//物理引擎碰撞组件\r\n            parentBox.offset = box.offset.clone();\r\n            parentBox.size = box.size.clone();\r\n        }\r\n        else {\r\n            // box = this.node.getComponent(cc.PolygonCollider); //碰撞组件\r\n            // var parentBox = parent.getComponent(cc.PhysicsPolygonCollider);//物理引擎碰撞组件\r\n            // parentBox.points = box.points;\r\n        }\r\n    },\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    //骨骼动画精灵组件\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    onDestroy() {\r\n    },\r\n    unuse: function () {\r\n        //this.clearTracks();\r\n        this.parent.off(\"roleState\", this.setRoleState, this);\r\n        this.parent.off(\"attack\", this.setRoleState, this);\r\n        this.node.off(\"death\", this.death, this);\r\n        game.off(\"gameOver\", this.gameOver, this);\r\n        this.node.off(\"shoot_start\", this.shoot_start, this);\r\n        this.node.off(\"shoot_end\", this.shoot_end, this);\r\n        this.node.off(\"collision_shoot_start\", this.collision_shoot_start, this);\r\n        this.node.off(\"collision_shoot_end\", this.shoot_end, this);\r\n    },\r\n    reuse: function (data) {\r\n        this.shootIng = false;\r\n        if (!this.parent) this.parent = this.node.parent;\r\n        this.node.getComponent(cc.Collider).enabled = true;\r\n        this.parent.isDeath = this.node.isDeath = false;\r\n        this.parent.on(\"roleState\", this.setRoleState, this);\r\n        this.parent.on(\"attack\", this.attack, this);\r\n        this.node.on(\"death\", this.death, this);\r\n        this.node.on(\"shoot_start\", this.shoot_start, this);\r\n        this.node.on(\"collision_shoot_start\", this.collision_shoot_start, this);\r\n        this.node.on(\"collision_shoot_end\", this.shoot_end, this);\r\n        this.node.on(\"shoot_end\", this.shoot_end, this);\r\n        game.on(\"gameOver\", this.gameOver, this);\r\n        this.node.y = data.zy;\r\n    },\r\n    shoot_end() {\r\n        this.sp.timeScale = 1;\r\n    },\r\n    shoot_start() {\r\n        this.sp.timeScale = 0.5;\r\n    },\r\n    collision_shoot_start(value) {\r\n        value = value || 0.1;\r\n        this.sp.timeScale = 0.1;\r\n    },\r\n    update() {\r\n        if (this.sp.timeScale < 1)\r\n            this.sp.timeScale += 0.02\r\n    },\r\n    gameOver() {\r\n        this.changeAction(\"idle\");\r\n    },\r\n    //死亡\r\n    death() {\r\n        this.changeAction(\"death\");\r\n        this.parent.isDeath = this.node.isDeath = true;\r\n        this.node.getComponent(cc.Collider).enabled = false;\r\n    },\r\n    onLoad() {\r\n        if (!this.parent) this.parent = this.node.parent;\r\n        this.sp = this.getComponent(sp.Skeleton); //获取骨骼动画组件\r\n        // this.sp_skeleton_data = this.sp._skeleton.data;\r\n        // this.sp_state = this.sp.getState();\r\n        // this.sp_state_data = this.sp_state.data;\r\n        // this.sp_state_data.defaultMix = 0.3;\r\n        //  this.setMix('run', 'attack', 0.1);\r\n        //  this.setMix('idle', 'attack', 0.1); //移动射击\r\n        let spine = this.sp;\r\n        this.shootIng = false;\r\n        spine.setStartListener(function (trackEntry) {\r\n            let animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            if (animationName == \"attack\") {\r\n                this.shootIng = true;\r\n                this.node.emit(\"shoot_start\");\r\n            }\r\n        }.bind(this));\r\n        spine.setCompleteListener(function (trackEntry) {\r\n            let animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            if (animationName === 'death') {\r\n                // this.parent.removeFromParent();\r\n                var pool = this.parent.pool;\r\n                if (pool) {\r\n                    pool.put(this.parent);\r\n                }\r\n                else {\r\n                    this.parent.removeFromParent(true);\r\n                    this.parent.destroy();\r\n                }\r\n            }\r\n            if (animationName === \"attack\") {\r\n                //this.node.emit(\"attackShoot\", 2);\r\n                this.shootIng = false;\r\n                this.node.emit(\"shoot_end\");\r\n                this.sp.setAnimation(0, this.curAction, true);\r\n            }\r\n        }.bind(this));\r\n    },\r\n    //setMix 为所有关键帧设定混合及混合时间（从当前值开始差值）。\r\n    setMix(anim1, anim2, mixTime) {\r\n        // this.sp.setMix(anim1, anim2, mixTime);\r\n        // this.sp.setMix(anim2, anim1, mixTime);\r\n    },\r\n    attack(pos) {\r\n        this.targetPos = pos;//目标位置\r\n        this.changeAction(\"attack\");\r\n    },\r\n    setRoleState(value) {\r\n        this.roleState = value;//角色状态  0=静止 1=移动 2=跳跃\r\n        switch (value) {\r\n            case 0: //静止\r\n                this.changeAction(\"idle\");\r\n                break;\r\n            case 1://移动\r\n                this.changeAction(\"run\");\r\n                break;\r\n            case 2: //跳跃\r\n                //  this.changeAction(\"jump\");\r\n                break;\r\n        }\r\n    },\r\n    changeAction(value) {\r\n        if (!this.node) return;\r\n        if (this.node.isDeath) return;\r\n        if (this.sp.animation == value) return;\r\n        let self = this;\r\n        switch (value) {\r\n            case \"death\":\r\n                this.sp.timeScale = 1;\r\n                this.sp.setAnimation(0, \"death\", false);\r\n                break;\r\n            case \"run\":\r\n                this.sp.timeScale = 1;\r\n                this.sp.setAnimation(0, \"run\", true);\r\n                this.curAction = \"run\";\r\n                break;\r\n            case \"idle\":\r\n                this.sp.timeScale = 1;\r\n                this.curAction = \"idle\";\r\n                if (!this.shootIng)\r\n                    this.sp.setAnimation(0, \"idle\", true);\r\n                break;\r\n            case \"attack\":\r\n                this.sp.setAnimation(0, \"attack\", false);\r\n                // this.sp.setTrackEventListener(entry, function (trackIndex, event) {\r\n                //     //   console.log(\"TrackEventListener :\", event.data.name, Date.now());\r\n                //     // let weapon = this.sp.findBone(\"root_qiang\");\r\n                //     // let weaponPos = cc.v2(weapon.worldX, weapon.worldY);\r\n                //     // let worldPos = this.node.convertToWorldSpaceAR(weaponPos);\r\n                //     // let rotation = gameUtils.getRotation(worldPos, this.targetPos);\r\n                //     //self.node.emit(\"attack\", 1, worldPos, 180, \"enbull\");\r\n                //     this.node.emit(\"attackShoot\", 3);\r\n                // }.bind(this));\r\n                break;\r\n        }\r\n    }\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    onLoad() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        this.init(data);\r\n    },\r\n    //开火动画\r\n    init(data) {\r\n        if (!this._isinit) {\r\n            this._isinit = true;\r\n            this.aniNames = [];\r\n        }\r\n        this.node.angle = data.angle;\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (this.aniNames.indexOf(data.aniName) < 0) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, data.aniName);\r\n            let clip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 40);\r\n            this.aniNames.push(data.aniName);\r\n            clip.name = data.aniName;\r\n            clip.wrapMode = cc.WrapMode.Normal;\r\n            animation.addClip(clip);\r\n        }\r\n        animation.playAdditive(data.aniName, 0);\r\n        animation.once(\"finished\", function () {\r\n            var pool = this.node.pool;\r\n            if (pool) {\r\n                pool.put(this.node);\r\n            }\r\n            else {\r\n                this.node.removeFromParent(true);\r\n                this.node.destroy();\r\n            }\r\n        }.bind(this));\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    }\r\n});\r\n","cc.Class({\n    extends: cc.Component,\n    properties: {\n        target: {\n            default: null,\n            type: cc.Node\n        },\n        map: cc.Node\n    },\n    // use this for initialization\n    onLoad: function () {\n        if (!this.target || !this.map) {\n            return;\n        }\n        var widget = this.node.getComponent(cc.Widget);\n        if (widget) {\n            widget.updateAlignment();\n        }\n        this.mapRect = this.map.getBoundingBox();\n        this.minX = 0;\n        this.maxX = this.mapRect.width - cc.winSize.width;\n        this.minY = 0;\n        this.maxY = this.mapRect.height - cc.winSize.height;\n\n        game.mapRect=this.mapRect;\n    },\n    // called every frame, uncomment this function to activate update callback\n    lateUpdate: function (dt) {\n        if (!this.target) {\n            return;\n        }\n        let targetPos = this.target.convertToWorldSpaceAR(cc.Vec2.ZERO);\n        let nodepos = this.node.parent.convertToNodeSpaceAR(targetPos);\n        if (nodepos.x < this.minX) nodepos.x = this.minX;\n        else if (nodepos.x > this.maxX) nodepos.x = this.maxX;\n        if (nodepos.y < this.minY) nodepos.y = this.minY;\n        else if (nodepos.y > this.maxY) nodepos.y = this.maxY;\n        this.node.position = nodepos;\n        // let ratio = targetPos.y / cc.winSize.height;\n        // this.camera.zoomRatio = 1 + (0.5 - ratio) * 0.5;\n    },\n});\n","module.exports = {\r\n    /*****站立    跑步  跳跃 射击  蹲下*/\r\n    idle: \"idle\",\r\n    /*****跳跃上*/\r\n    jump: \"jump\",\r\n    /*****跑步动作*/\r\n    run: \"run\",\r\n    /*****射击动作*/\r\n    attack: \"attack\",\r\n    /*****蹲下动作*/\r\n    crouch: \"crouch\",\r\n    /*****向左移动*/\r\n    MOVE_LEFT: 1,\r\n    /*****向右移动*/\r\n    MOVE_RIGHT: 2,\r\n}","module.exports = {\r\n    guan1_1: { //第一章 第一关配置\r\n        \"junguan\": {\r\n            hp: 300,\r\n            attack: 40,\r\n            findX: 40\r\n        },\r\n    }\r\n}","module.exports = {\r\n    left: \"left\", //\r\n    right: \"right\",\r\n    down: \"down\",\r\n    up: \"up\",\r\n    weapons: \"weapons\",//切花武器\r\n}","module.exports = {\r\n    /*****加载场景*/\r\n    load_scene: \"load_scene\",\r\n    /*****弹出一个预制体*/\r\n    popup_prefab: \"popup_prefab\",\r\n    /*****关闭一个预制体*/\r\n    closed_prefab: \"closed_prefab\",\r\n    /*****向左移动*/\r\n    moveLeft: \"moveLeft\",\r\n}","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        scrollView: cc.ScrollView,\r\n        jiaose: cc.Node,\r\n        zhangLabel: cc.Label,\r\n        shangBtn: cc.Button,\r\n        xiaBtn: cc.Button,\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        let list = game.localStorage.getItem(\"guanka-data\");\r\n        if (!list) {\r\n            list = [];\r\n            game.localStorage.setItem(\"guanka-data\", list);\r\n        }\r\n        list = [\r\n            {num: 101, state: 3},\r\n            {num: 102, state: 2},\r\n            {num: 103, state: 2},\r\n            {num: 104, state: 1}\r\n        ]\r\n        game.curNum = game.localStorage.getItem(\"guanka-curGuan\") || 105;\r\n        game.curZhang = parseInt(game.curNum / 100);\r\n        game.curGuan = game.curNum % 100;\r\n        let guankazhangs = this.getComponentsInChildren(\"guankazhang\");\r\n        guankazhangs.sort(function (a, b) {\r\n            return a.num - b.num;\r\n        });\r\n        this.zhangNodeList = guankazhangs;\r\n        this.curIndex = 0;\r\n        for (let i = 0; i < guankazhangs.length; i++) {\r\n            let zhang = guankazhangs[i];\r\n            if (game.curZhang == zhang.num) {\r\n                zhang.node.active = true;\r\n                this.jiaose.parent = zhang.node;\r\n                this.curIndex = i;\r\n                this.scrollView.content = zhang.node;\r\n            }\r\n            else {\r\n                zhang.node.active = false;\r\n            }\r\n        }\r\n        game.localStorage.setItem(\"guanka-curNum\", game.curNum);\r\n        let items = this.getComponentsInChildren(\"guanItem\");\r\n        items.sort(function (a, b) {\r\n            return a.num - b.num;\r\n        })\r\n        for (let i = 0; i < items.length; i++) {\r\n            let item = items[i];\r\n            item.setInfo(list[i]);\r\n            if (item.num == game.curNum) {\r\n                this.jiaose.x = item.node.x;\r\n                this.jiaose.y = item.node.y + 50;\r\n            }\r\n        }\r\n        this.updateBtnState();\r\n    },\r\n    updateBtnState() {\r\n        this.zhangLabel.string = \"第\" + (this.curIndex + 1) + \"章\";\r\n        if (this.curIndex == 0 || this.zhangNodeList.length < 2) {\r\n            this.shangBtn.interactable = false;\r\n        }\r\n        else {\r\n            this.shangBtn.interactable = true;\r\n        }\r\n        if (this.curIndex >= (this.zhangNodeList.length - 1)) {\r\n            this.xiaBtn.interactable = false;\r\n        }\r\n        else {\r\n            this.xiaBtn.interactable = true;\r\n        }\r\n    },\r\n    updataMap() {\r\n        for (let i = 0; i < this.zhangNodeList.length; i++) {\r\n            let zhang = this.zhangNodeList[i];\r\n            if (i == this.curIndex) {\r\n                zhang.node.active = true;\r\n                this.curIndex = i;\r\n                this.scrollView.content = zhang.node;\r\n            }\r\n            else {\r\n                zhang.node.active = false;\r\n            }\r\n        }\r\n    },\r\n    onShang() {\r\n        var a = this.curIndex - 1;\r\n        if (a < 0) return;\r\n        this.curIndex = a;\r\n        this.updataMap();\r\n        this.updateBtnState();\r\n    },\r\n    onXia() {\r\n        var a = this.curIndex + 1;\r\n        if (a >= this.zhangNodeList.length) return;\r\n        this.curIndex = a;\r\n        this.updataMap();\r\n        this.updateBtnState();\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        //     tooltip: \"描述tips\"\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onDestroy() {\r\n        game.emit(\"levelGame\");\r\n    },\r\n    onLoad() {\r\n        game.emit(\"enterGame\");\r\n        game.soundManager.playMusic(game.gameSound.bgm1_1,true);\r\n        \r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //当该组件被启用，并且它的节点也激活时。\r\n    // onEnable() {\r\n    // },\r\n    // //当该组件被禁用或节点变为无效时调用。\r\n    // onDisable() {\r\n    // },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        this.data = data;\r\n    },\r\n    onClosed(e) {\r\n        game.emit(game.gameEvent.load_scene, game.gameScene.hall);\r\n        game.emit(game.gameEvent.closed_prefab, this.node);\r\n    },\r\n    start() {\r\n    }\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        this.data = data;\r\n    },\r\n    onClosed(e) {\r\n        game.emit(game.gameEvent.load_scene, game.gameScene.hall);\r\n        game.emit(game.gameEvent.closed_prefab, this.node);\r\n    },\r\n    start() {\r\n    }\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n        this.node.off(\"death\", this.death, this);\r\n    },\r\n    addEvent() {\r\n        this.node.on(\"death\", this.death, this);\r\n    },\r\n    death() {\r\n        if (this.isDeath) return;\r\n        game.isOver = true;\r\n        this.node.isDeath = this.isDeath = true;\r\n        var win = true;\r\n        if (this.node.group == \"myrole\") {\r\n            win = false;\r\n        }\r\n        game.emit(\"gameOver\");\r\n        let physicsManager = cc.director.getPhysicsManager();\r\n        physicsManager.enabled = false;\r\n        cc.director.getCollisionManager().enabled = false;\r\n        if (win) {\r\n            game.emit(game.gameEvent.popup_prefab, game.gamePopup.gameOver_win, {\r\n                test: parseInt(Math.random() * 1000),\r\n                win: win\r\n            });\r\n            game.soundManager.playMusic(game.gameSound.bgm_win, false);//停止播放音乐\r\n        }\r\n        else {\r\n            game.emit(game.gameEvent.popup_prefab, game.gamePopup.gameOver_loss, {\r\n                test: parseInt(Math.random() * 1000),\r\n                win: win\r\n            });\r\n            game.soundManager.playMusic(game.gameSound.bgm_lose, false);//停止播放音乐\r\n        }\r\n    },\r\n    onLoad() {\r\n        this.isDeath = false;\r\n        this.addEvent();\r\n    },\r\n    start() {\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n    },\r\n    onComplete() {\r\n        //cc.director.pause();\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    start() {\r\n    },\r\n    onClosed() {\r\n        //cc.director.resume();\r\n        game.emit(game.gameEvent.closed_prefab, this.node);\r\n    },\r\n    //返回大厅\r\n    onBackHome() {\r\n        //cc.director.resume();\r\n        game.emit(game.gameEvent.closed_prefab, this.node);\r\n        game.emit(game.gameEvent.load_scene, game.gameScene.hall);\r\n    },\r\n    //重新开始\r\n    onReStart() {\r\n        //cc.director.resume();\r\n        game.emit(game.gameEvent.closed_prefab, this.node);\r\n        game.emit(game.gameEvent.load_scene, game.gameScene.gameGuanka);\r\n    }\r\n});\r\n","module.exports = {\n    gameOver_loss:  {\n        url:  \"/ui/gameOver_loss\"\n    },\n    gameOver_win:  {\n        url:  \"/ui/gameOver_win\"\n    },\n    gamePause:  {\n        url:  \"/ui/gamePause\"\n    }\n}","module.exports = {\r\n    hall: \"hall\",\r\n    gameGuanka:\"gameGuanka\",\r\n    gameMain: \"gameMain\",\r\n    mapEdit: \"mapEdit\",\r\n    roleEdit: \"roleEdit\",\r\n}","module.exports = {\n    bao_zha_jing_bao:  \"/sound/bao_zha_jing_bao\",\n    bgm1_1:  \"/sound/bgm1_1\",\n    bgm1_2:  \"/sound/bgm1_2\",\n    bgm1_3:  \"/sound/bgm1_3\",\n    bgm2_1:  \"/sound/bgm2_1\",\n    bgm2_2:  \"/sound/bgm2_2\",\n    bgm2_3:  \"/sound/bgm2_3\",\n    bgm2_4:  \"/sound/bgm2_4\",\n    bgm3_1:  \"/sound/bgm3_1\",\n    bgm3_2:  \"/sound/bgm3_2\",\n    bgm3_3:  \"/sound/bgm3_3\",\n    bgm4_1:  \"/sound/bgm4_1\",\n    bgm4_2:  \"/sound/bgm4_2\",\n    bgm4_3:  \"/sound/bgm4_3\",\n    bgm4_4:  \"/sound/bgm4_4\",\n    bgm_lose:  \"/sound/bgm_lose\",\n    bgm_win:  \"/sound/bgm_win\",\n    bi_sha_yin_xiao1:  \"/sound/bi_sha_yin_xiao1\",\n    bi_sha_yin_xiao2:  \"/sound/bi_sha_yin_xiao2\",\n    bi_sha_yin_xiao3:  \"/sound/bi_sha_yin_xiao3\",\n    bo_li_po_sui:  \"/sound/bo_li_po_sui\",\n    boss_jing_bao:  \"/sound/boss_jing_bao\",\n    bu_chong_dan_yao:  \"/sound/bu_chong_dan_yao\",\n    chong_xing_qiang_jie1:  \"/sound/chong_xing_qiang_jie1\",\n    chong_xing_qiang_jie2:  \"/sound/chong_xing_qiang_jie2\",\n    chong_xing_qiang_jie3:  \"/sound/chong_xing_qiang_jie3\",\n    chong_xing_qiang_jie4:  \"/sound/chong_xing_qiang_jie4\",\n    chong_xing_qiang_jie5:  \"/sound/chong_xing_qiang_jie5\",\n    chong_xing_qiang_jie6:  \"/sound/chong_xing_qiang_jie6\",\n    chong_xing_qiang_jie7:  \"/sound/chong_xing_qiang_jie7\",\n    chu_shui:  \"/sound/chu_shui\",\n    da_bao_zha:  \"/sound/da_bao_zha\",\n    da_ji_sheng_yin:  \"/sound/da_ji_sheng_yin\",\n    da_tiao_yue:  \"/sound/da_tiao_yue\",\n    da_xiang_jiao_sheng:  \"/sound/da_xiang_jiao_sheng\",\n    dao_dan_bao_zha:  \"/sound/dao_dan_bao_zha\",\n    di_bing_si_wang01:  \"/sound/di_bing_si_wang01\",\n    di_bing_si_wang02:  \"/sound/di_bing_si_wang02\",\n    di_bing_si_wang03:  \"/sound/di_bing_si_wang03\",\n    di_bing_si_wang04:  \"/sound/di_bing_si_wang04\",\n    e_yu1:  \"/sound/e_yu1\",\n    fei_ji_fei_guo:  \"/sound/fei_ji_fei_guo\",\n    fei_ji_fei_lai:  \"/sound/fei_ji_fei_lai\",\n    fei_ji_fei_zou:  \"/sound/fei_ji_fei_zou\",\n    fei_ji_jin_ru:  \"/sound/fei_ji_jin_ru\",\n    fei_ji_tiao_chu:  \"/sound/fei_ji_tiao_chu\",\n    gong_fu_bo_dong_quan:  \"/sound/gong_fu_bo_dong_quan\",\n    gong_fu_da_xiao:  \"/sound/gong_fu_da_xiao\",\n    gong_fu_sheng_long_quan:  \"/sound/gong_fu_sheng_long_quan\",\n    gong_fu_xuan_feng_tui:  \"/sound/gong_fu_xuan_feng_tui\",\n    gong_gong_ji1:  \"/sound/gong_gong_ji1\",\n    gong_gong_ji2:  \"/sound/gong_gong_ji2\",\n    gong_ji:  \"/sound/gong_ji\",\n    hong_zha_ji_luo_dan:  \"/sound/hong_zha_ji_luo_dan\",\n    huo_che1:  \"/sound/huo_che1\",\n    huo_che2:  \"/sound/huo_che2\",\n    huo_jian_fa_she:  \"/sound/huo_jian_fa_she\",\n    ji_fen_yin_xiao:  \"/sound/ji_fen_yin_xiao\",\n    ji_guang_pao:  \"/sound/ji_guang_pao\",\n    ji_qiang1:  \"/sound/ji_qiang1\",\n    ji_qiang2:  \"/sound/ji_qiang2\",\n    ji_qiang3:  \"/sound/ji_qiang3\",\n    ji_qiang4:  \"/sound/ji_qiang4\",\n    ji_qiang5:  \"/sound/ji_qiang5\",\n    ji_qiang6:  \"/sound/ji_qiang6\",\n    ji_qiang7:  \"/sound/ji_qiang7\",\n    ji_qiang8:  \"/sound/ji_qiang8\",\n    jian_dao_fen_shu:  \"/sound/jian_dao_fen_shu\",\n    kan_dao:  \"/sound/kan_dao\",\n    kong_zi_dan:  \"/sound/kong_zi_dan\",\n    luo_shui:  \"/sound/luo_shui\",\n    ma_sheng_yin1:  \"/sound/ma_sheng_yin1\",\n    ma_sheng_yin2:  \"/sound/ma_sheng_yin2\",\n    mu_xiang_po_sui:  \"/sound/mu_xiang_po_sui\",\n    op:  \"/sound/op\",\n    qia_che_cha_che:  \"/sound/qia_che_cha_che\",\n    qia_che_kai_dong:  \"/sound/qia_che_kai_dong\",\n    qing_xing_qiang_jie1:  \"/sound/qing_xing_qiang_jie1\",\n    qing_xing_qiang_jie2:  \"/sound/qing_xing_qiang_jie2\",\n    qing_xing_qiang_jie3:  \"/sound/qing_xing_qiang_jie3\",\n    qing_xing_qiang_jie4:  \"/sound/qing_xing_qiang_jie4\",\n    reng_shou_lei:  \"/sound/reng_shou_lei\",\n    shi_bing_shou_liang:  \"/sound/shi_bing_shou_liang\",\n    shou_lei_bao_zha:  \"/sound/shou_lei_bao_zha\",\n    shou_qiang_shang_zi_dan:  \"/sound/shou_qiang_shang_zi_dan\",\n    tan_ke_she_ji:  \"/sound/tan_ke_she_ji\",\n    tan_ke_yun_xing:  \"/sound/tan_ke_yun_xing\",\n    teng_tiao:  \"/sound/teng_tiao\",\n    wen_chong1:  \"/sound/wen_chong1\",\n    wen_chong2:  \"/sound/wen_chong2\",\n    xi_xie_cao_gong_ji:  \"/sound/xi_xie_cao_gong_ji\",\n    xiao_dao01:  \"/sound/xiao_dao01\",\n    xiao_dao02:  \"/sound/xiao_dao02\",\n    xiao_dao03:  \"/sound/xiao_dao03\",\n    xiao_dao04:  \"/sound/xiao_dao04\",\n    xiao_dao_chu_dao:  \"/sound/xiao_dao_chu_dao\",\n    xiao_gui_chang_lao_si_wang:  \"/sound/xiao_gui_chang_lao_si_wang\",\n    xiao_gui_chui_jian:  \"/sound/xiao_gui_chui_jian\",\n    xiao_gui_gong_ji:  \"/sound/xiao_gui_gong_ji\",\n    xiao_gui_si_wang:  \"/sound/xiao_gui_si_wang\",\n    xiao_gui_zhan_li:  \"/sound/xiao_gui_zhan_li\",\n    xiao_yin1:  \"/sound/xiao_yin1\",\n    xiao_yin2:  \"/sound/xiao_yin2\",\n    xiao_yin3:  \"/sound/xiao_yin3\",\n    xiao_yin4:  \"/sound/xiao_yin4\",\n    zha_lan_kai_qi:  \"/sound/zha_lan_kai_qi\",\n    zhi_sheng_fei_ji:  \"/sound/zhi_sheng_fei_ji\",\n    zhong_dan1:  \"/sound/zhong_dan1\",\n    zhong_dan2:  \"/sound/zhong_dan2\",\n    zhong_xing_qiang_jie1:  \"/sound/zhong_xing_qiang_jie1\",\n    zhong_xing_qiang_jie2:  \"/sound/zhong_xing_qiang_jie2\",\n    zhong_xing_qiang_jie3:  \"/sound/zhong_xing_qiang_jie3\",\n    zhong_xing_qiang_jie4:  \"/sound/zhong_xing_qiang_jie4\",\n    zhong_xing_qiang_jie5:  \"/sound/zhong_xing_qiang_jie5\",\n    zhu_jiao_si_wang1:  \"/sound/zhu_jiao_si_wang1\",\n    zhu_jiao_si_wang2:  \"/sound/zhu_jiao_si_wang2\"\n}","module.exports = {\r\n//获取两点之间的角\r\n    getRotation: function (start, end) {\r\n        //算好初始位置和初始角度\r\n        var angle = Math.atan2(end.y - start.y, end.x - start.x);\r\n        if (angle < 0)\r\n            angle = angle + Math.PI * 2;\r\n        else if (angle > Math.PI * 2)\r\n            angle = angle - Math.PI * 2;\r\n        //var rotation = 360.0-angle * 180.0 / Math.PI;//原图的初始角度是向右用360- 向左则用180-\r\n        var rotation = angle * 180.0 / Math.PI;//原图的初始角度是向右用360- 向左则用180-\r\n        return rotation;\r\n    },\r\n    standardRotation: function (rotation) {\r\n        while (rotation > 180) {\r\n            rotation = rotation - 360;\r\n        }\r\n        while (rotation < -180) {\r\n            rotation = rotation + 360;\r\n        }\r\n        return rotation;\r\n    },\r\n    limitRotation: function (rotation, start, end) {\r\n        var a = Math.abs(rotation - start);\r\n        var b = Math.abs(end - rotation);\r\n        return a < 180 && b < 180;\r\n    },\r\n    getNextPos: function (pos, len, rotation) {\r\n        var angle = rotation * Math.PI / 180;\r\n        var x = pos.x + Math.cos(angle) * len;\r\n        var y = pos.x + Math.sin(angle) * len;\r\n        return cc.v2(x, y);\r\n    },\r\n    getLength: function (p1, p2) {\r\n        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n    },\r\n    getSpriteFrames: function (atlas, textName) {\r\n        textName = textName + \"_\"\r\n        var frames = [];\r\n        var i = 0;\r\n        while (true) {\r\n            var frameName = jm.sprintf('%s%d', textName, i);\r\n            var frame = atlas.getSpriteFrame(frameName);\r\n            if (!frame) {\r\n                frameName = jm.sprintf('%s%02d', textName, i);\r\n                frame = atlas.getSpriteFrame(frameName);\r\n            }\r\n            if (frame) {\r\n                frames.push(frame);\r\n            }\r\n            else if (i > 1) {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        return frames;\r\n    },\r\n}\r\n","module.exports = {\r\n    de_bu: { //德国小兵\r\n        hp: 100,\r\n        attack: 10,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n    de_jun: { //德国军官\r\n        hp: 135,\r\n        attack: 10,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n    de_pao: { //德国炮兵\r\n        hp: 150,\r\n        attack: 10,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n    hanjian: { //汉奸\r\n        hp: 150,\r\n        attack: 10,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n    rb_bu: { //日本步兵\r\n        hp: 100,\r\n        attack: 15,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n    rb_qi: { //日本骑兵\r\n        hp: 135,\r\n        attack: 15,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n    rb_quan: { //日本拳手\r\n        hp: 150,\r\n        attack: 15,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n    rb_zu: { //日本阻击兵\r\n        hp: 150,\r\n        attack: 20,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n    rb_wu: { //日本阻击兵\r\n        hp: 150,\r\n        attack: 20,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n    bl_man: { //bolo 男\r\n        hp: 200,\r\n        attack: 25,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n    bl_woman: { //bolo 男\r\n        hp: 250,\r\n        attack: 25,\r\n        findX: 40,\r\n        count: 10,\r\n        shootLen: 1000 //子弹射程\r\n    },\r\n}","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        num: 101,\r\n        stars: [cc.Sprite],\r\n        label: cc.Label,\r\n        gkIcon: cc.Sprite\r\n    },\r\n    onDestroy() {\r\n        this.addEvent(false)\r\n    },\r\n    onLoad() {\r\n        this.zhang = parseInt(this.num / 100);\r\n        this.guan = this.num % 100;\r\n        this.label.string = this.guan.toString();\r\n    },\r\n    addEvent(flg) {\r\n        if (this.flg == flg) return;\r\n        this.flg = flg;\r\n        if (flg) {\r\n            this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\r\n        }\r\n        else {\r\n            this.node.off(cc.Node.EventType.TOUCH_END, this.onTouch, this);\r\n        }\r\n    },\r\n    onTouch() {\r\n        cc.log(1);\r\n        game.guanKaInfo = \"guan1_1\";\r\n        game.emit(game.gameEvent.load_scene, game.gameScene.gameMain)\r\n    },\r\n    setInfo(info) {\r\n        info = info || {};\r\n        info.level = info.level || 0; //0\r\n        if (game.curNum == this.num) {\r\n            this.gkIcon.spriteFrame = game.ui_atlas.getSpriteFrame(\"gk-guka0\");\r\n            this.addEvent(true);\r\n        }\r\n        else {\r\n            if (info.state) {\r\n                this.addEvent(true);\r\n                this.gkIcon.spriteFrame = game.ui_atlas.getSpriteFrame(\"gk-guka1\");\r\n            }\r\n            else {\r\n                this.gkIcon.spriteFrame = game.ui_atlas.getSpriteFrame(\"gk-guka2\");\r\n            }\r\n        }\r\n        for (var i = 0; i < this.stars.length; i++) {\r\n            var star = this.stars[i];\r\n            if (info.state > i) {\r\n                star.spriteFrame = game.ui_atlas.getSpriteFrame(\"gk-start1\");\r\n            }\r\n            else {\r\n                star.spriteFrame = game.ui_atlas.getSpriteFrame(\"gk-start0\");\r\n            }\r\n        }\r\n    }\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        num: 1\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //当该组件被启用，并且它的节点也激活时。\r\n    // onEnable() {\r\n    // },\r\n    // //当该组件被禁用或节点变为无效时调用。\r\n    // onDisable() {\r\n    // },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onEnterGame(event, value) {\r\n        value = parseInt(value)\r\n        switch (value) {\r\n            case 1:\r\n                game.isOver = false;\r\n                game.emit(game.gameEvent.load_scene, game.gameScene.gameGuanka);\r\n                break;\r\n            case 2:\r\n                game.emit(game.gameEvent.load_scene, game.gameScene.mapEdit);\r\n                break;\r\n            case 3:\r\n                game.emit(game.gameEvent.load_scene, game.gameScene.roleEdit);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    onLoad() {\r\n        //game.soundManager.musicMute = true;\r\n        game.soundManager.playMusic(game.gameSound.op, true);\r\n\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        hero: cc.Node\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        this.node.removeAllChildren();\r\n        for (var i = 0; i < 20; i++) {\r\n            var hero = cc.instantiate(this.hero);\r\n            var hua = hero.getComponent(\"hua\");\r\n            hua.huaValue = parseInt(i / 20 * 255);\r\n            this.node.addChild(hero);\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //当该组件被启用，并且它的节点也激活时。\r\n    // onEnable() {\r\n    // },\r\n    // //当该组件被禁用或节点变为无效时调用。\r\n    // onDisable() {\r\n    // },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    //受到的伤害\r\n    onHurt(value) {\r\n    }\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        huaValue: 100,\r\n        huaLevel: 1\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        this.updateHua();\r\n    },\r\n    setHua(value) {\r\n        this.huaValue = value;\r\n        this.updateHua();\r\n    },\r\n    updateHua() {\r\n        let hueValue = Math.PI * 2 * this.huaValue / 255;\r\n        let mat = this.hueMatrix(hueValue);\r\n        let red = cc.v4(mat[0][0], mat[0][1], mat[0][2], 1);\r\n        let green = cc.v4(mat[1][0], mat[1][1], mat[1][2], 1);\r\n        let blue = cc.v4(mat[2][0], mat[2][1], mat[2][2], 1);\r\n        let renderComponents = this.node.getComponents(cc.RenderComponent);\r\n        let renderComponent = renderComponents[0];\r\n        let material = renderComponent.getMaterial(0);\r\n        let isLua = (material.name.indexOf(\"hua\") >= 0)\r\n        if (isLua) {\r\n            material.setProperty(\"red\", red);\r\n            material.setProperty(\"green\", green);\r\n            material.setProperty(\"blue\", blue);\r\n            material.setProperty(\"huaLevel\", this.huaLevel);\r\n        }\r\n    },\r\n    xRotateMat: function (mat, rs, rc) {\r\n        mat[0][0] = 1.0;\r\n        mat[0][1] = 0.0;\r\n        mat[0][2] = 0.0;\r\n        mat[1][0] = 0.0;\r\n        mat[1][1] = rc;\r\n        mat[1][2] = rs;\r\n        mat[2][0] = 0.0;\r\n        mat[2][1] = -rs;\r\n        mat[2][2] = rc;\r\n    },\r\n    yRotateMat: function (mat, rs, rc) {\r\n        mat[0][0] = rc;\r\n        mat[0][1] = 0.0;\r\n        mat[0][2] = -rs;\r\n        mat[1][0] = 0.0;\r\n        mat[1][1] = 1.0;\r\n        mat[1][2] = 0.0;\r\n        mat[2][0] = rs;\r\n        mat[2][1] = 0.0;\r\n        mat[2][2] = rc;\r\n    },\r\n    zRotateMat: function (mat, rs, rc) {\r\n        mat[0][0] = rc;\r\n        mat[0][1] = rs;\r\n        mat[0][2] = 0.0;\r\n        mat[1][0] = -rs;\r\n        mat[1][1] = rc;\r\n        mat[1][2] = 0.0;\r\n        mat[2][0] = 0.0;\r\n        mat[2][1] = 0.0;\r\n        mat[2][2] = 1.0;\r\n    },\r\n    matrixMult: function (a, b, c) {\r\n        var x, y;\r\n        var temp = [];\r\n        for (y = 0; y < 3; y++) {\r\n            temp[y] = [];\r\n            for (x = 0; x < 3; x++) {\r\n                temp[y][x] = b[y][0] * a[0][x] + b[y][1] * a[1][x] + b[y][2] * a[2][x];\r\n            }\r\n        }\r\n        for (y = 0; y < 3; y++) {\r\n            for (x = 0; x < 3; x++) {\r\n                c[y][x] = temp[y][x];\r\n            }\r\n        }\r\n    },\r\n    mat1000: function (mat) {\r\n        for (var i = 0; i < mat.length; i++) {\r\n            for (var j = 0; j < mat[i].length; j++) {\r\n                var temp = mat[i][j];\r\n                mat[i][j] = temp * 1000;\r\n            }\r\n        }\r\n    },\r\n    //色调矩阵\r\n    hueMatrix: function (hue) {\r\n        var mat = [];\r\n        mat[0] = [];\r\n        mat[1] = [];\r\n        mat[2] = [];\r\n        var rot = [];\r\n        rot[0] = [];\r\n        rot[1] = [];\r\n        rot[2] = [];\r\n        var seq2 = Math.sqrt(2);\r\n        var seq3 = Math.sqrt(3);\r\n        var mag, xrs, xrc, yrs, yrc, zrs, zrc;\r\n        mag = seq2;\r\n        xrs = 1.0 / mag;\r\n        xrc = 1.0 / mag;\r\n        this.xRotateMat(mat, xrs, xrc);\r\n        mag = seq3;\r\n        yrs = -1.0 / mag;\r\n        yrc = seq2 / mag;\r\n        this.yRotateMat(rot, yrs, yrc);\r\n        this.matrixMult(rot, mat, mat);\r\n        zrs = Math.sin(hue);\r\n        zrc = Math.cos(hue);\r\n        this.zRotateMat(rot, zrs, zrc);\r\n        this.matrixMult(rot, mat, mat);\r\n        this.yRotateMat(rot, -yrs, yrc);\r\n        this.matrixMult(rot, mat, mat);\r\n        this.xRotateMat(rot, -xrs, xrc);\r\n        this.matrixMult(rot, mat, mat);\r\n        return mat;\r\n    },\r\n    start() {\r\n    },\r\n// update (dt) {},\r\n})\r\n;\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        value: 10,//伤害值\r\n        type: 0,//0=伤害1个  1=范围伤害\r\n        hurtValue: {\r\n            get() {\r\n                if (this.state == 1) {\r\n                    return this.value;\r\n                }\r\n                return 0;\r\n            }\r\n        },\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        this.state = 1;\r\n        if (data.attack) {\r\n            this.value = data.attack;\r\n        }\r\n    },\r\n    end() {\r\n        if (this.type == 0) {\r\n            this.state = 0;\r\n        }\r\n    }\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n      label:cc.Label\r\n    },\r\n    setInfo(vale){\r\n      this.label.string=vale.toString();\r\n    },\r\n\r\n    onLoad () {\r\n        \r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    onDestroy() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        label: cc.Node\r\n    },\r\n    onLoad() {\r\n        this.node.emit(\"drawClear\");\r\n        this.node.removeAllChildren();\r\n        var self = this;\r\n        for (var i = 0; i < 8; i++) {\r\n            var r = 360 * i / 8;\r\n            var a = Math.PI / 180 * r;\r\n            var v1 = cc.v2();\r\n            var v2 = this.getNextPos(cc.v2(), 100, r);\r\n            this.node.emit(\"lineTo\", v1, v2, \"#fff000\");\r\n            var label = cc.instantiate(this.label);\r\n            this.node.addChild(label);\r\n            label.x = v2.x;\r\n            label.y = v2.y;\r\n            label.getComponent(cc.Label).string = r;\r\n        }\r\n        this.node.emit(\"drawNow\");\r\n    },\r\n    getNextPos: function (pos, len, rotation) {\r\n        var angle = rotation * Math.PI / 180;\r\n        var x = pos.x + Math.cos(angle) * len;\r\n        var y = pos.x + Math.sin(angle) * len;\r\n        return cc.v2(x, y);\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","var jm = jm || {};\r\nvar _ = require(\"lodash\");\r\n(function () {\r\n    if (jm.root) return;\r\n    jm.root = {};\r\n    jm.root.registries = {};\r\n})();\r\n\r\nmodule.exports = jm;\n(function(){\r\n    if(jm.Class) return;\r\n    var fnTest = /xyz/.test(function(){xyz;}) ? /\\b_super\\b/ : /.*/;\r\n\r\n    // The base Class implementation (does nothing)\r\n    jm.Class = function(){};\r\n\r\n    // Create a new Class that inherits from this class\r\n    jm.Class.extend = function(prop) {\r\n        var _super = this.prototype;\r\n\r\n        // Instantiate a base class (but only create the instance,\r\n        // don't run the init constructor)\r\n        var prototype = Object.create(_super);\r\n\r\n        // Copy the properties over onto the new prototype\r\n        for (var name in prop) {\r\n            if(name == 'properties'){\r\n                continue;\r\n            }\r\n            // Check if we're overwriting an existing function\r\n            prototype[name] = typeof prop[name] == \"function\" &&\r\n                typeof _super[name] == \"function\" && fnTest.test(prop[name]) ?\r\n                (function(name, fn){\r\n                    return function() {\r\n                        var tmp = this._super;\r\n\r\n                        // Add a new ._super() method that is the same method\r\n                        // but on the super-class\r\n                        this._super = _super[name];\r\n\r\n                        // The method only need to be bound temporarily, so we\r\n                        // remove it when we're done executing\r\n                        var ret = fn.apply(this, arguments);\r\n                        this._super = tmp;\r\n\r\n                        return ret;\r\n                    };\r\n                })(name, prop[name]) :\r\n                prop[name];\r\n        }\r\n\r\n        {\r\n            var properties = prop['properties'];\r\n            for(var key in properties){\r\n                var desc = properties[key];\r\n                if(desc.get && typeof desc.get == \"string\"){\r\n                    desc.get = prototype[desc.get];\r\n                }\r\n                if(desc.set && typeof desc.set == \"string\"){\r\n                    desc.set = prototype[desc.set];\r\n                }\r\n                Object.defineProperty(prototype, key, desc);\r\n            }\r\n        }\r\n\r\n        // The dummy class constructor\r\n        function Class() {\r\n            if(this._className){\r\n                Object.defineProperty(this, \"className\", { value: this._className, writable: false });\r\n            }\r\n\r\n            // All construction is actually done in the init method\r\n            if ( this.ctor )\r\n                this.ctor.apply(this, arguments);\r\n        }\r\n\r\n        // Populate our constructed prototype object\r\n        Class.prototype = prototype;\r\n\r\n        // Enforce the constructor to be what we expect\r\n        Class.prototype.constructor = Class;\r\n\r\n        // And make this class extendable\r\n        Class.extend = jm.Class.extend;\r\n\r\n        return Class;\r\n    };\r\n})();\r\n\n(function(){\r\n    if(jm.Object) return;\r\n    jm.Object = jm.Class.extend({\r\n        _className: 'object',\r\n        attr: function (attrs) {\r\n            for (var key in attrs) {\r\n                if(key === 'className'){\r\n                    continue;\r\n                }\r\n                this[key] = attrs[key];\r\n            }\r\n        }\r\n    });\r\n\r\n    jm.object = function(){\r\n        return new jm.Object();\r\n    };\r\n})();\r\n\n(function(){\r\n    if(jm.Random) return;\r\n    var iRandomMax = 200000000000;    //最大随机整数范围 0 <= randomValue <= iRandomMax;\r\n\r\n    jm.Random = jm.Class.extend({\r\n        _className: 'random',\r\n\r\n        properties: {\r\n            seed: { get: 'getSeed', set: 'setSeed' }\r\n        },\r\n\r\n        ctor: function(opts){\r\n            opts = opts || {};\r\n            this.g_seed = 0;\r\n            this.randomMax =  opts.randomMax || iRandomMax;            \r\n        },\r\n\r\n        setSeed : function(seed)\r\n        {\r\n            this.g_seed = seed;\r\n        },\r\n\r\n        getSeed : function()\r\n        {\r\n            return this.g_seed;\r\n        },\r\n\r\n        random : function(){\r\n            this.g_seed = ( this.g_seed * 9301 + 49297 ) % 233280;\r\n            return this.g_seed / ( 233280.0 );\r\n        },\r\n\r\n        //min<=result<=max\r\n        randomInt : function(min, max)\r\n        {\r\n            if(max === undefined) {\r\n                max = min;\r\n                min = 0;\r\n            }\r\n            var range = min + (this.random()*(max - min));\r\n            return Math.round(range);\r\n        },\r\n\r\n        //min<=result<=max\r\n        randomDouble : function(min, max)\r\n        {\r\n            if(max === undefined) {\r\n                max = min;\r\n                min = 0.0;\r\n            }\r\n\r\n            var range = min + (this.random()*(max - min));\r\n            return range;\r\n        },\r\n\r\n        randomRange : function(range){\r\n            return this.randomInt(0,this.randomMax) % range;\r\n        },\r\n\r\n        randomOdds : function(range, odds){\r\n            if(this.randomRange(range) < odds) return 1;\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    jm.random = function(opts){\r\n        return new jm.Random(opts);\r\n    };\r\n\r\n})();\r\n\n(function () {\r\n    if (jm.EventEmitter) return;\r\n    jm.EventEmitter = jm.Object.extend({\r\n        _className: 'eventEmitter',\r\n        ctor: function () {\r\n            this._events = {};\r\n            this._persistEvents = {};\r\n            this.addListener = this.on;\r\n        },\r\n        __createListener: function (fn, caller) {\r\n            caller = caller;\r\n            return {\r\n                fn: fn,\r\n                caller: caller\r\n            };\r\n        },\r\n        __equalsListener: function (listener1, listener2) {\r\n            return listener1.fn === listener2.fn && listener1.caller === listener2.caller;\r\n        },\r\n        /**\r\n         * Adds a listener\r\n         * @api public\r\n         */\r\n        on: function (name, fn, caller) {\r\n            var listener = this.__createListener(fn, caller);\r\n            if (!this._events[name]) {\r\n                this._events[name] = listener;\r\n            } else if (Array.isArray(this._events[name])) {\r\n                this._events[name].push(listener);\r\n            } else {\r\n                this._events[name] = [this._events[name], listener];\r\n            }\r\n            return this;\r\n        },\r\n        onPersist: function (name, fn, caller) {\r\n            var listener = this.__createListener(fn, caller);\r\n            if (!this._persistEvents[name]) {\r\n                this._persistEvents[name] = listener;\r\n            } else if (Array.isArray(this._persistEvents[name])) {\r\n                this._persistEvents[name].push(listener);\r\n            } else {\r\n                this._persistEvents[name] = [this._persistEvents[name], listener];\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Adds a volatile listener.\r\n         * @api public\r\n         */\r\n\r\n        once: function (name, fn, caller) {\r\n            var self = this;\r\n            var listener = this.__createListener(fn, caller);\r\n\r\n            function on(arg1, arg2, arg3, arg4, arg5) {\r\n                self.removeListener(name, on);\r\n                fn.call(listener.caller, arg1, arg2, arg3, arg4, arg5);\r\n            };\r\n            on.listener = listener;\r\n            this.on(name, on);\r\n            return this;\r\n        },\r\n        /**\r\n         * Removes a listener.\r\n         * @api public\r\n         */\r\n\r\n        removeListener: function (name, fn, caller) {\r\n            var listener = this.__createListener(fn, caller);\r\n            if (this._events && this._events[name]) {\r\n                var list = this._events[name];\r\n                if (Array.isArray(list)) {\r\n                    var pos = -1;\r\n                    for (var i = 0, l = list.length; i < l; i++) {\r\n                        var o = list[i];\r\n                        if (this.__equalsListener(o, listener) || (o.listener && this.__equalsListener(o.listener, listener))) {\r\n                            pos = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (pos < 0) {\r\n                        return this;\r\n                    }\r\n                    list.splice(pos, 1);\r\n                    if (!list.length) {\r\n                        delete this._events[name];\r\n                    }\r\n                } else if (this.__equalsListener(list, listener) || (list.listener && this.__equalsListener(list.listener, listener))) {\r\n                    delete this._events[name];\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        removePersistListener: function (name, fn, caller) {\r\n            var listener = this.__createListener(fn, caller);\r\n            if (this._persistEvents && this._persistEvents[name]) {\r\n                var list = this._persistEvents[name];\r\n                if (Array.isArray(list)) {\r\n                    var pos = -1;\r\n                    for (var i = 0, l = list.length; i < l; i++) {\r\n                        var o = list[i];\r\n                        if (this.__equalsListener(o, listener) || (o.listener && this.__equalsListener(o.listener, listener))) {\r\n                            pos = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (pos < 0) {\r\n                        return this;\r\n                    }\r\n                    list.splice(pos, 1);\r\n                    if (!list.length) {\r\n                        delete this._persistEvents[name];\r\n                    }\r\n                } else if (this.__equalsListener(list, listener) || (list.listener && this.__equalsListener(list.listener, listener))) {\r\n                    delete this._persistEvents[name];\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        //移除NODE注册的所有事件。\r\n        delListener: function (caller) {\r\n            for (var name in  this._events) {\r\n                var list = this._events[name];\r\n                if (!Array.isArray(list)) {\r\n                    list = [list];\r\n                }\r\n                list = list.concat();\r\n                for (var i in list) {\r\n                    var listener = list[i];\r\n                    if (listener.caller && listener.fn && listener.caller === caller) {\r\n                        this.removeListener(name, listener.fn, caller);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Removes all listeners for an event.\r\n         * @api public\r\n         */\r\n\r\n        removeAllListeners: function (name) {\r\n            if (name === undefined) {\r\n                this._events = {};\r\n                return this;\r\n            }\r\n            if (this._events && this._events[name]) {\r\n                //this._events[name] = null;\r\n                delete this._events[name];\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Gets all listeners for a certain event.\r\n         *\r\n         * @api publci\r\n         */\r\n\r\n        listeners: function (name) {\r\n            if (!this._events[name]) {\r\n                this._events[name] = [];\r\n            }\r\n            if (!Array.isArray(this._events[name])) {\r\n                this._events[name] = [this._events[name]];\r\n            }\r\n            return this._events[name];\r\n        },\r\n        /**\r\n         * Emits an event.\r\n         *\r\n         * tip: use arg1...arg5 instead of arguments for performance consider.\r\n         *\r\n         * @api public\r\n         */\r\n\r\n        emit: function (name, arg1, arg2, arg3, arg4, arg5) {\r\n            this._emitPersist(name, arg1, arg2, arg3, arg4, arg5);\r\n            var handler = this._events[name];\r\n            if (!handler) return this;\r\n            if (typeof handler === 'object' && !Array.isArray(handler)) {\r\n                handler.fn.call(handler.caller || this, arg1, arg2, arg3, arg4, arg5);\r\n            } else if (Array.isArray(handler)) {\r\n                var listeners = new Array(handler.length);\r\n                for (var i = 0; i < handler.length; i++) {\r\n                    listeners[i] = handler[i];\r\n                }\r\n                for (var i = 0, l = listeners.length; i < l; i++) {\r\n                    var h = listeners[i];\r\n                    if (h.fn.call(h.caller || this, arg1, arg2, arg3, arg4, arg5) === false) break;\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        _emitPersist: function (name, arg1, arg2, arg3, arg4, arg5) {\r\n            var handler = this._persistEvents[name];\r\n            if (!handler) return this;\r\n            if (typeof handler === 'object' && !Array.isArray(handler)) {\r\n                handler.fn.call(handler.caller || this, arg1, arg2, arg3, arg4, arg5);\r\n            } else if (Array.isArray(handler)) {\r\n                var listeners = new Array(handler.length);\r\n                for (var i = 0; i < handler.length; i++) {\r\n                    listeners[i] = handler[i];\r\n                }\r\n                for (var i = 0, l = listeners.length; i < l; i++) {\r\n                    var h = listeners[i];\r\n                    if (h.fn.call(h.caller || this, arg1, arg2, arg3, arg4, arg5) === false) break;\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n    });\r\n    jm.eventEmitter = function () {\r\n        var event = new jm.EventEmitter();\r\n        event.off = event.removeListener;\r\n        return event;\r\n    }\r\n    var prototype = jm.EventEmitter.prototype;\r\n    var EventEmitter = {\r\n        _events: {},\r\n        _persistEvents: {},\r\n        delListener: prototype.delListener,\r\n        removePersistListener: prototype.removePersistListener,\r\n        _emitPersist: prototype._emitPersist,\r\n        __createListener: prototype.__createListener,\r\n        __equalsListener: prototype.__equalsListener,\r\n        on: prototype.on,\r\n        once: prototype.once,\r\n        onPersist: prototype.onPersist,\r\n        addListener: prototype.on,\r\n        removeListener: prototype.removeListener,\r\n        removeEventListener: prototype.removeListener,\r\n        off: prototype.removeListener,\r\n        removeAllListeners: prototype.removeAllListeners,\r\n        listeners: prototype.listeners,\r\n        emit: prototype.emit\r\n    };\r\n    var em = EventEmitter;\r\n    jm.enableEvent = function (obj) {\r\n        if (obj._events !== undefined) return;\r\n        for (var key in em) {\r\n            obj[key] = em[key];\r\n        }\r\n        obj._events = {};\r\n        return this;\r\n    };\r\n    jm.disableEvent = function (obj) {\r\n        for (var key in em) {\r\n            delete obj[key];\r\n        }\r\n        return this;\r\n    };\r\n})();\r\n\n(function(){\r\n    if(jm.TagObject) return;\r\n    jm.TagObject = jm.EventEmitter.extend({\r\n        _className: 'tagObject',\r\n\r\n        ctor: function(){\r\n            this._super();\r\n            this._tags = [];\r\n            Object.defineProperty(this, \"tags\", { value: this._tags, writable: false });\r\n        },\r\n\r\n        destroy: function(){\r\n            this.emit('destroy', this);\r\n            this.removeAllTags();\r\n        },\r\n\r\n        hasTag: function(tag){\r\n            var tags = this._tags;\r\n            return tags.indexOf(tag) != -1;\r\n        },\r\n\r\n        hasTagAny: function(tags){\r\n            for(var i in tags){\r\n                var t = tags[i];\r\n                if(this.hasTag(t)) return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        hasTagAll: function(tags){\r\n            for(var i in tags){\r\n                var t = tags[i];\r\n                if(!this.hasTag(t)) return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        addTag: function(tag){\r\n            var tags = this._tags;\r\n            if (this.hasTag(tag)) return this;\r\n            tags.push(tag);\r\n            this.emit('addTag', tag);\r\n            return this;\r\n        },\r\n\r\n        addTags: function(tags){\r\n            for(var i in tags){\r\n                var t = tags[i];\r\n                this.addTag(t);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        removeTag: function(tag){\r\n            var tags = this._tags;\r\n            var idx = tags.indexOf(tag);\r\n            if(idx>=0){\r\n                tags.splice(idx, 1);\r\n            }\r\n            this.emit('removeTag', tag);\r\n            return this;\r\n        },\r\n\r\n        removeTags: function(tags){\r\n            for(var i in tags){\r\n                var t = tags[i];\r\n                this.removeTag(t);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        removeAllTags: function () {\r\n            var v = this._tags;\r\n            for(i in v){\r\n                this.emit('removeTag', v[i]);\r\n            }\r\n            this._tags = [];\r\n            this.emit('removeAllTags');\r\n            return this;\r\n        }\r\n\r\n    });\r\n\r\n    jm.tagObject = function(){return new jm.TagObject();}\r\n\r\n    var prototype = jm.TagObject.prototype;\r\n    var Tag = {\r\n        _tags: [],\r\n        hasTag: prototype.hasTag,\r\n        hasTagAny: prototype.hasTagAny,\r\n        hasTagAll: prototype.hasTagAll,\r\n        addTag: prototype.addTag,\r\n        addTags: prototype.addTags,\r\n        removeTag: prototype.removeTag,\r\n        removeTags: prototype.removeTags,\r\n        removeAllTags: prototype.removeAllTags\r\n    };\r\n    jm.enableTag = function(obj) {\r\n        if(obj._tags!=undefined) return;\r\n        for(var key in Tag){\r\n            obj[key] = Tag[key];\r\n        }\r\n        obj._tags = [];\r\n        Object.defineProperty(obj, \"tags\", { value: obj._tags, writable: false });\r\n        jm.enableEvent(obj);\r\n    };\r\n    jm.disableTag = function(obj) {\r\n        for(var key in Tag){\r\n            delete obj[key];\r\n        }\r\n        jm.disableEvent(obj);\r\n    };\r\n})();\r\n\n(function () {\n    if (jm.Entity) return;\n    var guid = 1;\n\n    function isEmptyObject(e) {\n        var t;\n        for (t in e)\n            return false;\n        return true;\n    }\n\n    jm.Entity = jm.TagObject.extend({\n        _className: 'entity',\n\n        ctor: function (entityManager) {\n            this._super();\n\n            this.entityManager = entityManager;\n            this._components = {};\n            this._componentsByClass = {};\n            this._componentGUID = 1;\n\n            this.active = true;\n            this.entityId = guid++;\n\n            Object.defineProperty(this, \"components\", {value: this._components, writable: false});\n            Object.defineProperty(this, \"componentsByClass\", {value: this._componentsByClass, writable: false});\n\n            this.on('addTag', function (tag) {\n                entityManager._entitiesByTag[tag] = entityManager._entitiesByTag[tag] || {};\n                entityManager._entitiesByTag[tag][this.entityId] = this;\n            });\n            this.on('removeTag', function (tag) {\n                var o = entityManager._entitiesByTag[tag];\n                if (!o) return;\n                delete o[this.entityId];\n                if (isEmptyObject(o))\n                    delete entityManager._entitiesByTag[tag];\n            });\n        },\n\n        destroy: function () {\n            this.emit('destroy', this);\n            this.removeAllComponents();\n            this.removeAllTags();\n        },\n\n        removeChild: function (e) {\n            this.entityManager.removeEntity(e.entityId);\n            this.children = _.without(this.children, e);\n            e.destroy();\n        },\n\n        removeFromParent: function () {\n            this.removeAllTags();\n            if (this.parent) {\n                this.parent.removeChild(this);\n            } else {\n                this.entityManager.removeEntity(this.entityId);\n            }\n        },\n\n        addComponent: function (c) {\n            var components = this._components;\n            var componentsByClass = this._componentsByClass;\n            var name = c.name;\n            var cClassName = c.className;\n\n            var bUsedName = (name in components );\n            if (bUsedName) {\n                if (c.singleton) {\n                    if (bUsedName) throw \"componen already exists with the name: \" + name;\n                }\n                name = cClassName + this._componentGUID++;\n                c.name = name;\n            }\n\n            if (cClassName in componentsByClass) {\n            } else {\n                componentsByClass[cClassName] = {};\n            }\n            var vByClass = componentsByClass[cClassName];\n\n            components[name] = c;\n            vByClass[name] = c;\n            this[name] = c;\n            this.addTag(cClassName);\n            if (c.classAlias) this.addTag(c.classAlias);\n\n            c.onAdd(this);\n            c.emit('add', this);\n            this.emit('addComponent', c);\n\n            return this;\n        },\n\n        removeComponent: function (c_or_name) {\n            var components = this._components;\n            var componentsByClass = this._componentsByClass;\n            var c = c_or_name;\n            if (typeof c == 'string') {\n                c = components[c];\n            }\n            if (!c) return this;\n            var name = c.name;\n            var cClassName = c.className;\n            var v = componentsByClass[cClassName];\n            delete components[name];\n            delete v[name];\n            delete this[name];\n            this.removeTag(cClassName);\n\n            c.onRemove(this);\n            c.emit('remove', this);\n            this.emit('removeComponent', c);\n            c.destroy();\n            return this;\n        },\n\n        removeComponents: function (className) {\n            var v = this.getComponents(className);\n            for (i in v) {\n                this.removeComponent(i);\n            }\n            delete this._componentsByClass[className];\n            this.emit('removeComponents', className);\n            return this;\n        },\n\n        removeAllComponents: function () {\n            var v = this._components;\n            for (i in v) {\n                this.removeComponent(i);\n            }\n            this.emit('removeAllComponents');\n            return this;\n        },\n\n        getComponent: function (name) {\n            return this._components[name];\n        },\n\n        getComponents: function (className) {\n            return this._componentsByClass[className];\n        },\n\n        /**\n         * 鍘绘帀entityType涓凡缁忓畾涔夌殑鐩稿悓閮ㄥ垎\n         */\n        _clip: function (origin, target) {\n            if (!origin) {\n                return;\n            }\n\n            var obj = target;\n\n            for (var key in target) {\n                var t = target[key];\n                var o = origin[key];\n                if (_.isObject(t)) {\n                    if (o) {\n                        this._clip(o, t);\n                    }\n                    if (_.isEmpty(t)) {\n                        delete target[key];\n                    }\n                    continue;\n                }\n\n                if (t === o) {\n                    delete target[key];\n                }\n            }\n        },\n\n        toJSON: function () {\n            var em = this.entityManager;\n            var type = this.type;\n            var et = em.entityType(type);\n\n            var opts = {\n                type: type,\n                tags: [],\n                components: {}\n            };\n\n            opts.tags = _.cloneDeep(this.tags);\n            opts.tags = _.without(opts.tags, type);\n\n            var cs = opts.components;\n            var v = this.components;\n            for (i in v) {\n                var c = v[i];\n                cs[i] = c.toJSON();\n                opts.tags = _.without(opts.tags, i, c.className);\n                if (c.classAlias) opts.tags = _.without(opts.tags, c.classAlias);\n                if (i === cs[i].className)\n                    delete cs[i].className;\n            }\n\n            for (i in et.tags) {\n                opts.tags = _.without(opts.tags, et.tags[i]);\n            }\n            if (!opts.tags.length) delete opts.tags;\n\n            //鍘绘帀entityType涓凡缁忓畾涔夌殑鐩稿悓閮ㄥ垎\n            this._clip(et, opts);\n\n            v = this.children;\n            for (i in v) {\n                var e = v[i];\n                if (!opts.children) opts.children = [];\n                opts.children.push(e.toJSON());\n            }\n\n            return opts;\n        }\n\n    });\n})();\n(function () {\n    if (jm.Component) return;\n    jm.Component = jm.TagObject.extend({\n        _className: 'component',\n        _singleton: true,\n        _nameReadOnly: false,\n        properties: {\n            singleton: {get: 'getSignleton'},\n            entity: {get: 'getEntity'},\n            name: {get: 'getName', set: 'setName'}\n        },\n\n        ctor: function (entity, opts) {\n            this._super();\n            this._entity = entity;\n            this.active = true;\n            if (opts) this.attr(opts);\n        },\n\n        destroy: function () {\n        },\n\n        /**\n         * on added to an entity\n         * @param e\n         */\n        onAdd: function (e) {\n        },\n\n        /**\n         * on removed from an entity\n         * @param e\n         */\n        onRemove: function (e) {\n        },\n\n        getName: function () {\n            return this._name || this.classAlias || this.className;\n        },\n\n        setName: function (name) {\n            if (this._nameReadOnly) return;\n            this._name = name;\n        },\n\n        getSignleton: function () {\n            return this._singleton;\n        },\n\n        getEntity: function () {\n            return this._entity;\n        },\n\n        toJSON: function () {\n            return {\n                className: this.classAlias || this.className\n            };\n        }\n\n    });\n\n    jm.root.registries.components = {\n        'component': jm.Component\n    };\n\n    jm.Component.extend = function (opts) {\n        var Class = jm.Class.extend.call(this, opts);\n        Class.extend = jm.Component.extend;\n        jm.root.registries.components[Class.prototype._className] = Class;\n        return Class;\n    };\n\n})();\n(function () {\r\n    if (jm.Factory) return;\r\n    jm.Factory = jm.EventEmitter.extend({\r\n        _className: 'factory',\r\n\r\n        ctor: function (entityManager, opts) {\r\n            this._super(opts);\r\n            this.entityManager = entityManager;\r\n        },\r\n\r\n        destory: function () {\r\n            this.emit('destroy', this);\r\n            this._super();\r\n        },\r\n\r\n        create: function (opts) {\r\n            var e = new jm.Entity(this.entityManager);\r\n            if (!opts || !opts.components) return e;\r\n            if (opts.parent) {\r\n                e.parent = opts.parent;\r\n            }\r\n\r\n            var c;\r\n            var em = this.entityManager;\r\n            for (var name in opts.components) {\r\n                var info = opts.components[name];\r\n                var className = name;\r\n                if (info.className)\r\n                    className = info.className;\r\n                var C = em.component(className);\r\n                if (!C) {\r\n                    C = jm.root.registries.components[className];\r\n                    if (C) {\r\n                        em.addComponent(C, className);\r\n                    } else {\r\n                        console.log(className)\r\n                        C = eval(className);\r\n                        if (C) {\r\n                            C = jm.root.registries.components[C.prototype._className];\r\n                        }\r\n                        if (C) {\r\n                            em.addComponent(C, className, true);\r\n                        } else {\r\n                            em.emit('warn', 'can not find component ' + className + ', ignored');\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                c = new C(e, info);\r\n                if (info.className)\r\n                    c.name = name;\r\n                e.addComponent(c);\r\n            }\r\n            this.emit('create', e);\r\n            return e;\r\n        }\r\n\r\n    });\r\n\r\n\r\n    jm.root.registries.factories = {\r\n        'factory': jm.Factory\r\n    };\r\n    jm.Factory.extend = function (opts) {\r\n        var Class = jm.Class.extend.call(this, opts);\r\n        Class.extend = jm.Factory.extend;\r\n        jm.root.registries.factories[Class.prototype._className] = Class;\r\n        return Class;\r\n    };\r\n})();\n(function () {\n    if (jm.EntityManager) return;\n    var __parseConfigInfo = function (opts, key) {\n        var bArray = Array.isArray(opts);\n        var className, name;\n        if (bArray) {\n            className = opts[key];\n            name = null;\n        } else {\n            className = key;\n            name = opts[key];\n        }\n\n        return {className: className, name: name};\n    };\n\n    jm.EntityManager = jm.EventEmitter.extend({\n        _className: 'entityManager',\n\n        ctor: function (opts) {\n            this._super();\n\n            this._components = {};\n            this._processors = {};\n            this._factories = {};\n            this._entityTypes = {};\n            this._pools = {};\n\n            this._entities = {};\n            this._entitiesByName = {};\n            this._entitiesByTag = {};\n\n            Object.defineProperty(this, \"components\", {value: this._components, writable: false});\n            Object.defineProperty(this, \"processors\", {value: this._processors, writable: false});\n            Object.defineProperty(this, \"factories\", {value: this._factories, writable: false});\n            Object.defineProperty(this, \"entityTypes\", {value: this._entityTypes, writable: false});\n            Object.defineProperty(this, \"pools\", {value: this._pools, writable: false});\n\n            Object.defineProperty(this, \"entities\", {value: this._entities, writable: false});\n            Object.defineProperty(this, \"entitiesByName\", {value: this._entitiesByName, writable: false});\n            Object.defineProperty(this, \"entitiesByTag\", {value: this._entitiesByTag, writable: false});\n\n            var v = jm.root.registries.factories;\n            for (var key in v) {\n                var o = new v[key](this);\n                this.addFactory(o, key);\n            }\n\n            this.init(opts)\n        },\n\n        init: function (opts) {\n            if (!opts) return;\n            this.addComponents(opts.components);\n            this.addProcessors(opts.processors);\n            this.addFactories(opts.factories);\n        },\n\n        addComponents: function (opts) {\n            var bArray = _.isArray(opts);\n            for (var key in opts) {\n                var info = __parseConfigInfo(opts, key);\n                var C = eval(info.className);\n                this.addComponent(C, info.className, true);\n                this.addComponent(C, info.name);\n            }\n            return this;\n        },\n\n        addProcessors: function (opts) {\n            for (var key in opts) {\n                var info = __parseConfigInfo(opts, key);\n                var o = eval('new ' + info.className + '(this)');\n                if (info.name) {\n                    this.addProcessor(o, info.name);\n                } else {\n                    this.addProcessor(o, info.className);\n                }\n            }\n            return this;\n        },\n\n        addFactories: function (opts) {\n            for (var key in opts) {\n                var info = __parseConfigInfo(opts, key);\n                var o = eval('new ' + info.className + '(this)');\n                this.addFactory(o, info.className);\n                this.addFactory(o, info.name);\n            }\n            return this;\n        },\n\n        addComponent: function (C, name, notAlias) {\n            if (!C) return this;\n            if (!name) {\n                name = C.prototype._className;\n            } else {\n                if (!notAlias) {\n                    if (name != C.prototype._className) {\n                        C.prototype.classAlias = name;\n                    }\n                }\n            }\n            if (this._components[name]) {\n                this.emit('warn', 'add Compoent already exists for ' + name + ', replaced.');\n            }\n            this._components[name] = C;\n            this.emit('addComponent', name);\n            return this;\n        },\n\n        removeComponent: function (name) {\n            var components = this._components;\n            var o = components[name];\n            if (o) {\n                this.emit('removeComponent', name);\n            }\n            delete components[name];\n            return this;\n        },\n\n        component: function (name) {\n            return this._components[name];\n        },\n\n        addEntityType: function (type, opts) {\n            if (this._entityTypes[type]) {\n                this.emit('warn', 'add entityType already exists for ' + type + ', replaced.');\n            }\n\n            this._entityTypes[type] = opts;\n        },\n\n        addEntityTypes: function (opts) {\n            for (var type in opts) {\n                this.addEntityType(type, opts[type]);\n            }\n        },\n\n        entityType: function (type) {\n            return this._entityTypes[type];\n        },\n\n        addFactory: function (f, name) {\n            if (!f) return this;\n            name = name || f.name || f.className;\n\n            if (this._factories[name]) {\n                this.emit('warn', 'add factory already exists for ' + name + ', replaced.');\n            }\n\n            this._factories[name] = f;\n            if (f.entityManager != this)\n                f.entityManager = this;\n            this.emit('addFactory', f);\n\n            return this;\n        },\n\n        removeFactory: function (name) {\n            var factories = this._factories;\n            var f = factories[name];\n            if (f) {\n                this.emit('removeFactory', f);\n                delete factories[name];\n                f.destroy();\n            }\n            return this;\n        },\n\n        factory: function (name) {\n            return this._factories[name];\n        },\n\n        addProcessor: function (p, name) {\n            if (!p) return this;\n            if (!name)\n                name = p.name || p.className;\n\n            if (this._processors[name]) {\n                this.emit('warn', 'add processor already exists for ' + name + ', replaced.');\n            }\n\n            this._processors[name] = p;\n            if (p.entityManager != this)\n                p.entityManager = this;\n            this.emit('addProcessor', p);\n\n            return this;\n        },\n\n        removeProcessor: function (name) {\n            var processors = this._processors;\n            var p = processors[name];\n\n            if (p) {\n                this.emit('removeProcessor', p);\n                delete processors[name];\n                p.destroy();\n            }\n\n            return this;\n        },\n\n        processor: function (name) {\n            return this._processors[name];\n        },\n\n        //__createEntityFromPool: function (type, opts, parent) {\n        //    if (!this._entityTypes[type].poolable) return null;\n        //    if (parent) return null;\n        //    if (opts && opts.parent) return null;\n        //    if (this._pools[type]) {\n        //        var e = this._pools[type].shift();\n        //        if (e) {\n        //            e.emit('reuse', opts);\n        //            this.addEntity(e);\n        //            return e;\n        //        }\n        //    }\n        //    return null;\n        //},\n\n        createEntity: function (type, opts, parent) {\n            var e = null;\n\n            var _opts = opts;\n            opts = {};\n            opts = _.cloneDeep(this._entityTypes[type]); //克隆\n            if (_opts) {\n                opts = _.merge(opts, _.cloneDeep(_opts)); //合并\n            }\n\n            var name = opts.factory || 'factory';\n            var f = this._factories[name];\n            if (!f) return null;\n            if (parent) opts.parent = parent;\n            e = f.create(opts);\n            if (!e) {\n                return null;\n            }\n\n            e.type = type;\n            e.addTag(type);\n            e.addTags(opts.tags);\n            this.addEntity(e);\n\n            this.createEntityChildren(e, opts);\n\n            return e;\n        },\n\n        createEntityChildren: function (e, opts) {\n            //create Children\n            for (var i in opts.children) {\n                var info = opts.children[i];\n                if (!info) continue;\n                var o = null;\n                var className = info.className || 'jm.Entity';\n                if (className == 'jm.Entity') {\n                    var type = info.type;\n                    o = this.createEntity(type, info, e);\n                }\n                if (!e.children) {\n                    e.children = [];\n                }\n                e.children.push(o);\n            }\n        },\n\n        addEntity: function (e, tag) {\n            if (!e || !e.entityId) {\n                return this;\n            }\n\n            if (tag) {\n                e.addTag(tag);\n            }\n\n            this._entities[e.entityId] = e;\n            if (e.name) {\n                this._entitiesByName[e.name] = e;\n            }\n\n            e.emit('add', this);\n            this.emit('addEntity', e);\n\n            return this;\n        },\n        //\n        //__removeEntityToPool: function (e) {\n        //    var type = e.type;\n        //    if (!this._entityTypes[type].poolable) return false;\n        //    if (e.parent) return false;\n        //    //濡傛灉鍙睜鍖? 瀛樺埌姹犻噷\n        //    if (!this._pools[type]) this._pools[type] = [];\n        //    var pool = this._pools[type];\n        //    e.emit('unuse');\n        //    pool.push(e);\n        //    return true;\n        //},\n        //\n        //clearPool: function (type) {\n        //    var pool = this._pools[type];\n        //    if (!pool) return;\n        //    this._pools[type] = [];\n        //    pool.forEach(function (e) {\n        //        e.destroy();\n        //    });\n        //},\n        //\n        //clearPools: function () {\n        //    for (var type in this._pools) {\n        //        this.clearPool(type);\n        //    }\n        //},\n\n        removeEntity: function (entityId) {\n            var e;\n            if (_.isObject(entityId)) {\n                e = entityId;\n            } else {\n                e = this._entities[entityId];\n            }\n            if (!e) {\n                return this;\n            }\n\n            this.removeEntityChildren(e);\n\n            e.emit('remove', this);\n            this.emit('removeEntity', e);\n            delete this._entities[e.entityId];\n\n            if (e.name) {\n                delete this._entitiesByName[e.name];\n            }\n\n            //if (this.__removeEntityToPool(e)) {\n            //    return this;\n            //} else {\n            //    e.destroy();\n            //}\n            e.destroy();\n            return this;\n        },\n\n        removeEntityChildren: function (e) {\n            var v = e.children;\n            for (var i in v) {\n                var _e = v[i];\n                this.removeEntity(_e.entityId);\n            }\n        },\n\n        getEntityById: function (eid) {\n            return this._entities[eid];\n        },\n//    getEntities('render')\n//    getEntities('render move tag1')  and\n//    getEntities('render, move, tag1')   or\n        getEntities: function (selector) {\n            var entities = this._entities;\n            if (!selector) return entities;\n            var v = {};\n            //select entities by tags\n            if (typeof selector === 'string') {\n                var and = false, //flags for multiple\n                    or = false;\n\n                var rlist = /\\s*,\\s*/;\n                var rspace = /\\s+/;\n                var del;\n                //multiple components OR\n                if (selector.indexOf(',') !== -1) {\n                    or = true;\n                    del = rlist;\n                } else if (selector.indexOf(' ') !== -1) {\n                    and = true;\n                    del = rspace;\n                }\n                if (!and && !or) {\n                    return this._entitiesByTag[selector];\n                }\n                var tags = selector.split(del);\n                var e;\n                for (var entityId in entities) {\n                    e = entities[entityId];\n                    if (and) {\n                        if (!e.hasTagAll(tags)) continue;\n                    } else if (or) {\n                        if (!e.hasTagAny(tags)) continue;\n                    }\n                    v[entityId] = e;\n                }\n            }\n\n            return v;\n        },\n\n        getEntity: function (selector) {\n            var v = this.getEntities(selector);\n            for (var i in v) {\n                return v[i];\n            }\n            return null;\n        },\n\n        update: function (delta) {\n            this.emit('update', delta);\n            var processors = this._processors;\n            for (var name in processors) {\n                var p = processors[name];\n                p.process(delta);\n            }\n        }\n\n    });\n\n    jm.entityManager = function (opts) {\n        return new jm.EntityManager(opts);\n    }\n})();\n(function () {\r\n    if (jm.sprintf)return;\r\n    var sprintfWrapper = {\r\n        init: function () {\r\n            if (typeof arguments == 'undefined') {\r\n                return null;\r\n            }\r\n            if (arguments.length < 1) {\r\n                return null;\r\n            }\r\n            if (typeof arguments[0] != 'string') {\r\n                return null;\r\n            }\r\n            if (typeof RegExp == 'undefined') {\r\n                return null;\r\n            }\r\n            var string = arguments[0];\r\n            var exp = new RegExp(/(%([%]|(\\-)?(\\+|\\x20)?(0)?(\\d+)?(\\.(\\d)?)?([bcdfosxX])))/g);\r\n            var matches = new Array();\r\n            var strings = new Array();\r\n            var convCount = 0;\r\n            var stringPosStart = 0;\r\n            var stringPosEnd = 0;\r\n            var matchPosEnd = 0;\r\n            var newString = '';\r\n            var match;\r\n            while (match = exp.exec(string)) {\r\n                if (match[9]) {\r\n                    convCount += 1;\r\n                }\r\n                stringPosStart = matchPosEnd;\r\n                stringPosEnd = exp.lastIndex - match[0].length;\r\n                strings[strings.length] = string.substring(stringPosStart, stringPosEnd);\r\n                matchPosEnd = exp.lastIndex;\r\n                matches[matches.length] = {\r\n                    match: match[0],\r\n                    left: match[3] ? true : false,\r\n                    sign: match[4] || '',\r\n                    pad: match[5] || ' ',\r\n                    min: match[6] || 0,\r\n                    precision: match[8],\r\n                    code: match[9] || '%',\r\n                    negative: parseInt(arguments[convCount]) < 0 ? true : false,\r\n                    argument: String(arguments[convCount])\r\n                };\r\n            }\r\n            strings[strings.length] = string.substring(matchPosEnd);\r\n            if (matches.length == 0) {\r\n                return string;\r\n            }\r\n            if ((arguments.length - 1) < convCount) {\r\n                return null;\r\n            }\r\n            for (var i = 0; i < matches.length; i++) {\r\n                var substitution;\r\n                if (matches[i].code == '%') {\r\n                    substitution = '%'\r\n                }\r\n                else if (matches[i].code == 'b') {\r\n                    matches[i].argument = String(Math.abs(parseInt(matches[i].argument)).toString(2));\r\n                    substitution = sprintfWrapper.convert(matches[i], true);\r\n                }\r\n                else if (matches[i].code == 'c') {\r\n                    matches[i].argument = String(String.fromCharCode(parseInt(Math.abs(parseInt(matches[i].argument)))));\r\n                    substitution = sprintfWrapper.convert(matches[i], true);\r\n                }\r\n                else if (matches[i].code == 'd') {\r\n                    matches[i].argument = String(Math.abs(parseInt(matches[i].argument)));\r\n                    substitution = sprintfWrapper.convert(matches[i]);\r\n                }\r\n                else if (matches[i].code == 'f') {\r\n                    matches[i].argument = String(Math.abs(parseFloat(matches[i].argument)).toFixed(matches[i].precision ? matches[i].precision : 6));\r\n                    substitution = sprintfWrapper.convert(matches[i]);\r\n                }\r\n                else if (matches[i].code == 'o') {\r\n                    matches[i].argument = String(Math.abs(parseInt(matches[i].argument)).toString(8));\r\n                    substitution = sprintfWrapper.convert(matches[i]);\r\n                }\r\n                else if (matches[i].code == 's') {\r\n                    matches[i].argument = matches[i].argument.substring(0, matches[i].precision ? matches[i].precision : matches[i].argument.length)\r\n                    substitution = sprintfWrapper.convert(matches[i], true);\r\n                }\r\n                else if (matches[i].code == 'x') {\r\n                    matches[i].argument = String(Math.abs(parseInt(matches[i].argument)).toString(16));\r\n                    substitution = sprintfWrapper.convert(matches[i]);\r\n                }\r\n                else if (matches[i].code == 'X') {\r\n                    matches[i].argument = String(Math.abs(parseInt(matches[i].argument)).toString(16));\r\n                    substitution = sprintfWrapper.convert(matches[i]).toUpperCase();\r\n                }\r\n                else {\r\n                    substitution = matches[i].match;\r\n                }\r\n                newString += strings[i];\r\n                newString += substitution;\r\n            }\r\n            newString += strings[i];\r\n            return newString;\r\n        },\r\n        convert: function (match, nosign) {\r\n            if (nosign) {\r\n                match.sign = '';\r\n            } else {\r\n                match.sign = match.negative ? '-' : match.sign;\r\n            }\r\n            var l = match.min - match.argument.length + 1 - match.sign.length;\r\n            var pad = new Array(l < 0 ? 0 : l).join(match.pad);\r\n            if (!match.left) {\r\n                if (match.pad == '0' || nosign) {\r\n                    return match.sign + pad + match.argument;\r\n                } else {\r\n                    return pad + match.sign + match.argument;\r\n                }\r\n            } else {\r\n                if (match.pad == '0' || nosign) {\r\n                    return match.sign + match.argument + pad.replace(/0/g, ' ');\r\n                } else {\r\n                    return match.sign + match.argument + pad;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    jm.sprintf = sprintfWrapper.init;\r\n\r\n})();\r\n\r\n\r\n\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    // LIFE-CYCLE CALLBACKS:\r\n    // onLoad () {},\r\n    onEnable() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\r\n    },\r\n    onDisable() {\r\n        this.node.off(cc.Node.EventType.TOUCH_START, this._onTouchStart, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\r\n    },\r\n    _onTouchStart(e) {\r\n        this._isTouch = true;\r\n        var pos = e.getLocation();\r\n        var jPos = this.node.convertToNodeSpaceAR(pos);\r\n        if (jPos.x > 0) {\r\n            this.key_down(game.gameControl.right)\r\n        }\r\n        else {\r\n            this.key_down(game.gameControl.left)\r\n        }\r\n        //cc.log(\"_onTouchStart\", pos.x, jPos.x);\r\n    },\r\n    _onTouchMove(e) {\r\n        //cc.log(\"_onTouchMove\", this._isTouch);\r\n        if (!this._isTouch)\r\n            return;\r\n        var pos = e.getLocation();\r\n        var jPos = this.node.convertToNodeSpaceAR(pos);\r\n        if (jPos.x > 0) {\r\n            this.key_down(game.gameControl.right)\r\n        }\r\n        else {\r\n            this.key_down(game.gameControl.left)\r\n        }\r\n    },\r\n    _onTouchEnd(e) {\r\n        this._isTouch = false;\r\n        var pos = e.getLocation();\r\n        var jPos = this.node.convertToNodeSpaceAR(pos);\r\n        if (jPos.x > 0) {\r\n            this.key_up(game.gameControl.right)\r\n        }\r\n        else {\r\n            this.key_up(game.gameControl.left)\r\n        }\r\n    },\r\n    key_down(control) {\r\n        if (this.control == control) return;\r\n        if (this.control) {\r\n            this.key_up(this.control);\r\n        }\r\n        this.control = control;\r\n        game.emit(\"key_down\", control);\r\n    },\r\n    key_up(control) {\r\n        this.control = 0;\r\n        game.emit(\"key_up\", control);\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        controlNode: {\r\n            default: null,\r\n            type: cc.Node,\r\n            tooltip: \"可操作摇杆的节点（决定操作范围）\"\r\n        },\r\n        stick: {\r\n            default: null,\r\n            type: cc.Node,\r\n            tooltip: \"摇杆\"\r\n        },\r\n        maxRadius: {\r\n            default: 200,\r\n            type: cc.Float,\r\n            tooltip: \"摇杆最大移动半径\"\r\n        },\r\n        isTouch: {\r\n            get() {\r\n                return this._isTouch;\r\n            },\r\n            type: cc.Boolean,\r\n            tooltip: \"摇杆是否按下\"\r\n        },\r\n        dir: {\r\n            get() {\r\n                return this._dir;\r\n            },\r\n            type: cc.Vec2,\r\n            tooltip: \"摇杆向量\"\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    // onLoad () {},\r\n    onEnable() {\r\n        this._onTouchEnd();\r\n        this.controlNode.on(cc.Node.EventType.TOUCH_START, this._onTouchStart, this);\r\n        this.controlNode.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\r\n        this.controlNode.on(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\r\n        this.controlNode.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\r\n    },\r\n    onDisable() {\r\n        this._onTouchEnd();\r\n        this.controlNode.off(cc.Node.EventType.TOUCH_START, this._onTouchStart, this);\r\n        this.controlNode.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\r\n        this.controlNode.off(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\r\n        this.controlNode.off(cc.Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\r\n    },\r\n    _onTouchStart(e) {\r\n        this._isTouch = true;\r\n        this._setStickPosition(e);\r\n    },\r\n    _onTouchMove(e) {\r\n        if (!this._isTouch)\r\n            return;\r\n        this._setStickPosition(e);\r\n    },\r\n    _setStickPosition(e) {\r\n        var pos = e.getLocation();\r\n        var jPos = this.node.convertToNodeSpaceAR(pos);\r\n        var len = jPos.mag();\r\n        // 设置摇杆的位置\r\n        if (len > this.maxRadius) {\r\n            jPos.x = this.maxRadius * jPos.x / len;\r\n            jPos.y = this.maxRadius * jPos.y / len;\r\n            len = this.maxRadius;\r\n        }\r\n        this._dir.x = jPos.x / this.maxRadius;\r\n        this._dir.y = jPos.y / this.maxRadius;\r\n        this.stick.setPosition(jPos);\r\n        if(len<50)return;\r\n\r\n\r\n\r\n\r\n    },\r\n    _onTouchEnd(e) {\r\n        this._isTouch = false;\r\n        // 初始化摇杆节点位置及角度\r\n        this.stick.setPosition(cc.v2(0, 0));\r\n        this._dir = cc.v2(0, 0);\r\n    },\r\n    start() {\r\n    }\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    onEnable() {\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n    onDisable() {\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n    onKeyDown(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n            case cc.macro.KEY.left:\r\n                game.emit(\"key_down\", game.gameControl.left);\r\n                break;\r\n            case cc.macro.KEY.d:\r\n            case cc.macro.KEY.right:\r\n                game.emit(\"key_down\", game.gameControl.right);\r\n                break;\r\n            case cc.macro.KEY.up:\r\n            case cc.macro.KEY.w:\r\n                game.emit(\"key_down\", game.gameControl.up);\r\n                break;\r\n            case cc.macro.KEY.down:\r\n            case cc.macro.KEY.s:\r\n                game.emit(\"key_down\", game.gameControl.down);\r\n                break;\r\n            case cc.macro.KEY.e:\r\n                game.emit(\"key_down\", game.gameControl.weapons);\r\n                break;\r\n        }\r\n    },\r\n    onKeyUp(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n            case cc.macro.KEY.left:\r\n                game.emit(\"key_up\", game.gameControl.left);\r\n                break;\r\n            case cc.macro.KEY.d:\r\n            case cc.macro.KEY.right:\r\n                game.emit(\"key_up\", game.gameControl.right);\r\n                break;\r\n            case cc.macro.KEY.up:\r\n            case cc.macro.KEY.w:\r\n                game.emit(\"key_up\", game.gameControl.up);\r\n                break;\r\n            case cc.macro.KEY.down:\r\n            case cc.macro.KEY.s:\r\n                game.emit(\"key_up\", game.gameControl.down);\r\n                break;\r\n            case cc.macro.KEY.e:\r\n                game.emit(\"key_up\", game.gameControl.weapons);\r\n                break;\r\n        }\r\n    },\r\n    start() {\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        progressNode: cc.Node, //进度条节点\r\n        resLabel: cc.Label,\r\n        barLabel: cc.Label\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        cc.game.addPersistRootNode(this.node); //添加常驻节点\r\n        this.node.zIndex = 10;\r\n        game.curScene = this.curScene = \"login\";\r\n        game.on(game.gameEvent.load_scene, this.loadScene, this); //场景切换场景\r\n        cc.loader.onProgress = this.onProgress.bind(this);\r\n        this.completedCount = 0;\r\n        this.totalCount = 1;\r\n        this.node.active = false;\r\n        this.uuids = require(\"uuids\");\r\n    },\r\n    //开始切换场景\r\n    loadScene(scene) {\r\n        if (game.curScene == scene) return;\r\n        this.node.active = true;\r\n        game.curScene = this.curScene = scene;\r\n        if (this.progressNode)\r\n            this.progressNode.width = 0;\r\n        cc.log(\"切换场景\");\r\n        this.lastId = 0;\r\n        cc.director.loadScene(scene, this.onCompleteScene.bind(this)); //场景加载完成\r\n        //cc.director.on(cc.Director.EVENT_AFTER_SCENE_LAUNCH, this.onCompleteScene.bind(this));\r\n        //this.isLoadingScene = true;\r\n    },\r\n    //加载完成\r\n    onCompleteScene: function () {\r\n        this.node.active = false;\r\n    },\r\n    //加载场景进度\r\n    onProgress(completedCount, totalCount, item) {\r\n        var id = item.id.substring(item.id.lastIndexOf('/') + 1, item.id.lastIndexOf(\".\"))\r\n        var url = this.uuids[id];\r\n        if (!url) {\r\n            return;\r\n        }\r\n        if (totalCount > 1) {\r\n            this.totalCount = totalCount;\r\n        }\r\n        this.completedCount = completedCount;\r\n        if (this.completedCount > this.totalCount) {\r\n            this.completedCount = this.totalCount;\r\n        }\r\n        var progress = (this.completedCount / this.totalCount).format(2);\r\n        if (this.progressNode)\r\n            this.progressNode.width = 1030 * progress;\r\n        if (this.barLabel)\r\n            this.barLabel.string = parseInt(progress * 100) + \"%\";\r\n        // if (this.resLabel)\r\n        //     this.resLabel.string = item.id || \"\";\r\n    }\r\n});\r\n","module.exports = {\r\n    _localStorage: {},\r\n    clear: function () {\r\n        this._localStorage = {};\r\n        cc.sys.localStorage.clear();\r\n    },\r\n    removeItem: function (key) {\r\n        cc.sys.localStorage.removeItem(key);\r\n        delete this._localStorage[key];\r\n    },\r\n    setItem: function (key, value) {\r\n        this._localStorage[key] = value;\r\n        try {\r\n            value = JSON.stringify(value);\r\n        } catch (e) {\r\n            value = value;\r\n        }\r\n        cc.sys.localStorage.setItem(key, value);\r\n    },\r\n    getItem: function (key) {\r\n        if (this._localStorage[key]) {\r\n            return this._localStorage[key];\r\n            let value = cc.sys.localStorage.getItem(key);\r\n            if (value) {\r\n                try {\r\n                    value = JSON.parse(value);\r\n                } catch (e) {\r\n                    value = value;\r\n                }\r\n                this._localStorage[key] = value;\r\n                return value;\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n}","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        window.jm = require(\"jm\");\r\n        window.game = jm.eventEmitter();\r\n        window._ = require(\"lodash\");\r\n        window.async = require(\"async\");\r\n        require(\"utils\");\r\n        //game.gameConfig = require(\"gameConfig\"); //公共函数\r\n        game.gameSound = require(\"gameSound\"); //公共函数\r\n        game.gamePopup = require(\"gamePopup\"); //公共函数\r\n        game.zhujueConfig = require(\"zhujueConfig\"); //公共函数\\\r\n        game.gameAction = require(\"gameAction\"); //公共函数\r\n        game.gameControl = require(\"gameControl\"); //公共函数\r\n        game.gameEvent = require(\"gameEvent\"); //公共函数\r\n        game.gameScene = require(\"gameScene\"); //公共函数\r\n        game.gameUtils = require(\"gameUtils\"); //公共函数\r\n        game.localStorage = require(\"localStorage\"); //公共函数\r\n        game.soundManager = require(\"soundManager\"); //公共函数\r\n        game.point1=cc.v2(0,0);\r\n        game.point2=cc.v2(-100,0);\r\n        game.soundManager.init();\r\n        cc.tween(this.node).then(cc.delayTime(0.1)).call(function () {\r\n            game.emit(game.gameEvent.load_scene, game.gameScene.hall);\r\n        }).start();\r\n    },\r\n    start() {\r\n    },\r\n    // update (dt) {},i\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    // onLoad () {},\r\n    start() {\r\n    },\r\n    oBack(event, value) {\r\n\r\n        \r\n        game.emit(game.gameEvent.load_scene, game.gameScene.hall);\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        floor: cc.Node\r\n    },\r\n    onLoad() {\r\n        if (!this.floor) return;\r\n\r\n        cc.game.on(cc.game.EVENT_ENGINE_INITED, () => {\r\n            let physicsManager = cc.director.getPhysicsManager();\r\n            physicsManager.enabled = true;\r\n            cc.director.getCollisionManager().enabled = true;\r\n        });\r\n        let polygonCollider = this.floor.getComponent(cc.PolygonCollider);\r\n        let points = polygonCollider.points;\r\n        let physicsPolygonCollider = this.floor.getComponent(cc.PhysicsPolygonCollider);\r\n        physicsPolygonCollider.points = points;\r\n\r\n        let mapPoint = [];\r\n        game.mapRotation = [];\r\n        game.mapXList = [];\r\n        for (let i in points) {\r\n            let p = points[i];\r\n            if (p.y > 30) {\r\n                mapPoint.push(cc.v2(p.x, p.y));\r\n                game.mapXList.push(p.x);\r\n            }\r\n\r\n        }\r\n        game.mapXList.sort(function (v1, v2) {\r\n            return v1 - v2;\r\n        })\r\n        mapPoint.sort(function (v1, v2) {\r\n            return v1.x - v2.x;\r\n        })\r\n        let startPoint = mapPoint[0]\r\n        for (let i = 1; i < mapPoint.length; i++) {\r\n            var endPoint = mapPoint[i];\r\n            game.mapRotation.push(game.gameUtils.getRotation(startPoint, endPoint))\r\n            startPoint = endPoint;\r\n        }\r\n\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        target: cc.Node,\r\n        speedX: 10,\r\n        speedY: 10\r\n    },\r\n    onLoad() {\r\n        this.targetRect = cc.rect(0, 0, 100, 100);\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    update(dt) {\r\n        this.node.x--;\r\n        //cc.log(this.node.width, this.node.height)\r\n    },\r\n});\r\n","const NodePool = require('NodePool');\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        bulletPool: {\r\n            default: [],\r\n            type: NodePool\r\n        },\r\n        firePool: {\r\n            default: [],\r\n            type: NodePool\r\n        },\r\n        bombPool: {\r\n            default: [],\r\n            type: NodePool\r\n        },\r\n        bingPool: {\r\n            default: [],\r\n            type: NodePool\r\n        },\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        game.bulletPool = {};\r\n        for (var i in this.bulletPool) {\r\n            var pool = this.bulletPool[i];\r\n            if (pool) {\r\n                game.bulletPool[pool.prefab.name] = pool;\r\n            }\r\n        }\r\n        game.firePool = {};\r\n        for (var i in this.firePool) {\r\n            var pool = this.firePool[i];\r\n            if (pool) {\r\n                game.firePool[pool.prefab.name] = pool;\r\n            }\r\n        }\r\n        game.bombPool = {};\r\n        for (var i in this.bombPool) {\r\n            var pool = this.bombPool[i];\r\n            if (pool) {\r\n                game.bombPool[pool.prefab.name] = pool;\r\n            }\r\n        }\r\n        game.bingPool = {};\r\n        for (var i in this.bingPool) {\r\n            var pool = this.bingPool[i];\r\n            if (pool) {\r\n                game.bingPool[pool.prefab.name] = pool;\r\n            }\r\n        }\r\n    },\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    //常驻节点 UI 层\r\n    // 资源加载层\r\n    properties: {},\r\n    onLoad() {\r\n\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        bullet_atlas: cc.SpriteAtlas,//子弹的序列图\r\n        bomb_atlas: cc.SpriteAtlas,  //爆炸材质\r\n        map_atlas:cc.SpriteAtlas,\r\n\r\n\r\n        ui_atlas:cc.SpriteAtlas,\r\n        materias: { //引用到的材质球\r\n            default: [], type: cc.Material\r\n         },\r\n        // bingList: {default: [], type: cc.Prefab},\r\n        // bulletList: {default: [], type: cc.Prefab},\r\n        // effList: {default: [], type: cc.Prefab},\r\n        // bombList: {default: [], type: cc.Prefab}\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        game.bullet_atlas = this.bullet_atlas;//保存到全局\r\n        game.bomb_atlas = this.bomb_atlas;//保存到全局\r\n        game.map_atlas = this.map_atlas;//保存到全局\r\n        game.ui_atlas=this.ui_atlas;\r\n        game.materias = {};\r\n        for (var i in this.materias) {\r\n            var materia = this.materias[i];\r\n            if (materia) {\r\n                game.materias[materia.name] = materia;\r\n            }\r\n        }\r\n        // game.bingList = {};\r\n        // game.bingPool = new cc.NodePool();\r\n        // for (var i in this.bingList) {\r\n        //     var prefab = this.bingList[i];\r\n        //     if (prefab) {\r\n        //         game.bingList[prefab.name] = prefab;\r\n        //     }\r\n        // }\r\n        // game.bulletList = {};\r\n        // game.bulletPool = {};\r\n        // for (var i in this.bulletList) {\r\n        //     var prefab = this.bulletList[i];\r\n        //     if (prefab) {\r\n        //         game.bulletList[prefab.name] = prefab;\r\n        //     }\r\n        // }\r\n        // game.effList = {};\r\n        // game.effPool = new cc.NodePool();\r\n        // for (var i in this.effList) {\r\n        //     var prefab = this.effList[i];\r\n        //     if (prefab) {\r\n        //         game.effList[prefab.name] = prefab;\r\n        //     }\r\n        // }\r\n        // game.bombList = {};\r\n        // game.bombPool = new cc.NodePool();\r\n        // for (var i in this.bombList) {\r\n        //     var prefab = this.bombList[i];\r\n        //     if (prefab) {\r\n        //         game.bombList[prefab.name] = prefab;\r\n        //     }\r\n        // }\r\n    },\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        resLoader: cc.Node,//资源加载菊花圈\r\n        bg: cc.Node,\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        //this.prefabs = game.gamePopup;\r\n        this.popopNodes = {};\r\n        this.loadingList = [];\r\n        this.childList = []; //添加的子节点列表\r\n        game.on(game.gameEvent.popup_prefab, this.popup_prefab, this);\r\n        game.on(game.gameEvent.closed_prefab, this.closed_prefab, this);\r\n        this.autoRes();\r\n    },\r\n    closed_prefab(node) {\r\n        var self = this;\r\n        let poolComponents = node.getComponentsInChildren(\"PoolComponent\");\r\n        for (let i in poolComponents) {\r\n            let poolComponent = poolComponents[i];\r\n            poolComponent.unuse(); //启用\r\n        }\r\n        // this.showNodes(node, false, function () {\r\n        //     this.parent = null;\r\n        //     var idx = self.childList.indexOf(this);\r\n        //     if (idx >= 0) {\r\n        //         self.childList.splice(idx, 1);\r\n        //     }\r\n        //     self.autoRes();\r\n        // }.bind(node));\r\n        node.parent = null;\r\n        let idx = self.childList.indexOf(node);\r\n        if (idx >= 0) {\r\n            self.childList.splice(idx, 1);\r\n        }\r\n        self.autoRes();\r\n    },\r\n    showNodes(node, isPopup, cb) {\r\n        if (node == null) {\r\n            return\r\n        }\r\n        if (isPopup == true) {\r\n            node.opacity = 0;\r\n            node.setScale(0.1);\r\n            let fadeIn = cc.fadeIn(0.2);\r\n            let scaleTo = cc.scaleTo(0.2, 1);\r\n            cc.tween(node).then(fadeIn).then(scaleTo).call(function () {\r\n                if (cb) cb();\r\n            }.bind(node)).start();\r\n        }\r\n        else {\r\n            node.opacity = 1;\r\n            node.setScale(1);\r\n            let fadeOut = cc.fadeOut(0.2);\r\n            let scaleTo = cc.scaleTo(0.2, 0.1);\r\n            cc.tween(node).then(fadeOut).then(scaleTo).call(function () {\r\n                if (cb) cb();\r\n            }.bind(node)).start();\r\n        }\r\n    },\r\n    popup_prefab(data, msg) {\r\n        // let date = this.prefabs[name];\r\n        // if (!date) {\r\n        //     console.log(\"\\\" %s \\\"弹窗模块未注册\", name);\r\n        //     alert(\"\\\" %s \\\"弹窗模块未注册\", name);\r\n        //     return;\r\n        // }\r\n        this.loadPrefab(data.url, function (err, node) {\r\n            if (!err) {\r\n                var idx = this.childList.indexOf(node);\r\n                if (idx >= 0) {\r\n                    this.childList.splice(idx, 1);\r\n                }\r\n                this.childList.push(node);\r\n                if (!node.parent) {\r\n                    this.node.addChild(node);\r\n                }\r\n                else {\r\n                    node.parent = this.node;\r\n                }\r\n                node.x = node.y = 0;\r\n                cc.log(node.x, node.y);\r\n                let poolComponents = node.getComponentsInChildren(\"PoolComponent\");\r\n                for (let i in poolComponents) {\r\n                    let poolComponent = poolComponents[i];\r\n                    poolComponent.reuse(msg); //启用\r\n                    poolComponent.onComplete(); //启用\r\n                }\r\n                // var self = this;\r\n                // this.showNodes(node, true, function () {\r\n                //     let poolComponents = this.getComponentsInChildren(\"PoolComponent\");\r\n                //     for (let i in poolComponents) {\r\n                //         let poolComponent = poolComponents[i];\r\n                //         poolComponent.onComplete(); //启用\r\n                //     }\r\n                //     self.autoRes();\r\n                // }.bind(node));\r\n            }\r\n            this.autoRes();\r\n        }.bind(this));\r\n        this.autoRes();\r\n    },\r\n    /*******\r\n     * 加载预制体\r\n     * *****/\r\n    loadPrefab: function (url, cb) {\r\n        if (this.popopNodes[url]) {\r\n            cb(null, this.popopNodes[url]);\r\n            return;\r\n        }\r\n        let opts = {\r\n            url: url,\r\n            cb: cb\r\n        };\r\n        let self = this;\r\n        if (this.loadingList.indexOf(url) >= 0) {\r\n            this.node.once(url, function (err, node) {\r\n                this.cb(err, node);\r\n            }.bind(opts));\r\n            return;\r\n        }\r\n        if (this.loadingList.indexOf(url) < 0) {\r\n            this.loadingList.push(url);\r\n        }\r\n        cc.loader.loadRes(url, cc.Prefab, function (err, prefab) {\r\n            let node\r\n            if (!err) {\r\n                node = cc.instantiate(prefab);\r\n                self.popopNodes[this.url] = node;\r\n            }\r\n            let idx = self.loadingList.indexOf(this.url);\r\n            if (idx >= 0) {\r\n                self.loadingList.splice(idx, 1);\r\n            }\r\n            this.cb(err, node);\r\n            self.node.emit(this.url, err, node);\r\n        }.bind(opts));\r\n    },\r\n    autoRes() {\r\n        for (var i = 0; i < this.childList.length; i++) {\r\n            var node = this.childList[i];\r\n            if (i == (this.childList.length - 1)) {\r\n                this.bg.zIndex = i;\r\n                node.zIndex = i + 1;\r\n            }\r\n            else {\r\n                node.zIndex = i;\r\n            }\r\n        }\r\n        let count = this.node.childrenCount;\r\n        var len = this.loadingList.length;\r\n        if (len > 0 || count > 1) {\r\n            this.node.active = true;\r\n        }\r\n        else {\r\n            this.node.active = false;\r\n        }\r\n        if (len > 0) {\r\n            this.resLoader.active = true;\r\n        }\r\n        else {\r\n            this.resLoader.active = false;\r\n        }\r\n    },\r\n    onClick(e) {\r\n    }\r\n})\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onLoad: function () {\r\n        game.on(\"key_down\", this.onKeyDown, this);\r\n        game.on(\"key_up\", this.onKeyUp, this);\r\n    },\r\n    onDestroy() {\r\n        game.off(\"key_down\", this.onKeyDown, this);\r\n        game.off(\"key_up\", this.onKeyUp, this);\r\n    },\r\n    onKeyDown(data) {\r\n        this.node.emit(\"key_down\", data);\r\n    },\r\n    onKeyUp(data) {\r\n        this.node.emit(\"key_up\", data);\r\n    },\r\n    start() {\r\n    },\r\n\r\n\r\n});\r\n","var track = cc.Enum({\r\n    idle: 1,\r\n    run: 2,\r\n    attack1: 3,\r\n    attack2: 4,\r\n    jump: 5\r\n});\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        sp: sp.Skeleton\r\n    },\r\n    onLoad() {\r\n        this.data = this.sp._skeleton.data; // SkeletonData 骨架数据、\r\n        var opts = {}\r\n        for (var i in this.data.animations) {\r\n            var animation = this.data.animations[i];\r\n            cc.log(animation);\r\n            cc.log(animation.duration * 30);\r\n            opts[animation.name] = animation.duration;\r\n        }\r\n        this.trackIndex = track.idle;\r\n        //this.sp.timeScale = 0.5;\r\n        var ra1 = this.animations.run.duration > this.animations.attack1.duration ? this.animations.attack1.duration : this.animations.run.duration;\r\n        var ra2 = this.animations.run.duration > this.animations.attack2.duration ? this.animations.attack2.duration : this.animations.run.duration;\r\n        this.setMix('run', 'attack2', ra1 - 0.1);\r\n        this.setMix('run', 'attack1', ra2 - 0.1);\r\n        this.sp.setAnimation(track.run, \"run\", true);\r\n    },\r\n    //setMix 为所有关键帧设定混合及混合时间（从当前值开始差值）。\r\n    setMix(anim1, anim2, mixTime) {\r\n        this.sp.setMix(anim1, anim2, mixTime);\r\n        this.sp.setMix(anim2, anim1, mixTime);\r\n    },\r\n    /********\r\n     * 移动\r\n     * **/\r\n    onMove() {\r\n        this.sp.clearTrack(this.trackIndex);\r\n        this.trackIndex = track.run;\r\n        this.sp.addAnimation(track.run, \"run\", true, 0.1);\r\n    },\r\n    /********\r\n     * 瞄准\r\n     * ***/\r\n    onAim() {\r\n    },\r\n    /********\r\n     * 攻击\r\n     * ***/\r\n    onAttack1() {\r\n        cc.log(\"攻击1\");\r\n        // this.sp.clearTrack(this.trackIndex);\r\n        // this.trackIndex = track.attack1;\r\n        this.sp.addAnimation(track.attack1, \"attack1\", false, 0);\r\n    },\r\n    onAttack2() {\r\n        cc.log(\"攻击2\");\r\n        // this.sp.timeScale = 1;\r\n        // this.sp.clearTrack(this.trackIndex);\r\n        // this.trackIndex = track.attack2;\r\n        this.sp.addAnimation(track.attack2, \"attack2\", false, 0);\r\n    },\r\n    onjump() {\r\n        cc.log(\"跳跃\");\r\n        this.sp.clearTrack(this.trackIndex);\r\n        this.trackIndex = track.jump;\r\n        this.sp.addAnimation(track.jump, \"jump\", false, 0.2);\r\n    },\r\n    /***\r\n     * 更换皮肤\r\n     *\r\n     * ****/\r\n    switchSkin() {\r\n    },\r\n    /*****\r\n     *\r\n     * ******/\r\n    onClick(event) {\r\n    },\r\n});\r\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        hero: cc.Node\r\n    },\r\n    unuse: function () {\r\n        game.off(\"aim\", this.aim, this);\r\n    },\r\n    reuse: function (data) {\r\n        this.targets = [];\r\n        //game.off(\"aim\", this.aim, this);\r\n    },\r\n    onLoad() {\r\n        this.targets = [];\r\n        game.on(\"aim\", this.aim, this);\r\n    },\r\n    aim(flg) {\r\n        this.aimFlg = flg;\r\n    },\r\n    //碰撞进入\r\n    onCollisionEnter: function (other, self) {\r\n        if (game.isOver) return;\r\n        if (this.node.isDeath) return;\r\n        let node = other.node;\r\n        if (this.targets.indexOf(node) < 0) {\r\n            this.targets.push(node);\r\n        }\r\n        this.aimPos();\r\n    },\r\n    aimPos() {\r\n        if (!this.hero || !this.aimFlg || !this.targets || this.targets.length == 0) return;\r\n        let pos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        this.targets.sort(function (a, b) {\r\n            let pos1 = a.convertToWorldSpaceAR(cc.v2(0, 0));\r\n            let pos2 = b.convertToWorldSpaceAR(cc.v2(0, 0));\r\n            let len1 = game.gameUtils.getLength(pos1, pos);\r\n            let len2 = game.gameUtils.getLength(pos2, pos);\r\n            return len1 - len2;\r\n        });\r\n        let target = this.targets[0];\r\n        pos = target.convertToWorldSpaceAR(cc.v2(0, 50));\r\n        this.hero.emit(\"aimPos\", pos);\r\n    },\r\n    //碰撞停留\r\n    onCollisionStay: function (other, self) {\r\n        this.aimPos();\r\n    },\r\n    //碰撞退出\r\n    onCollisionExit: function (other, self) {\r\n        if (game.isOver) return;\r\n        if (this.node.isDeath) return;\r\n        let node = other.node;\r\n        let idx = this.targets.indexOf(node);\r\n        if (idx >= 0) {\r\n            this.targets.splice(idx, 1);\r\n        }\r\n        this.aimPos();\r\n    }\r\n});\r\n","let HpComponent = require(\"hpComponent\"); //池子组件\r\ncc.Class({\r\n    extends: HpComponent,\r\n    properties: {\r\n        progressBar: cc.ProgressBar,\r\n        totalHp: 1000\r\n    },\r\n    //受到的伤害\r\n    onHurt(value) {\r\n        this.curHp -= value;\r\n        this.isShow = true;\r\n        this.progressBar.node.opacity = 255;\r\n        this.showTime = 0;\r\n        this.updateBar();\r\n        if (this.curHp <= 0) {\r\n            this.node.emit(\"death\");\r\n            this.parent.emit(\"death\");\r\n        }\r\n    },\r\n    onDestroy() {\r\n    },\r\n    updateBar() {\r\n        var progress = (this.curHp / this.totalHp).format();\r\n        this.progressBar.progress = progress;\r\n        game.emit(\"zhujiaoXue\", this.curHp, this.totalHp);\r\n    },\r\n    //碰撞检测到\r\n    onCollisionEnter: function (other, self) {\r\n        var hurt = other.node.getComponent(\"hurt\");\r\n        if (!hurt || hurt.hurtValue == 0) return;\r\n        this.curHp -= hurt.hurtValue;\r\n        hurt.end();\r\n        this.isShow = true;\r\n        this.progressBar.node.opacity = 255;\r\n        this.showTime = 0;\r\n        this.updateBar();\r\n        if (this.curHp <= 0) {\r\n            this.node.emit(\"death\");\r\n            this.parent.emit(\"death\");\r\n        }\r\n    },\r\n    onCollisionStay: function (other, self) {\r\n    },\r\n    //碰撞退出\r\n    onCollisionExit: function (other, self) {\r\n        // cc.log(\"碰撞退出\")\r\n    },\r\n    onLoad() {\r\n        var weaponData = require(\"zhujueConfig\");\r\n        this.totalHp = weaponData.hp;\r\n        this.curHp = this.totalHp;\r\n        this.parent = this.node.parent;\r\n        this.updateBar();\r\n        this.showTime = 0;\r\n        this.isShow = false;\r\n        this.progressBar.node.opacity = 0;\r\n    },\r\n    start() {\r\n    },\r\n    update(dt) {\r\n        this.showTime += dt;\r\n        if (this.isShow && this.showTime > 2) {\r\n            this.isShow = false;\r\n            this.progressBar.node.opacity = 0;\r\n        }\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n        game.off(\"chubing\", this.chubing, this);\r\n    },\r\n    onLoad() {\r\n        this.zIndex = 0;//\r\n        this.yList = [-10, -5, 0, 5, 10];\r\n        game.on(\"chubing\", this.chubing, this);\r\n    },\r\n    chubing(prefabName, pos, data) {\r\n        let pool = game.bingPool[prefabName];\r\n        if (pool && pool.prefab) {\r\n            this.zIndex++;\r\n            this.zIndex = this.zIndex % this.yList.length;\r\n            data.zy = this.yList[this.zIndex];\r\n            let b = pool.getNode(data, this.node);\r\n            b.x = pos.x;\r\n            b.y = pos.y;\r\n            //this.node.addChild(b);\r\n            b.zIndex = this.zIndex;\r\n        }\r\n    },\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\n    extends: cc.Component,\n    properties: {\n        maxSpeed: 300,//最大速度\n        jumps: 2, //跳跃次数\n        //acceleration: 1500,//加速度\n        jumpSpeed: 500, //跳跃速度\n        drag: 600       //拖拽速度\n    },\n    onLoad: function () {\n        this._moveFlags = 0;\n        this.node.roleState = this.roleState = 0;//角色状态  0=静止 1=移动 2=跳跃\n        this._up = false;\n        this.body = this.getComponent(cc.RigidBody);\n        this.jumping = false;\n        this.node.on(\"key_down\", this.onKeyDown, this);\n        this.node.on(\"key_up\", this.onKeyUp, this);\n        this.node.zIndex = 10;\n        this._lastX = 0;\n    },\n    onDestroy() {\n        this.node.off(\"key_down\", this.onKeyDown, this);\n        this.node.off(\"key_up\", this.onKeyUp, this);\n    },\n    onKeyDown(data) {\n        if (game.isOver) return;\n        switch (data) {\n            case game.gameControl.left:\n                this._moveFlags |= game.gameAction.MOVE_LEFT;\n                break;\n            case game.gameControl.right:\n                this._moveFlags |= game.gameAction.MOVE_RIGHT;\n                break;\n            case game.gameControl.up:\n                if (!this._upPressed) {\n                    this._up = true;\n                }\n                this._upPressed = true;\n                break;\n            case game.gameControl.down:\n                //this.node.emit(\"switchSkin\");//更改方向\n                break;\n            case game.gameControl.weapons:\n                this.node.emit(\"switchSkin\");//更改方向\n                break;\n        }\n    },\n    onKeyUp(data) {\n        if (game.isOver) return;\n        switch (data) {\n            case game.gameControl.left:\n                this._moveFlags &= ~game.gameAction.MOVE_LEFT;\n                break;\n            case game.gameControl.right:\n                this._moveFlags &= ~game.gameAction.MOVE_RIGHT;\n                break;\n            case game.gameControl.down:\n            case game.gameControl.up:\n                this._upPressed = false;\n                break;\n        }\n    },\n    // 只在两个碰撞体开始接触时被调用一次\n    onBeginContact: function (contact, selfCollider, otherCollider) {\n        this.jumping = false;\n    },\n    // 只在两个碰撞体结束接触时被调用一次\n    onEndContact: function (contact, selfCollider, otherCollider) {\n    },\n    // 每次将要处理碰撞体接触逻辑时被调用\n    onPreSolve: function (contact, selfCollider, otherCollider) {\n    },\n    // 每次处理完碰撞体接触逻辑时被调用\n    onPostSolve: function (contact, selfCollider, otherCollider) {\n    },\n    update: function (dt) {\n        if (game.isOver) return;\n        var speed = this.body.linearVelocity;\n        if (this._moveFlags === game.gameAction.MOVE_LEFT) {\n            // speed.x -= this.acceleration * dt;\n            // if (speed.x < -this.maxSpeed) {\n            //     speed.x = -this.maxSpeed;\n            // }\n            speed.x = -this.maxSpeed;\n            this.node.emit(\"changeDirection\", -1);//更改方向\n        }\n        else if (this._moveFlags === game.gameAction.MOVE_RIGHT) {\n            // speed.x += this.acceleration * dt;\n            // if (speed.x > this.maxSpeed) {\n            //     speed.x = this.maxSpeed;\n            // }\n            speed.x = this.maxSpeed;\n            this.node.emit(\"changeDirection\", 1);//更改方向\n        }\n        else {\n            // if (speed.x != 0) {\n            //     var d = this.drag * dt;\n            //     if (Math.abs(speed.x) <= d) {\n            //         speed.x = 0;\n            //     } else {\n            //         speed.x -= speed.x > 0 ? d : -d;\n            //     }\n            // }\n            speed.x = 0;\n        }\n        //  cc.log(speed.x,speed.y);\n        if (Math.abs(speed.y) < 1) {\n            this.jumps = 2;\n        }\n        if (this.jumps > 0 && this._up) {\n            speed.y = this.jumpSpeed;\n            this.jumps--;\n            this.setState(2);\n            this.jumping = true;\n        }\n        this._up = false;\n        if (this.jumping == false) {\n            if (speed.x > 0 || speed.x < 0) {\n                this.setState(1);\n            }\n            else {\n                this.setState(0);\n            }\n        }\n        if (speed.x != 0) {\n            if (speed.x < 0) {\n                if (this.node.x < (game.mapRect.x + 150)) {\n                    speed.x = 0;\n                }\n            }\n            else {\n                if (this.node.x > (game.mapRect.x + game.mapRect.width - 300)) {\n                    speed.x = 0;\n                }\n            }\n            if (speed.y == 0) {\n                speed.y = 10;\n            }\n        }\n        this._lastX = this.node.x;\n        this.body.linearVelocity = speed;\n    },\n    //设置角色状态\n    setState(value) {\n        if (this.roleState == value) return;\n        this.node.roleState = this.roleState = value;\n        this.node.emit(\"roleState\", this.roleState);//更改动作\n    },\n});\n","let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        parent: cc.Node\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        this.idx = 0;\r\n    },\r\n    reuse(data) {\r\n        this.idx = 0;\r\n        this.node.angle = 0;\r\n    },\r\n    unuse() {\r\n        this.node.angle = 0;\r\n    },\r\n    update(dt) {\r\n        if (!this.parent) return;\r\n        this.idx++;\r\n        if (this.idx % 10 == 0) {\r\n            var idx = _.sortedIndex(game.mapXList, this.parent.x);\r\n            if (idx > 0) idx--;\r\n            if (idx >= 0 && idx < game.mapRotation.length) {\r\n                let angle = game.mapRotation[idx];\r\n                this.node.angle = angle;\r\n            }\r\n        }\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    //角色类\r\n    properties: {},\r\n    onDestroy() {\r\n        if (!this.parent) return;\r\n        this.parent.off(\"roleState\", this.setRoleState, this);\r\n        this.parent.off(\"changeDirection\", this.changeDirection, this);\r\n        this.parent.off(\"switchSkin\", this.switchSkin, this);\r\n        game.off(\"stage.touch\", this.stageTouch, this);\r\n        game.off(\"gameOver\", this.gameOver, this);\r\n        this.node.off(\"aimPos\", this.aimPos, this);\r\n    },\r\n    addEvent() {\r\n        this.parent.on(\"roleState\", this.setRoleState, this);\r\n        this.parent.on(\"changeDirection\", this.changeDirection, this);\r\n        this.parent.on(\"switchSkin\", this.switchSkin, this);\r\n        game.on(\"stage.touch\", this.stageTouch, this);\r\n        game.on(\"gameOver\", this.gameOver, this);\r\n        this.node.on(\"aimPos\", this.aimPos, this);\r\n    },\r\n    onLoad() {\r\n        if (!this.parent) this.parent = this.node.parent;\r\n        if (!this.parent) return;\r\n        this.animationName = \"\";\r\n        this.roleState = 0;//角色状态  0=静止 1=移动 2=跳跃\r\n        this.scaleX = Math.abs(this.node.scaleX);\r\n        this.sp = this.getComponent(sp.Skeleton);\r\n        let sp_skeleton_data = this.sp._skeleton.data;\r\n        this.animations = {};\r\n        for (let i in sp_skeleton_data.animations) {\r\n            let animation = sp_skeleton_data.animations[i];\r\n            this.animations[animation.name] = {\r\n                trackIndex: parseInt(i),\r\n                name: animation.name,\r\n                duration: animation.duration\r\n            };\r\n        }\r\n        this.trackIndex = this.animations.idle.trackIndex;\r\n        this.trackIndex2 = 0;\r\n        this.action = \"idle\";\r\n        this.changeAction(this.action);\r\n        // let ra1 = this.animations.run.duration > this.animations.attack1.duration ? this.animations.attack1.duration : this.animations.run.duration;\r\n        // let ra2 = this.animations.run.duration > this.animations.attack2.duration ? this.animations.attack2.duration : this.animations.run.duration;\r\n        this.setMix('run', 'attack2', 0.1);\r\n        this.setMix('run', 'attack1', 0.1);\r\n        // this.setMix('run', 'attack2', ra1);\r\n        // this.setMix('run', 'attack1', ra2);\r\n        let ia1 = this.animations.idle.duration > this.animations.attack1.duration ? this.animations.attack1.duration : this.animations.idle.duration;\r\n        let ia2 = this.animations.idle.duration > this.animations.attack2.duration ? this.animations.attack2.duration : this.animations.idle.duration;\r\n        this.setMix('idle', 'attack2', 0.2);\r\n        this.setMix('idle', 'attack1', 0.2);\r\n        // this.setMix('idle', 'attack2', ia1);\r\n        // this.setMix('idle', 'attack1', ia2);\r\n        this.weaponData = require(\"zhujueConfig\");\r\n        this.weaponIndex = 1;\r\n        setTimeout(this.init.bind(this), 100);\r\n    },\r\n    //设置角色状态\r\n    setRoleState(value) {\r\n        this.roleState = value;//角色状态  0=静止 1=移动 2=跳跃\r\n        switch (value) {\r\n            case 0: //静止\r\n                this.action = \"idle\";\r\n                this.changeAction(this.action);\r\n                break;\r\n            case 1://移动\r\n                this.action = \"run\";\r\n                this.changeAction(this.action);\r\n                break;\r\n            case 2: //跳跃\r\n                this.action = \"jump\";\r\n                this.changeAction(\"jump\");\r\n                break;\r\n        }\r\n    },\r\n    changeAction(value) {\r\n        if (this.sp.animation == value) return;\r\n        switch (value) {\r\n            case  game.gameAction.idle:\r\n                this.sp.clearTrack(this.trackIndex);\r\n                this.sp.clearTrack(this.trackIndex2);\r\n                this.trackIndex = this.animations.idle.trackIndex;\r\n                this.sp.addAnimation(this.trackIndex, \"idle\", true);\r\n                break;\r\n            case   game.gameAction.run:\r\n                this.sp.clearTrack(this.trackIndex);\r\n                this.sp.clearTrack(this.trackIndex2);\r\n                this.trackIndex = this.animations.run.trackIndex;\r\n                this.sp.addAnimation(this.trackIndex, \"run\", true);\r\n                break;\r\n            case   game.gameAction.jump:\r\n                // this.sp.clearTrack(this.trackIndex);\r\n                // this.trackIndex = this.animations.jump.trackIndex;\r\n                this.sp.clearTrack(this.trackIndex);\r\n                this.trackIndex = this.animations.jump.trackIndex;\r\n                this.sp.addAnimation(this.trackIndex, \"jump\", false);\r\n                break;\r\n            case   game.gameAction.attack:\r\n                // if (this.sp.animation == \"jump\" || this.sp.animation == \"run\")\r\n                //     return;\r\n                // this.sp.clearTrack(this.trackIndex);\r\n                this.sp.clearTrack(this.trackIndex2);\r\n                if (this.trackIndex == this.animations.idle.trackIndex || this.trackIndex == this.animations.jump.trackIndex) {\r\n                    this.sp.clearTrack(this.trackIndex);\r\n                }\r\n                let weapon = this.weaponData[this.weaponIndex];\r\n                if (weapon.attackId == 1) {\r\n                    this.trackIndex2 = this.animations.attack1.trackIndex;\r\n                    this.sp.addAnimation(this.trackIndex2, \"attack1\", false);\r\n                }\r\n                else if (weapon.attackId == 2) {\r\n                    this.trackIndex2 = this.animations.attack2.trackIndex;\r\n                    this.sp.addAnimation(this.trackIndex2, \"attack2\", false);\r\n                }\r\n                break;\r\n        }\r\n    },\r\n    gameOver() {\r\n        this.changeAction(\"idle\");\r\n    },\r\n    init: function () {\r\n        this.arm = this.sp.findBone(\"root_qiang\");\r\n        this.armPos = cc.v2(this.arm.worldX, this.arm.worldY);\r\n        this.switchSkin(this.weaponIndex);\r\n        this.armRotation = game.gameUtils.standardRotation(this.arm.rotation);\r\n        this.rotationLimit = -65;\r\n        this.rotationLimit1 = game.gameUtils.standardRotation(this.rotationLimit - 90);\r\n        this.rotationLimit2 = game.gameUtils.standardRotation(this.rotationLimit + 90);\r\n        this.sendTime = 0;\r\n        // this.curAction = \"idle\";\r\n        let self = this;\r\n        let spine = this.sp;\r\n        // //动画开始\r\n        // let weapon = this.weaponData[this.weaponIndex];\r\n        // this.attackTimeScale1 = 230 / (weapon.sendTime * 1000);\r\n        // this.attackTimeScale2 = 450 / (weapon.sendTime * 1000);\r\n        spine.setStartListener(function (trackEntry) {\r\n            let animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            switch (animationName) {\r\n                case \"attack1\":\r\n                    break;\r\n            }\r\n            // if (self.animationName === 'attack1') {\r\n            //     spine.timeScale = self.attackTimeScale1;\r\n            // }\r\n            // else if (self.animationName === 'attack2') {\r\n            //     spine.timeScale = self.attackTimeScale2;\r\n            // }\r\n            // else {\r\n            //     spine.timeScale = 1;\r\n            // }\r\n        }.bind(this));\r\n        spine.setCompleteListener(function (trackEntry) {\r\n            let animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            switch (animationName) {\r\n                case \"attack1\":\r\n                case \"attack2\":\r\n                    this.sp.clearTrack(this.trackIndex);\r\n                    this.changeAction(this.action);\r\n                    break;\r\n            }\r\n        }.bind(this));\r\n        this._isinit = true;\r\n        this.addEvent();\r\n    },\r\n    stageTouch(pos) {\r\n        if (!this._isinit) return;\r\n        if (game.isOver) return;\r\n        let p = this.node.convertToWorldSpaceAR(this.armPos);\r\n        let rotation = game.gameUtils.getRotation(p, pos);\r\n        if (this.node.scaleX < 0) {\r\n            rotation = rotation - 90 - this.weaponData[this.weaponIndex].rotation;\r\n            rotation = 360 - rotation\r\n        }\r\n        else {\r\n            rotation = rotation - 90 + this.weaponData[this.weaponIndex].rotation;\r\n        }\r\n        rotation = game.gameUtils.standardRotation(rotation);\r\n        if (game.gameUtils.limitRotation(rotation, this.rotationLimit1, this.rotationLimit2)) {\r\n            this.arm.rotation = rotation;\r\n            this.armRotation = game.gameUtils.standardRotation(this.arm.rotation);\r\n        }\r\n        else {\r\n            this.changeDirection(this.node.scaleX * -1)\r\n        }\r\n    },\r\n    aimPos(pos) {\r\n        if (!this._isinit) return;\r\n        if (game.isOver) return;\r\n        pos.y += this.weaponData[this.weaponIndex].aimY;\r\n        let p = this.node.convertToWorldSpaceAR(this.armPos);\r\n        let rotation = game.gameUtils.getRotation(p, pos);\r\n        if (this.node.scaleX < 0) {\r\n            rotation = rotation - 90 - this.weaponData[this.weaponIndex].rotation;\r\n            rotation = 360 - rotation\r\n        }\r\n        else {\r\n            rotation = rotation - 90 + this.weaponData[this.weaponIndex].rotation;\r\n        }\r\n        rotation = game.gameUtils.standardRotation(rotation);\r\n        if (game.gameUtils.limitRotation(rotation, this.rotationLimit1, this.rotationLimit2)) {\r\n            this.arm.rotation = rotation;\r\n            this.armRotation = game.gameUtils.standardRotation(this.arm.rotation);\r\n        }\r\n    },\r\n    changeDirection(value) {\r\n        this.node.scaleX = this.scaleX * value;\r\n    },\r\n    //切换皮肤 武器\r\n    switchSkin(idx) {\r\n        if (game.isOver) return;\r\n        if (!idx) {\r\n            this.weaponIndex += 1;\r\n            if (this.weaponIndex > 4) this.weaponIndex = 1;\r\n            idx = this.weaponIndex;\r\n        }\r\n        this.weaponIndex = idx;\r\n        game.emit(\"weaponIndex\", this.weaponIndex);\r\n        let weapon = this.weaponData[this.weaponIndex]\r\n        this.sp.setSkin(weapon.name);\r\n        this.weapon = this.sp.findBone(\"root_weapons\" + idx);\r\n        this.weaponPos = cc.v2(this.weapon.worldX, this.weapon.worldY);\r\n        // this.attackTimeScale1 = 230 / (weapon.sendTime * 1000);\r\n        // this.attackTimeScale2 = 450 / (weapon.sendTime * 1000);\r\n    },\r\n    //setMix 为所有关键帧设定混合及混合时间（从当前值开始差值）。\r\n    setMix(anim1, anim2, mixTime) {\r\n        // this.sp.setMix(anim1, anim2, mixTime);\r\n        // this.sp.setMix(anim2, anim1, mixTime);\r\n    },\r\n    start() {\r\n    },\r\n    update(dt) {\r\n        if (game.isOver) return;\r\n        if (!this._isinit) return;\r\n        this.sendTime += dt;\r\n        if (!game.touchDown) {\r\n            return;\r\n        }\r\n        let weapon = this.weaponData[this.weaponIndex];\r\n        if (this.sendTime > weapon.sendTime) {\r\n            this.sendTime = 0;\r\n            this.changeAction(game.gameAction.attack);\r\n            let armPos = this.node.convertToWorldSpaceAR(this.armPos);\r\n            this.weaponPos = cc.v2(this.weapon.worldX, this.weapon.worldY);\r\n            let weaponPos = this.node.convertToWorldSpaceAR(this.weaponPos);\r\n            let rotation = game.gameUtils.getRotation(armPos, weaponPos);\r\n            let bulletName = \"bullet\" + this.weaponIndex;\r\n            if (!this.shootData) this.shootData = {};\r\n            this.shootData.prefabName = bulletName;//预制体名称\r\n            this.shootData.v = weaponPos; //位置\r\n            this.shootData.angle = rotation;//角度\r\n            this.shootData.group = \"mybull\"; //组\r\n            this.shootData.attack = weapon.attack;\r\n            game.emit(\"shoot\", this.shootData);\r\n            //game.emit(\"shoot\", bulletName, weaponPos, rotation, \"mybull\");\r\n        }\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n        this.node.off(\"death\", this.death, this);\r\n    },\r\n    addEvent() {\r\n        this.node.on(\"death\", this.death, this);\r\n    },\r\n    death() {\r\n        if (this.isDeath) return;\r\n        this.node.isDeath = this.isDeath = true;\r\n        this.node.getComponent(cc.BoxCollider).enabled = false;\r\n    },\r\n    onLoad() {\r\n        this.node.isDeath = this.isDeath = false;\r\n        this.addEvent();\r\n    },\r\n    start() {\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        // var seq = cc.repeatForever(cc.sequence(cc.rotateTo(1, 90),cc.rotateTo(1, 180),cc.rotateTo(1, 270),cc.rotateTo(1, 360)));\r\n        // this.node.runAction(seq)\r\n    },\r\n    start() {\r\n    },\r\n    update(dt) {\r\n        this.node.angle -= (dt * 360) / 1.5;\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n        game.off(\"bomb1\", this.bomb1, this);//爆炸\r\n        game.off(\"bomb2\", this.bomb2, this);//爆炸\r\n        game.off(\"bomb3\", this.bomb3, this);//爆炸\r\n    },\r\n    onLoad() {\r\n        game.on(\"bomb1\", this.bomb1, this);//爆炸\r\n        game.on(\"bomb2\", this.bomb2, this);//爆炸\r\n        game.on(\"bomb3\", this.bomb3, this);//爆炸\r\n    },\r\n    /********\r\n     *\r\n     * 爆炸效果\r\n     * **/\r\n    bomb1(data) {\r\n        data.aniName = \"bomb1\";\r\n        let pool = game.bombPool[\"bomb1\"];\r\n        if (pool && pool.prefab) {\r\n            pool.getNode(data, this.node);\r\n            //this.node.addChild(b);\r\n        }\r\n    },\r\n    /********\r\n     *\r\n     * 爆炸效果\r\n     * **/\r\n    bomb2(data) {\r\n        data.aniName = \"bomb2\";\r\n        let pool = game.bombPool[\"bomb2\"];\r\n        if (pool && pool.prefab) {\r\n            pool.getNode(data, this.node);\r\n            //this.node.addChild(b);\r\n        }\r\n    },\r\n    /********\r\n     * 爆炸效果\r\n     * **/\r\n    bomb3(data) {\r\n        data.aniName = \"bomb3\";\r\n        let pool = game.bombPool[\"bomb3\"];\r\n        if (pool && pool.prefab) {\r\n            pool.getNode(data, this.node);\r\n            //this.node.addChild(b);\r\n        }\r\n    }\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n        game.off(\"shoot\", this.shoot, this);//\r\n    },\r\n    onLoad() {\r\n        game.on(\"shoot\", this.shoot, this);//\r\n    },\r\n    /****\r\n     * 发射子弹\r\n     * ****/\r\n    shoot(data) {\r\n        let pool = game.bulletPool[data.prefabName];\r\n        if (pool && pool.prefab) {\r\n            pool.getNode(data,this.node);\r\n            //this.node.addChild(b);\r\n        }\r\n    }\r\n})\r\n;\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n        game.off(\"shootFire\", this.shootFire, this);//开火动画\r\n    },\r\n    onLoad() {\r\n        game.on(\"shootFire\", this.shootFire, this);//开火动画\r\n    },\r\n    /*****\r\n     * 开火动画\r\n     * **/\r\n    shootFire(data) {\r\n\r\n        let pool = game.firePool[\"fire\"];\r\n        if (pool && pool.prefab) {\r\n            pool.getNode(data,this.node);\r\n            //this.node.addChild(b);\r\n        }\r\n    },\r\n});\r\n","module.exports = {\r\n    _musicUrl: null,\r\n    _musicMute: false,\r\n    _musicVolume: 1,\r\n    _effectList: [],\r\n    _effectMute: false,\r\n    _effectVolume: 1,\r\n    _curMusicId: null,\r\n    init() {\r\n        let musicMute = game.localStorage.getItem(\"musicMute\");\r\n        if (musicMute == null) musicMute = false;\r\n        this.musicMute = musicMute;\r\n        let effectMute = game.localStorage.getItem(\"effectMute\");\r\n        if (effectMute == null) effectMute = false;\r\n        this.effectMute = effectMute;\r\n        let musicVolume = game.localStorage.getItem(\"musicVolume\");\r\n        if (musicVolume == null) musicVolume = 1;\r\n        this.musicVolume = musicVolume;\r\n        let effectVolume = game.localStorage.getItem(\"effectVolume\");\r\n        if (effectVolume == null) effectVolume = 1;\r\n        this.effectVolume = effectVolume;\r\n    },\r\n    /****\r\n     * 音乐是否静音\r\n     * ****/\r\n    get musicMute() {\r\n        return this._musicMute;\r\n    },\r\n    set musicMute(value) {\r\n        if (this._musicMute != value) {\r\n            game.localStorage.setItem(\"musicMute\", value);\r\n            this._musicMute = value;\r\n            if (!value)\r\n                this.playMusic(this._musicUrl, true, true);\r\n            else\r\n                cc.audioEngine.stopMusic();\r\n        }\r\n    },\r\n    /**背景音乐音量 */\r\n    get musicVolume() {\r\n        return this._musicVolume;\r\n    },\r\n    set musicVolume(value) {\r\n        if (this._musicVolume != value) {\r\n            game.localStorage.setItem(\"musicVolume\", value);\r\n            this._musicVolume = value;\r\n            cc.audioEngine.setMusicVolume(value);\r\n        }\r\n    },\r\n    /**音效是否静音 */\r\n    get effectMute() {\r\n        return this._effectMute;\r\n    },\r\n    set effectMute(value) {\r\n        if (this._effectMute != value) {\r\n            game.localStorage.setItem(\"effectMute\", value);\r\n            this._effectMute = value;\r\n            if (value)\r\n                cc.audioEngine.stopAllEffects();\r\n        }\r\n    },\r\n    /**音效音量 */\r\n    get effectVolume() {\r\n        return this._effectVolume;\r\n    },\r\n    set effectVolume(value) {\r\n        if (this._effectVolume != value) {\r\n            game.localStorage.setItem(\"effectVolume\", value);\r\n            this._effectVolume = value;\r\n            cc.audioEngine.setEffectsVolume(value);\r\n        }\r\n    },\r\n    /**\r\n     * 播放背景音乐\r\n     */\r\n    playMusic(url, loop, afresh) {\r\n        if (!afresh && this._musicUrl == url) return;\r\n        if (this._musicMute) return;\r\n        this._musicUrl = url;\r\n        cc.resources.load(url, cc.AudioClip, function (err, clip) {\r\n            \r\n            if (this._curMusicId) cc.audioEngine.stop(this._curMusicId);\r\n            this._curMusicId = cc.audioEngine.playMusic(clip, loop);\r\n        }.bind(this));\r\n    },\r\n    /**暂停播放背景音乐 */\r\n    pauseMusic() {\r\n        cc.audioEngine.pauseMusic();\r\n    },\r\n    /**继续播放背景音乐 */\r\n    resumeMusic() {\r\n        cc.audioEngine.resumeMusic();\r\n    },\r\n    /**停止背景音乐 */\r\n    stopMusic() {\r\n        cc.audioEngine.stopMusic();\r\n    },\r\n    /**\r\n     * 播放音效\r\n     * @param audioName 音乐文件名称，不需要填文件后缀\r\n     * @param loop 是否循环播放\r\n     * @param folder 资源文件夹名称，必须放在resources文件夹下面\r\n     */\r\n    playEffect(url, loop) {\r\n        loop = loop || false;\r\n        this.checkEffect();\r\n        if (this._effectMute) return;\r\n        cc.loader.loadRes(url, cc.AudioClip, function (err, clip) {\r\n            let id = cc.audioEngine.playEffect(clip, loop);\r\n            cc.audioEngine.setVolume(id, this.effectVolume);\r\n            this._effectList.push({\"url\": url, \"id\": id});\r\n        }.bind(this));\r\n    },\r\n    checkEffect() {\r\n        for (let i = this._effectList.length - 1; i >= 0; i--) {\r\n            let obj = this._effectList[i];\r\n            if (cc.audioEngine.getState(obj[\"id\"]) == -1)\r\n                this._effectList.splice(i, 1);\r\n        }\r\n    },\r\n    /**\r\n     * 停止某个音效\r\n     * @param audioName\r\n     * @param folder\r\n     */\r\n    stopEffect(url) {\r\n        for (let i = this._effectList.length - 1; i >= 0; i--) {\r\n            let obj = this._effectList[i];\r\n            if (cc.audioEngine.getState(obj[\"id\"]) == -1) {\r\n                this._effectList.splice(i, 1);\r\n                continue;\r\n            }\r\n            if (obj[\"url\"] == url) {\r\n                cc.audioEngine.stopEffect(obj[\"id\"]);\r\n                this._effectList.splice(i, 1);\r\n            }\r\n        }\r\n    },\r\n    /**停止所有音效 */\r\n    stopAllEffect() {\r\n        cc.audioEngine.stopAllEffects();\r\n        this._effectList.length = 0;\r\n    }\r\n};","cc.Class({\r\n    //动画播放类\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onLoad() {\r\n        this.sp = this.node.getComponent(sp.Skeleton); //获取骨骼动画组件\r\n        this.data = this.sp._skeleton.data; // SkeletonData 骨架数据\r\n        this.animations = {};\r\n        for (let i in this.data.animations) {\r\n            this.animations[animation.name] = {\r\n                trackIndex: parseInt(i),\r\n                name: animation.name,\r\n                duration: animation.duration\r\n            };\r\n        }\r\n        this.weaponData = require(\"zhujueConfig\");//武器数据\r\n        this.sp.setStartListener(function (trackEntry) {\r\n            self.animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            if (self.animationName === 'attack1') {\r\n                this.sp.timeScale = self.attackTimeScale1;\r\n            }\r\n            else if (self.animationName === 'attack2') {\r\n                this.sp.timeScale = self.attackTimeScale2;\r\n            }\r\n            else {\r\n                this.sp.timeScale = 1;\r\n            }\r\n        }.bind(this));\r\n        this.sp.setCompleteListener(function (trackEntry) {\r\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            if (animationName === 'attack1' || animationName === 'attack2') {\r\n            }\r\n        }.bind(this));\r\n    },\r\n    onDestroy() {\r\n        if (!this.parent) return;\r\n        // this.parent.off(\"roleState\", this.setRoleState, this);\r\n        // this.parent.off(\"changeDirection\", this.changeDirection, this);\r\n        this.parent.off(\"switchSkin\", this.switchSkin, this);\r\n        // game.off(\"stage.touch\", this.stageTouch, this);\r\n        // game.off(\"gameOver\", this.gameOver, this);\r\n    },\r\n    addEvent() {\r\n        // this.parent.on(\"roleState\", this.setRoleState, this);\r\n        // this.parent.on(\"changeDirection\", this.changeDirection, this);\r\n        this.parent.on(\"switchSkin\", this.switchSkin, this);\r\n        // game.on(\"stage.touch\", this.stageTouch, this);\r\n        // game.on(\"gameOver\", this.gameOver, this);\r\n    },\r\n    //切换皮肤 武器\r\n    switchSkin(idx) {\r\n        if (game.isOver) return;\r\n        if (!idx) {\r\n            this.weaponIndex += 1;\r\n            if (this.weaponIndex > 4) this.weaponIndex = 1;\r\n            idx = this.weaponIndex;\r\n        }\r\n        this.weaponIndex = idx;\r\n        game.emit(\"weaponIndex\", this.weaponIndex);\r\n        var weapon = this.weaponData[this.weaponIndex];\r\n        this.sp.setSkin(weapon.name);\r\n        this.weapon = this.sp.findBone(\"root_weapons\" + idx);\r\n        this.weaponPos = cc.v2(this.weapon.worldX, this.weapon.worldY);\r\n        this.attackTimeScale1 = 230 / (weapon.sendTime * 1000);\r\n        this.attackTimeScale2 = 450 / (weapon.sendTime * 1000);\r\n    },\r\n    /**\r\n     !#en\r\n     Mix applies all keyframe values,\r\n     interpolated for the specified time and mixed with the current values.\r\n     !#zh 为所有关键帧设定混合及混合时间（从当前值开始差值）。\r\n     @param fromAnimation fromAnimation\r\n     @param toAnimation toAnimation\r\n     @param duration duration\r\n     */\r\n    setMix(anim1, anim2, mixTime) {\r\n        this.sp.setMix(anim1, anim2, mixTime);\r\n        this.sp.setMix(anim2, anim1, mixTime);\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        cc.log(new sp.spine.Vector2(1, 2));\r\n    },\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","let HpComponent = require(\"hpComponent\"); //池子组件\r\ncc.Class({\r\n    extends: HpComponent,\r\n    properties: {\r\n        progressBar: cc.ProgressBar,\r\n        totalHp: 1000\r\n    },\r\n    //受到的伤害\r\n    onHurt(value) {\r\n        this.curHp -= value;\r\n        this.isShow = true;\r\n        this.progressBar.node.opacity = 255;\r\n        this.showTime = 0;\r\n        this.updateBar();\r\n        if (this.curHp <= 0) {\r\n            this.node.emit(\"death\");\r\n            this.parent.emit(\"death\");\r\n        }\r\n    },\r\n    onDestroy() {\r\n    },\r\n    updateBar() {\r\n        var progress = (this.curHp / this.totalHp).format();\r\n        this.progressBar.progress = progress;\r\n        this.node.emit(\"dissolve\", (1 - progress));\r\n    },\r\n    //碰撞检测到\r\n    onCollisionEnter: function (other, self) {\r\n        var hurt = other.node.getComponent(\"hurt\");\r\n        if (!hurt || hurt.hurtValue == 0) return;\r\n        this.curHp -= hurt.hurtValue;\r\n        hurt.end();\r\n        this.isShow = true;\r\n        this.progressBar.node.opacity = 255;\r\n        this.showTime = 0;\r\n        this.updateBar();\r\n        if (this.curHp <= 0) {\r\n            this.node.emit(\"death\");\r\n        }\r\n        //D:\\project\\client\\dbl-client\\build\\\r\n        // jsb-link\\frameworks\\runtime-src\\proj.android-studio\\app\\jni\\Android.mk\r\n    },\r\n    onCollisionStay: function (other, self) {\r\n    },\r\n    //碰撞退出\r\n    onCollisionExit: function (other, self) {\r\n        // cc.log(\"碰撞退出\")\r\n    },\r\n    onLoad() {\r\n        this.curHp = this.totalHp;\r\n        this.updateBar();\r\n        this.showTime = 0;\r\n        this.isShow = false;\r\n        this.progressBar.node.opacity = 0;\r\n    },\r\n    start() {\r\n    },\r\n    update(dt) {\r\n        this.showTime += dt;\r\n        if (this.isShow && this.showTime > 2) {\r\n            this.isShow = false;\r\n            this.progressBar.node.opacity = 0;\r\n        }\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        sendNode: cc.Node,\r\n        attackTme: 1, //攻击时间\r\n        attack: 1000, //攻击力\r\n        bulletName: \"bullet5\"\r\n    },\r\n    onDestroy() {\r\n        this.parent.off(\"death\", this.death, this);\r\n    },\r\n    addEvent() {\r\n        this.parent.on(\"death\", this.death, this);\r\n    },\r\n    death() {\r\n        this.node.getComponent(cc.CircleCollider).enabled = false;\r\n        let renderComponents = this.node.getComponents(cc.RenderComponent);\r\n        let renderComponent = renderComponents[0];\r\n        renderComponent.setMaterial(0, game.materias[\"dissolve\"]);\r\n    },\r\n    onLoad() {\r\n        this.targets = [];\r\n        this.sendTime = 0;\r\n        this.parent = this.node.parent;\r\n        this.worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        let sx = this.node.scaleX; //* this.parent.scaleX;\r\n        let psy = this.parent.scaleX; //* this.parent.scaleX;\r\n        sx = sx * psy;\r\n        this.flip = sx < 0;\r\n        this.flip2 = psy < 0;\r\n        this.targetGroup = \"enbull2\";\r\n        if (this.node.group == \"myeye\") {\r\n            this.targetGroup = \"mybull2\";\r\n        }\r\n        this.addEvent();\r\n    },\r\n    //碰撞进入\r\n    onCollisionEnter: function (other, self) {\r\n        if (game.isOver) return;\r\n        if (this.node.isDeath) return;\r\n        let node = other.node;\r\n        if (this.targets.indexOf(node) < 0) {\r\n            this.targets.push(node);\r\n        }\r\n    },\r\n    //碰撞退出\r\n    onCollisionExit: function (other, self) {\r\n        if (game.isOver) return;\r\n        if (this.parent.isDeath) return;\r\n        let node = other.node;\r\n        let idx = this.targets.indexOf(node)\r\n        if (idx >= 0) {\r\n            this.targets.splice(idx, 1);\r\n        }\r\n    },\r\n    start() {\r\n    },\r\n    update(dt) {\r\n        if (game.isOver) return;\r\n        if (this.parent.isDeath) return;\r\n        this.sendTime += dt;\r\n        if (!this.targets || this.targets.length == 0) {\r\n            //\r\n            //this.sendTime = 0;\r\n            return;\r\n        }\r\n        let target = this.targets[0];\r\n        let targetPos = target.convertToWorldSpaceAR(game.point1);\r\n        // game.root.emit(\"drawClear\");\r\n        // game.root.emit(\"draw\", targetPos);\r\n        //game.root.emit(\"draw\", this.worldPos);\r\n        let rotation = game.gameUtils.getRotation(this.worldPos, targetPos);\r\n        if (this.flip) {\r\n            rotation = rotation + 180;\r\n        }\r\n        if (this.flip2) {\r\n            rotation = 360 - rotation;\r\n        }\r\n        this.node.angle = rotation;// dt * 10;\r\n        if (this.sendTime > this.attackTme) //攻击时间到了\r\n        {\r\n            this.sendTime = 0;\r\n            let sendPos = this.sendNode.convertToWorldSpaceAR(game.point1);\r\n            rotation = game.gameUtils.getRotation(sendPos, targetPos);\r\n            //game.emit(\"shootFire\", \"fire\", \"eff3\", sendPos, rotation, this.targetGroup);//开火动画\r\n            game.emit(\"shootFire\", {aniName: \"eff3\", v: sendPos, angle: rotation});//开火动画\r\n            game.emit(\"shoot\", {\r\n                prefabName: this.bulletName,//预制体名称\r\n                v: sendPos, //位置\r\n                angle: rotation - 15,//角度\r\n                group: this.targetGroup, //组\r\n                attack: this.attack\r\n            });\r\n            game.emit(\"shoot\", {\r\n                prefabName: this.bulletName,//预制体名称\r\n                v: sendPos, //位置\r\n                angle: rotation,//角度\r\n                group: this.targetGroup, //组\r\n                attack: this.attack\r\n            });\r\n            game.emit(\"shoot\", {\r\n                prefabName: this.bulletName,//预制体名称\r\n                v: sendPos, //位置\r\n                angle: rotation + 15,//角度\r\n                group: this.targetGroup, //组\r\n                attack: this.attack\r\n            });\r\n        }\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n        this.node.off(\"death\", this.death, this);\r\n    },\r\n    addEvent() {\r\n        this.node.on(\"death\", this.death, this);\r\n        this.node.on(\"dissolve\", this.dissolve, this);\r\n    },\r\n    dissolve(value) {\r\n        if (value > 1) value = 1;\r\n        if (value < 0) value = 0;\r\n        value = value * 255;\r\n        if (this.hua)\r\n            this.hua.setHua(value);\r\n        //this.material.setProperty(\"disLevel\", value);\r\n    },\r\n    death() {\r\n        if (this.isDeath) return;\r\n        this.node.isDeath = this.isDeath = true;\r\n        this.node.getComponent(cc.PolygonCollider).enabled = false;\r\n    },\r\n    onLoad() {\r\n        this.node.isDeath = this.isDeath = false;\r\n        this.addEvent();\r\n        // let renderComponents = this.node.getComponents(cc.RenderComponent);\r\n        // let renderComponent = renderComponents[0];\r\n        // this.material = renderComponent.getMaterial(0);\r\n        this.hua = this.node.getComponent(\"hua\");\r\n    },\r\n    start() {\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        mask: cc.Mask,\r\n        weapon: cc.Sprite\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        game.on(\"zhujiaoXue\", this.zhujiaoXue, this);\r\n        game.on(\"weaponIndex\", this.zhujiaoWeapon, this);\r\n    },\r\n    start() {\r\n    },\r\n    zhujiaoWeapon(weaponIndex) {\r\n        this.weapon.spriteFrame = game.map_atlas.getSpriteFrame(\"qiang\" + weaponIndex);\r\n    },\r\n    zhujiaoXue(curHp, totalHp) {\r\n        var progress = (curHp / totalHp).format();\r\n        this.mask.node.width = progress * 286;\r\n    },\r\n    onGamePaues() {\r\n        game.emit(game.gameEvent.popup_prefab, game.gamePopup.gamePause);\r\n    }\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        canvas: cc.Node\r\n    },\r\n    onLoad() {\r\n        game.touchDown = false;\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.on_touch_start, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.on_touch_end, this);\r\n        if (cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS) { //ANDROID IOS\r\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.on_touch_move, this);\r\n        } else {\r\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.on_touch_move, this);\r\n            //this.node.on(cc.Node.EventType.MOUSE_MOVE, this.on_mouse_move, this);\r\n        }\r\n        this.touchPos = cc.v2();\r\n    },\r\n    onDestroy() {\r\n        this.node.off(cc.Node.EventType.TOUCH_START, this.on_touch_start, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this.on_touch_end, this);\r\n        if (cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS) { //ANDROID IOS\r\n            this.node.off(cc.Node.EventType.TOUCH_MOVE, this.on_touch_move, this);\r\n        } else {\r\n            this.node.off(cc.Node.EventType.TOUCH_MOVE, this.on_touch_move, this);\r\n            //this.node.off(cc.Node.EventType.MOUSE_MOVE, this.on_mouse_move, this);\r\n        }\r\n    },\r\n    //屏幕按下\r\n    on_touch_start(touch) {\r\n        var pos = touch.getLocation();\r\n        var pos1 = this.node.convertToNodeSpaceAR(pos);\r\n        this.touchPos.x = (pos1.x + this.canvas.x);\r\n        this.touchPos.y = (pos1.y + this.canvas.y);\r\n        game.emit(\"stage.touch\", this.touchPos);\r\n        game.touchDown = true;\r\n    },\r\n    on_touch_end(touch) {\r\n        game.touchDown = false;\r\n    },\r\n    on_mouse_move(touch) {\r\n        var pos = touch.getLocation();\r\n        var pos1 = this.node.convertToNodeSpaceAR(pos);\r\n        this.touchPos.x = (pos1.x + this.canvas.x);\r\n        this.touchPos.y = (pos1.y + this.canvas.y);\r\n        game.emit(\"stage.touch\", this.touchPos);\r\n    },\r\n    on_touch_move(touch) {\r\n        var pos = touch.getLocation();\r\n        var pos1 = this.node.convertToNodeSpaceAR(pos);\r\n        this.touchPos.x = (pos1.x + this.canvas.x);\r\n        this.touchPos.y = (pos1.y + this.canvas.y);\r\n        game.emit(\"stage.touch\", this.touchPos);\r\n    },\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        cc.game.addPersistRootNode(this.node); //添加常驻节点\r\n        game.on(\"aa\", function (txt) {\r\n            cc.log(txt)\r\n        })\r\n        //game.gameConfig.junguan.attack;\r\n    },\r\n    start() {\r\n    },\r\n    //返回界面\r\n    oBack(event, value) {\r\n        game.emit(game.gameEvent.load_scene, game.gameScene.hall);\r\n    },\r\n    showPhysicsManager() {\r\n        let physicsManager = cc.director.getPhysicsManager();\r\n        if (physicsManager.debugDrawFlags == 0) {\r\n            physicsManager.debugDrawFlags = // 0;\r\n                cc.PhysicsManager.DrawBits.e_aabbBit |\r\n                cc.PhysicsManager.DrawBits.e_jointBit |\r\n                cc.PhysicsManager.DrawBits.e_shapeBit;\r\n        }\r\n        else {\r\n            physicsManager.debugDrawFlags = 0;\r\n        }\r\n        //  physicsManager.enabled = true;\r\n    },\r\n    showDebugDraw() {\r\n        cc.director.getCollisionManager().enabledDebugDraw = !cc.director.getCollisionManager().enabledDebugDraw;\r\n    },\r\n    showTest() {\r\n        game.emit(game.gameEvent.popup_prefab, game.gamePopup.gameOver, {test: 123});\r\n    }\r\n\r\n    // update (dt) {},\r\n});\r\n","/*\r\n * This script is automatically generated by Cocos Creator and is only used for projects compatible with v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 versions.\r\n * You do not need to manually add this script in any other project.\r\n * If you don't use cc.Action in your project, you can delete this script directly.\r\n * If your project is hosted in VCS such as git, submit this script together.\r\n *\r\n * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 版本的工程，\r\n * 你无需在任何其它项目中手动添加此脚本。\r\n * 如果你的项目中没用到 Action，可直接删除该脚本。\r\n * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。\r\n */\r\n\r\ncc.RotateBy._reverse = true;\r\n","Number.prototype.format = function (a) {\r\n    a = a || 3;\r\n    a++;\r\n    var add = Math.pow(10, a);\r\n    var num = Math.round(this * add);\r\n    var str = num.toString();\r\n    var fu = str.substring(0, 1);\r\n    if (fu == \"-\" || fu == \"+\") { //带符号的情况\r\n        str = str.substring(1, str.length)\r\n    }\r\n    else {\r\n        fu = \"+\"\r\n    }\r\n    while (str.length < a)\r\n        str = \"0\" + str;\r\n    var str2 = fu + str.substring(0, str.length - a) + \".\" + str.substring(str.length - a, str.length - 1);\r\n    return parseFloat(str2);\r\n}","module.exports = {\n    \"d74d7172-1fa1-41e8-ae9e-1445ebea0cd8\": \"./Scene/gameGuanka.fire\",\n    \"c121fa0b-79d4-4da2-9501-b6f47d741f31\": \"./Scene/gameMain.fire\",\n    \"6893700d-458b-4d35-a7b4-13324ee4e80a\": \"./Scene/hall.fire\",\n    \"f9e4f40f-79e5-4a17-a89d-98190f3b0c1f\": \"./Scene/login.fire\",\n    \"722f8927-0f8a-454c-a29a-451c3c78ddc6\": \"./Scene/edit/mapEdit.fire\",\n    \"d4920577-b3d4-48b1-b263-c2296232b89e\": \"./Scene/edit/roleEdit.fire\",\n    \"ba2eee8c-0715-4bce-a4a6-b869f819d7c8\": \"./resources/bg/guankabg.jpg\",\n    \"1948c7a5-087a-46eb-92a8-ceeba2b119cb\": \"./resources/bg/loginBg.jpg\",\n    \"53e07a1a-b349-47cd-9001-bf409925e79a\": \"./resources/bg/ztbg.png\",\n    \"aceab0cc-a72f-4f67-a699-60f836d6597d\": \"./resources/fnt/djb.fnt\",\n    \"84f8d933-f260-4aa0-a747-bf9074997abc\": \"./resources/fnt/djb.png\",\n    \"76dddb12-e5dc-4569-a677-290b63ff9fc9\": \"./resources/fnt/gk.fnt\",\n    \"4ef34dfa-8f37-4487-ae66-47f8caff1cb2\": \"./resources/fnt/gk.png\",\n    \"ac99f0d4-f1a7-4383-8228-be069253714a\": \"./resources/fnt/shm.fnt\",\n    \"145be925-1992-4ede-ba47-c48fb0ac68f5\": \"./resources/fnt/shm.png\",\n    \"a1a251c5-123f-4f6d-815d-94657961f2a5\": \"./resources/fnt/shyzd.fnt\",\n    \"1f39306a-b852-4e2b-9743-5abe80628cbd\": \"./resources/fnt/shyzd.png\",\n    \"6d00b8b2-e61f-4abf-8ef7-99d2472512d8\": \"./resources/fnt/sz.fnt\",\n    \"39ec2272-d7cc-47f4-8ea7-8e95e168e269\": \"./resources/fnt/sz.png\",\n    \"2bcdf419-1e3e-434a-b178-3aff3599dfe1\": \"./resources/fnt/xb.fnt\",\n    \"25d2a150-8424-4374-8b88-ca504b7379ee\": \"./resources/fnt/xb.png\",\n    \"60a51721-5c82-4649-b09e-5a8cd3f556fb\": \"./resources/fnt/xjb.fnt\",\n    \"4ac294cc-8060-4bae-8449-0c00998d6d64\": \"./resources/fnt/xjb.png\",\n    \"a3f10d4b-8617-4002-8a6b-10b5ab5037e8\": \"./resources/map/map1_1.jpg\",\n    \"66584e35-8531-4b88-8da1-95f08dca7859\": \"./resources/map/map1_2.jpg\",\n    \"82bdfc19-5df3-49f2-b012-f1acc986d873\": \"./resources/plist/bomb.plist\",\n    \"68588a96-c0f8-4d25-be2e-087f5da1774b\": \"./resources/plist/bomb.png\",\n    \"748536db-9909-4ac1-a12c-364d0aa53022\": \"./resources/plist/bullet.plist\",\n    \"a450a7c0-4f64-47f0-a73d-1154469851d5\": \"./resources/plist/bullet.png\",\n    \"82a9b684-4c52-4f0c-904f-98282d700caa\": \"./resources/plist/loading.plist\",\n    \"b4b5aa8c-d9b4-45c8-9bcd-1a8e23e06ec2\": \"./resources/plist/loading.png\",\n    \"2a4c8933-3824-49bd-b51c-4f41d2c5669f\": \"./resources/plist/map.plist\",\n    \"a9094eb2-11ed-40fc-b6c6-cb53666c2ca6\": \"./resources/plist/map.png\",\n    \"1f9a16e3-a619-4eaf-bb25-d6046caecb9a\": \"./resources/plist/ui.plist\",\n    \"17a8720c-1a8a-4d2f-ae3f-0abf80ede220\": \"./resources/plist/ui.png\",\n    \"edd686c3-69e1-4abb-95eb-937536448a80\": \"./resources/res/dot.png\",\n    \"784999e0-c15d-4cbc-884a-6454252e25d5\": \"./resources/res/joystick.png\",\n    \"8a35ac54-2e27-44c0-8a89-bfb6190c0260\": \"./resources/res/noise1.png\",\n    \"7dfd1234-d9a6-4e42-b0d9-43bfc7e9dbcf\": \"./resources/res/rockerBg.png\",\n    \"5923f13c-05f1-4c37-9e84-b6a847ad8bec\": \"./resources/sound/bao_zha_jing_bao.mp3\",\n    \"42e52b4d-c8d9-44c0-b434-8f8122e073af\": \"./resources/sound/bgm1_1.mp3\",\n    \"6a0ef7eb-70f3-4f0b-84c4-d2d2555f6713\": \"./resources/sound/bgm1_2.mp3\",\n    \"77e9e707-4e99-46a0-a12b-8573de050390\": \"./resources/sound/bgm1_3.mp3\",\n    \"382d9ea1-540d-49bc-80af-6dddb98615cd\": \"./resources/sound/bgm2_1.mp3\",\n    \"bb79dbb4-3568-4b09-9f7c-e46abed3f4b0\": \"./resources/sound/bgm2_2.mp3\",\n    \"added5c0-fd60-4bb0-a7d7-d3d47a2d0661\": \"./resources/sound/bgm2_3.mp3\",\n    \"c6dbb023-0bdc-4afe-b1d2-7ac6c2a4c836\": \"./resources/sound/bgm2_4.mp3\",\n    \"17814bcb-6bf6-4a5e-8cf6-69edd02371d9\": \"./resources/sound/bgm3_1.mp3\",\n    \"7158748d-fef8-47af-8df1-cb2c938e5f02\": \"./resources/sound/bgm3_2.mp3\",\n    \"62e4bf93-ae55-45d1-966e-0bc5f34c42fb\": \"./resources/sound/bgm3_3.mp3\",\n    \"b5066e85-d3a7-4361-8093-6213c44c63b9\": \"./resources/sound/bgm4_1.mp3\",\n    \"dc304605-47aa-4294-b956-836ea36d2e49\": \"./resources/sound/bgm4_2.mp3\",\n    \"cc5a8177-2ff6-450f-9a32-66267f93dca7\": \"./resources/sound/bgm4_3.mp3\",\n    \"cc35a6c0-9fee-4fd9-8586-5e6f9b4ca1ae\": \"./resources/sound/bgm4_4.mp3\",\n    \"d9be01ee-f87c-4d1a-9710-2a34edb22a07\": \"./resources/sound/bgm_lose.mp3\",\n    \"adf6919a-b418-4319-be48-bce33504ecc7\": \"./resources/sound/bgm_win.mp3\",\n    \"b5679139-1b0f-4c25-87ad-259c8bd8cdf5\": \"./resources/sound/bi_sha_yin_xiao1.mp3\",\n    \"4c6210cd-49a8-4ffc-a499-beda3d9f80e6\": \"./resources/sound/bi_sha_yin_xiao2.mp3\",\n    \"8ff34567-5577-4bc8-9466-be4fcd60b997\": \"./resources/sound/bi_sha_yin_xiao3.mp3\",\n    \"76000b4b-a75c-4cd2-be48-fc78fb02db8f\": \"./resources/sound/bo_li_po_sui.mp3\",\n    \"ceec43ef-13d4-4894-8467-f16c4eda962b\": \"./resources/sound/boss_jing_bao.mp3\",\n    \"02481be8-e4bb-4981-8dbd-869ab7cdd022\": \"./resources/sound/bu_chong_dan_yao.mp3\",\n    \"c3c68ad3-d9ba-4bf3-b083-2cbc86b579ec\": \"./resources/sound/chong_xing_qiang_jie1.mp3\",\n    \"cf7d62ea-7b74-4ac6-a0ee-1a38740aec90\": \"./resources/sound/chong_xing_qiang_jie2.mp3\",\n    \"484b3047-5b17-41c8-8077-6696fbb48588\": \"./resources/sound/chong_xing_qiang_jie3.mp3\",\n    \"36329aef-0c59-4153-8481-d35dcbd2f515\": \"./resources/sound/chong_xing_qiang_jie4.mp3\",\n    \"f5f9cdc3-1cc3-4d9b-8f27-2aa388d69a4e\": \"./resources/sound/chong_xing_qiang_jie5.mp3\",\n    \"9be6ca02-0fca-4c8c-b25a-773e595bc89f\": \"./resources/sound/chong_xing_qiang_jie6.mp3\",\n    \"7c983613-6ba3-486a-b97b-294c1fc009f1\": \"./resources/sound/chong_xing_qiang_jie7.mp3\",\n    \"8d7309d1-df37-4232-926c-e37af479b59d\": \"./resources/sound/chu_shui.mp3\",\n    \"785ff632-b997-4849-b48b-e6215bdf590d\": \"./resources/sound/da_bao_zha.mp3\",\n    \"8ce30dd6-b74b-437c-897e-c1b37736b09a\": \"./resources/sound/da_ji_sheng_yin.mp3\",\n    \"b16e541e-9dbd-4f1f-bf65-ac0f3dee5ae8\": \"./resources/sound/da_tiao_yue.mp3\",\n    \"6212f79b-8b44-49de-bb57-5ffe12546d4f\": \"./resources/sound/da_xiang_jiao_sheng.mp3\",\n    \"81173b70-1514-4264-b2ad-1e49ffd20ef2\": \"./resources/sound/dao_dan_bao_zha.mp3\",\n    \"da3314f5-2a03-41be-a516-5ddce4c1fb57\": \"./resources/sound/di_bing_si_wang01.mp3\",\n    \"72b015e8-5388-453f-9c89-e33c2576ecff\": \"./resources/sound/di_bing_si_wang02.mp3\",\n    \"8b2242ae-2e83-41fd-8c59-92f5c1284dbd\": \"./resources/sound/di_bing_si_wang03.mp3\",\n    \"8f78eedb-98bc-409c-8226-731829480a38\": \"./resources/sound/di_bing_si_wang04.mp3\",\n    \"053c4e8a-2aaa-4d53-8b37-480cb0739cc5\": \"./resources/sound/e_yu1.mp3\",\n    \"39c7784e-d3a0-4fa5-acab-cdfa17f571ea\": \"./resources/sound/fei_ji_fei_guo.mp3\",\n    \"ea4e3f35-a763-4fe2-9875-da968b5f5064\": \"./resources/sound/fei_ji_fei_lai.mp3\",\n    \"406ae0c7-be52-44d5-ad74-f8e408267574\": \"./resources/sound/fei_ji_fei_zou.mp3\",\n    \"828a49df-93ab-41ca-a0ea-eb6a11bdd6c1\": \"./resources/sound/fei_ji_jin_ru.mp3\",\n    \"7b7e5b14-b647-442a-81c8-3ff9f88cdb8b\": \"./resources/sound/fei_ji_tiao_chu.mp3\",\n    \"19ad5542-1625-4503-b262-c50bcd8dfa5a\": \"./resources/sound/gong_fu_bo_dong_quan.mp3\",\n    \"eea41dcb-74ed-4375-af75-196f04dc61e1\": \"./resources/sound/gong_fu_da_xiao.mp3\",\n    \"6a7bf3ac-2ceb-4147-9907-90b0af130e6a\": \"./resources/sound/gong_fu_sheng_long_quan.mp3\",\n    \"2b5e460e-6cd1-4222-aa7f-aea47d72d9d3\": \"./resources/sound/gong_fu_xuan_feng_tui.mp3\",\n    \"fddbdf19-62e7-44db-bd2f-7ed3720a7528\": \"./resources/sound/gong_gong_ji1.mp3\",\n    \"ea4ba105-01a6-4c25-862c-05766f22a1eb\": \"./resources/sound/gong_gong_ji2.mp3\",\n    \"243beeb9-3d54-468e-8a38-ae9acc3b20fc\": \"./resources/sound/gong_ji.mp3\",\n    \"9c0e4762-b897-497d-91e9-007b3dae08a6\": \"./resources/sound/hong_zha_ji_luo_dan.mp3\",\n    \"74e2c78b-95c1-4ca8-863c-863f5530b19b\": \"./resources/sound/huo_che1.mp3\",\n    \"fb01ddd8-3646-49c5-92c8-d029688a0b10\": \"./resources/sound/huo_che2.mp3\",\n    \"60ce20b3-e1d4-405e-b256-fbc15778bd37\": \"./resources/sound/huo_jian_fa_she.mp3\",\n    \"00436054-5924-49ae-80a5-45fdf18ad5d6\": \"./resources/sound/ji_fen_yin_xiao.mp3\",\n    \"a91971a2-780c-4111-aa6a-f7b8d5e4ea3e\": \"./resources/sound/ji_guang_pao.mp3\",\n    \"23a0228e-17f7-4e06-8f19-8a066578f08f\": \"./resources/sound/ji_qiang1.mp3\",\n    \"b2e813aa-e29e-4342-9bcc-19ef1edc54ec\": \"./resources/sound/ji_qiang2.mp3\",\n    \"bc38dff1-da3b-4339-a4fb-8690144a7bff\": \"./resources/sound/ji_qiang3.mp3\",\n    \"caf67b9f-4c4e-4938-90e6-9a8c51a191fc\": \"./resources/sound/ji_qiang4.mp3\",\n    \"e5bd938e-a6b2-401e-951d-3e6ec80d0ff7\": \"./resources/sound/ji_qiang5.mp3\",\n    \"a7c6985c-3b59-49de-b559-40c1f1564db6\": \"./resources/sound/ji_qiang6.mp3\",\n    \"0675de16-7951-4d80-ba38-63b8feb9b2a1\": \"./resources/sound/ji_qiang7.mp3\",\n    \"71461f37-447a-4888-85b8-b2e588fce6e7\": \"./resources/sound/ji_qiang8.mp3\",\n    \"96f9f85b-bd87-4fa5-b1b9-8240f14ac4eb\": \"./resources/sound/jian_dao_fen_shu.mp3\",\n    \"70bbdde9-d486-4bc2-90e0-a8c7af97ae41\": \"./resources/sound/kan_dao.mp3\",\n    \"21c38d01-bfe3-42e3-8efb-cd0a8c61faa0\": \"./resources/sound/kong_zi_dan.mp3\",\n    \"aab9d84e-2069-4f49-a121-c8b64dc52e79\": \"./resources/sound/luo_shui.mp3\",\n    \"d7e49f6d-22a5-43b3-be52-d932cd55f0c7\": \"./resources/sound/ma_sheng_yin1.mp3\",\n    \"6d7efd66-f60d-4877-b925-616f38315c81\": \"./resources/sound/ma_sheng_yin2.mp3\",\n    \"ef50fb6e-2f96-4ec6-9904-9a34b85c26b6\": \"./resources/sound/mu_xiang_po_sui.mp3\",\n    \"e3deaadc-f5a4-4869-a011-fc932cb5d30a\": \"./resources/sound/op.mp3\",\n    \"b5d94dc8-a07e-42d2-b464-fea03b79340c\": \"./resources/sound/qia_che_cha_che.mp3\",\n    \"cfa5d072-9c4d-4a44-93c9-25fd62d61309\": \"./resources/sound/qia_che_kai_dong.mp3\",\n    \"9f25e94a-1146-41e3-95c0-c99c4082125c\": \"./resources/sound/qing_xing_qiang_jie1.mp3\",\n    \"68e72ccb-9e6b-475b-8dc9-cb4d03febca8\": \"./resources/sound/qing_xing_qiang_jie2.mp3\",\n    \"d554fe6f-d7b2-4e39-96e4-ad2d381b3626\": \"./resources/sound/qing_xing_qiang_jie3.mp3\",\n    \"73769868-e8fb-4cb9-88b3-5b049d783b6f\": \"./resources/sound/qing_xing_qiang_jie4.mp3\",\n    \"6bd765f7-c5cf-4501-9ccd-f53b0680bd1f\": \"./resources/sound/reng_shou_lei.mp3\",\n    \"edc78f33-856c-4578-8f1d-c74f3c6df9cd\": \"./resources/sound/shi_bing_shou_liang.mp3\",\n    \"13ee1ed9-4525-4a42-adc7-1bd6cd4a8ec3\": \"./resources/sound/shou_lei_bao_zha.mp3\",\n    \"4c0fca4c-f5b1-4a72-a2da-e672d3d1dd17\": \"./resources/sound/shou_qiang_shang_zi_dan.mp3\",\n    \"1ce5dd04-7251-4163-913f-3e15555185bf\": \"./resources/sound/tan_ke_she_ji.mp3\",\n    \"ef562280-0de4-4d7d-913b-f52bb6efb4f0\": \"./resources/sound/tan_ke_yun_xing.mp3\",\n    \"cef8102c-baf1-4573-8f8a-7eef5140fb11\": \"./resources/sound/teng_tiao.mp3\",\n    \"7c028552-b4aa-4d85-bbe3-5bfe4db4a81b\": \"./resources/sound/wen_chong1.mp3\",\n    \"4f9c0f60-474a-4556-81d8-f971cd623a85\": \"./resources/sound/wen_chong2.mp3\",\n    \"ce85cbaa-0a78-4374-8d2e-8a4aa1fae41c\": \"./resources/sound/xi_xie_cao_gong_ji.mp3\",\n    \"9e025219-615a-46be-bfdb-b07237e9805e\": \"./resources/sound/xiao_dao01.mp3\",\n    \"d7a9af53-c9e9-40ed-8efe-13f8191e44e2\": \"./resources/sound/xiao_dao02.mp3\",\n    \"1a5642f7-d86c-4069-bd3d-1cc6dc9dbdd6\": \"./resources/sound/xiao_dao03.mp3\",\n    \"c644ab44-e1f2-4db5-b6c5-2d8dca7859b9\": \"./resources/sound/xiao_dao04.mp3\",\n    \"0b2a09d8-081b-42c8-95c5-214faa5789f4\": \"./resources/sound/xiao_dao_chu_dao.mp3\",\n    \"8acfa13a-a57f-421f-a95d-211d97ee7f3e\": \"./resources/sound/xiao_gui_chang_lao_si_wang.mp3\",\n    \"5e46b8f8-c6fe-49f4-8523-003a3fbb7201\": \"./resources/sound/xiao_gui_chui_jian.mp3\",\n    \"2137eb51-7702-41a3-b3c2-ab98f2a81ac0\": \"./resources/sound/xiao_gui_gong_ji.mp3\",\n    \"fc667369-8869-4f52-a6c3-e9955b092e74\": \"./resources/sound/xiao_gui_si_wang.mp3\",\n    \"c18fb841-23a1-4af4-8f1a-64ba916a5725\": \"./resources/sound/xiao_gui_zhan_li.mp3\",\n    \"5e9f609d-a95f-433b-acc5-d32d36837f98\": \"./resources/sound/xiao_yin1.mp3\",\n    \"bd39a5c9-0e7d-47c3-b57c-3631fb82dc65\": \"./resources/sound/xiao_yin2.mp3\",\n    \"afba2962-98f0-4f31-924d-2f93937dfb7c\": \"./resources/sound/xiao_yin3.mp3\",\n    \"12279e82-9382-42b2-a883-4d4494cf5305\": \"./resources/sound/xiao_yin4.mp3\",\n    \"faef6d38-dbd9-4b3b-9b77-5f3d435299db\": \"./resources/sound/zha_lan_kai_qi.mp3\",\n    \"e9420ee6-2c99-4f1a-99f8-4accdc37eb96\": \"./resources/sound/zhi_sheng_fei_ji.mp3\",\n    \"90dbd414-a83e-4619-a8ab-e5633b0b59b0\": \"./resources/sound/zhong_dan1.mp3\",\n    \"212fe3f6-8663-4d50-9d8c-682f6e4c20d6\": \"./resources/sound/zhong_dan2.mp3\",\n    \"7e51dda1-06dd-4fd5-9181-27c3aa6b6be0\": \"./resources/sound/zhong_xing_qiang_jie1.mp3\",\n    \"75a96c1e-8a17-47c3-b67e-0ae4dd88f5bf\": \"./resources/sound/zhong_xing_qiang_jie2.mp3\",\n    \"7349f8cb-3f82-47a2-8007-0da7426ffee5\": \"./resources/sound/zhong_xing_qiang_jie3.mp3\",\n    \"aa662cf7-9fa7-49f2-97e1-15249ccbdc3c\": \"./resources/sound/zhong_xing_qiang_jie4.mp3\",\n    \"a424fbd2-991a-47cc-8c62-3892f6045a00\": \"./resources/sound/zhong_xing_qiang_jie5.mp3\",\n    \"5bbbc6aa-c77a-4f8a-a37f-3b3cfc8449c4\": \"./resources/sound/zhu_jiao_si_wang1.mp3\",\n    \"c9f8e421-20e1-4a76-acef-d0d0732ddcaa\": \"./resources/sound/zhu_jiao_si_wang2.mp3\",\n    \"c3d01c9f-06f6-487e-8b99-957723041898\": \"./resources/ui/gameOver_loss.prefab\",\n    \"b74a1d9b-be79-4ad6-bea4-dfdacb389997\": \"./resources/ui/gameOver_win.prefab\",\n    \"50bb7197-d7d8-4837-9de1-82e2b1dfa773\": \"./resources/ui/gamePause.prefab\",\n    \"4a1b3fc5-0aec-44a7-8b91-b55e0b8c17f2\": \"./resources/prefab/bomb/bomb1.prefab\",\n    \"6b129464-2a51-4763-9944-fe99e5971c72\": \"./resources/prefab/bomb/bomb2.prefab\",\n    \"fb6d40da-2dbc-448e-a5f3-6defca3a36ea\": \"./resources/prefab/bomb/bomb3.prefab\",\n    \"6fdceaf3-db4c-4eb6-ad92-3c8bec1edccf\": \"./resources/prefab/bullet/bullet1.prefab\",\n    \"9a4afb81-d4ae-4f99-94ae-2214e513646e\": \"./resources/prefab/bullet/bullet10.prefab\",\n    \"4481caf5-0fa1-4282-a9b2-95a1c9df9b8f\": \"./resources/prefab/bullet/bullet2.prefab\",\n    \"10c5b3ef-952e-4497-8710-2080fcac9c16\": \"./resources/prefab/bullet/bullet3.prefab\",\n    \"c29ee5ce-f9d5-4635-84e8-206eeb97b576\": \"./resources/prefab/bullet/bullet4.prefab\",\n    \"a8e86f80-c28a-47c9-bb3e-cc114500cb66\": \"./resources/prefab/bullet/bullet5.prefab\",\n    \"5f8934bd-e457-43bc-b6ce-3c1e1e43272c\": \"./resources/prefab/bullet/bullet6.prefab\",\n    \"b05cc512-0023-438b-affc-5efb61fa6d67\": \"./resources/prefab/bullet/bullet7.prefab\",\n    \"c8a124bf-5a70-4b51-8584-2ff1e9090cf1\": \"./resources/prefab/bullet/bullet8.prefab\",\n    \"924daa2a-c30d-460e-870f-7d167f76f0e1\": \"./resources/prefab/bullet/bullet9.prefab\",\n    \"b30db9cc-97bb-4978-bfbf-c678f6a4e7f4\": \"./resources/prefab/eff/fire.prefab\",\n    \"7f96de80-6290-4af2-972f-66a96eff7815\": \"./resources/prefab/enemy/bl_man.prefab\",\n    \"46d88b77-fd4e-46b9-9c83-5a87b7ed85b5\": \"./resources/prefab/enemy/bl_woman.prefab\",\n    \"1a12f395-f854-449d-a9b7-84b9af33ff5d\": \"./resources/prefab/enemy/de_bu.prefab\",\n    \"10617c07-9c0a-4077-9017-5e23cd66e265\": \"./resources/prefab/enemy/de_jun.prefab\",\n    \"b908855b-451b-4a35-8626-9be644c51c1a\": \"./resources/prefab/enemy/de_pao.prefab\",\n    \"c39cd3c7-3c5c-4c11-bd5a-c7878a568168\": \"./resources/prefab/enemy/hanjian.prefab\",\n    \"3bf4636a-ac47-4981-b30c-a8a09b945604\": \"./resources/prefab/enemy/rb_bu.prefab\",\n    \"e224540e-9273-4521-962d-518e27c94db5\": \"./resources/prefab/enemy/rb_qi.prefab\",\n    \"735f3df8-c7e1-45ac-b398-4cd945525615\": \"./resources/prefab/enemy/rb_quan.prefab\",\n    \"79c2a587-a61b-4ef0-93d5-cc2b4bf7699b\": \"./resources/prefab/enemy/rb_wu.prefab\",\n    \"96251dca-50dd-4c6d-a462-4c3fc223c48b\": \"./resources/prefab/enemy/rb_zu.prefab\",\n    \"7941fe60-bb88-4551-b05b-705ded65b9aa\": \"./resources/prefab/ta/factoryBox-en.prefab\",\n    \"ae822c9f-5d0d-4ab1-9b37-555aee7abd8c\": \"./resources/prefab/ta/factoryBox-my.prefab\",\n    \"58994d51-c7af-4fcb-8186-89e81c5e8973\": \"./resources/prefab/you/y_bu.prefab\",\n    \"af435d6b-8897-4054-8163-b30288b37dc6\": \"./resources/spine/bl/bl_man.atlas\",\n    \"d28e0554-cd1e-4a9f-808c-d5e47e6884fc\": \"./resources/spine/bl/bl_man.json\",\n    \"2aeeee88-9d07-4d71-967e-ca6ff2f9d42a\": \"./resources/spine/bl/bl_man.png\",\n    \"b8c260e8-1108-434e-a19f-e3d8abf4d08a\": \"./resources/spine/bl/bl_woman.atlas\",\n    \"ad8bb846-4d36-48fc-b7bb-43e2a9f2000e\": \"./resources/spine/bl/bl_woman.json\",\n    \"a06a81e2-0c87-44e3-922a-65ed73992dad\": \"./resources/spine/bl/bl_woman.png\",\n    \"d2b78e13-308b-4ba5-90b1-524f5d4f8d5a\": \"./resources/spine/de/de_bu.atlas\",\n    \"e76a360a-16cc-41e1-b156-80579989b315\": \"./resources/spine/de/de_bu.json\",\n    \"b318b1f8-4379-4bca-a42d-08d9a43e5996\": \"./resources/spine/de/de_bu.png\",\n    \"fb077dee-7461-4727-953e-a7f934db8cd8\": \"./resources/spine/de/de_bubing.atlas\",\n    \"62ccc97a-0ed0-4912-a063-532c0854a359\": \"./resources/spine/de/de_bubing.json\",\n    \"d778568d-148b-4e0b-8d21-758705a4e1ac\": \"./resources/spine/de/de_bubing.png\",\n    \"ee90971f-2c1d-4cb2-9795-5c94c19c6916\": \"./resources/spine/de/de_jun.atlas\",\n    \"9af5ef60-fc6d-4245-a87d-01f482587470\": \"./resources/spine/de/de_jun.json\",\n    \"6cba3c31-1ee9-4041-9d93-9a8aa25d3591\": \"./resources/spine/de/de_jun.png\",\n    \"ee880050-75b2-4203-933d-03579f54a416\": \"./resources/spine/de/de_pao.atlas\",\n    \"d9609912-b99d-4472-ad90-705944fe5781\": \"./resources/spine/de/de_pao.json\",\n    \"0ae7f48f-7b94-4a8a-b663-f4daa5a8f24c\": \"./resources/spine/de/de_pao.png\",\n    \"784aab60-1595-4fe4-8c67-623eca92cd5e\": \"./resources/spine/hero/hero.atlas\",\n    \"e3f712fe-b9a8-4c6f-b78a-7a1818ca1dc6\": \"./resources/spine/hero/hero.json\",\n    \"7b3bf0b7-b05f-48fe-b8e0-58088860455a\": \"./resources/spine/hero/hero.png\",\n    \"3d12b588-94ae-4005-91a8-f8a4823544e8\": \"./resources/spine/hero/zhujue.atlas\",\n    \"90603e77-1a6a-4075-a5d0-9c262e2992bc\": \"./resources/spine/hero/zhujue.json\",\n    \"47428093-6708-414b-bd16-9a9709ff7a98\": \"./resources/spine/hero/zhujue.png\",\n    \"c17e2eca-6072-4af0-9f4e-e8fd089a3d1d\": \"./resources/spine/rb/hanjian.atlas\",\n    \"b2179323-b8b2-4aea-ba9e-2938db071b72\": \"./resources/spine/rb/hanjian.json\",\n    \"6213aa0b-5d14-4413-89f7-33f46fcbec44\": \"./resources/spine/rb/hanjian.png\",\n    \"30f6433a-b584-4f8a-9ed8-b3af0cbe26b5\": \"./resources/spine/rb/rb_bu.atlas\",\n    \"9bfd3f2e-a7dd-4ce6-b516-294820c72f6b\": \"./resources/spine/rb/rb_bu.json\",\n    \"8469bf2e-700c-46f6-ba02-29205890033f\": \"./resources/spine/rb/rb_bu.png\",\n    \"9a0754c7-f627-45a2-8d5b-1e2d24770705\": \"./resources/spine/rb/rb_qi.atlas\",\n    \"9f341c3c-f148-4e75-9061-a57f89b97535\": \"./resources/spine/rb/rb_qi.json\",\n    \"181f2173-ea11-4515-86ef-a18b99c7effb\": \"./resources/spine/rb/rb_qi.png\",\n    \"7e0ddc9c-6538-4924-be43-7ff9a24d8939\": \"./resources/spine/rb/rb_quan.atlas\",\n    \"c9bef81a-cf66-4835-b27d-c428fe0b9534\": \"./resources/spine/rb/rb_quan.json\",\n    \"54fb58de-2046-4b43-94e7-f2e94d2bf375\": \"./resources/spine/rb/rb_quan.png\",\n    \"090f4474-8326-4ee1-9ab3-3b61e3edd720\": \"./resources/spine/rb/rb_wu.atlas\",\n    \"440b6d6a-696a-436a-b835-e76f93897ba0\": \"./resources/spine/rb/rb_wu.json\",\n    \"afd47a59-cfd7-4538-a7c2-8c0d835f6103\": \"./resources/spine/rb/rb_wu.png\",\n    \"27005419-26ee-4d0e-b800-71655458fc98\": \"./resources/spine/rb/rb_zu.atlas\",\n    \"9fc247b8-f7af-4c76-91c7-798e4980d468\": \"./resources/spine/rb/rb_zu.json\",\n    \"ba601b5a-a671-4923-86c7-b95bd4bead22\": \"./resources/spine/rb/rb_zu.png\",\n    \"9b0bb07f-21ee-462f-bd16-27d3e7503a03\": \"./resources/spine/you/y_bu.atlas\",\n    \"9be7b5e4-2032-4cb3-990e-102e32d4dc47\": \"./resources/spine/you/y_bu.json\",\n    \"b8a607e2-d40d-406a-abff-33fe820c3522\": \"./resources/spine/you/y_bu.png\",\n    \"f63c0b96-6717-4c63-bbd4-a87efcfeafa2\": \"./resources/spine/you/y_motuo.atlas\",\n    \"94d5569c-5c26-48f2-9ab8-837feb93972e\": \"./resources/spine/you/y_motuo.json\",\n    \"f91294bd-8ac0-4d46-bae6-1bf7b3440453\": \"./resources/spine/you/y_motuo.png\",\n    \"17d00811-a977-43e5-b274-aa5fe9c34fa2\": \"./resources/spine/you/y_pao.atlas\",\n    \"0a2dd1d7-fcef-455a-9058-867c7aeecdf8\": \"./resources/spine/you/y_pao.json\",\n    \"9b2d9fda-3564-4310-88f5-369c25356f8e\": \"./resources/spine/you/y_pao.png\",\n    \"beb80f1b-7edd-4cbc-b80e-dcf3a9387b88\": \"./resources/spine/you/y_qi.atlas\",\n    \"74242578-1c17-48d2-9751-6352836deaea\": \"./resources/spine/you/y_qi.json\",\n    \"5cd22f2d-1bc4-4194-be95-a5cf80543187\": \"./resources/spine/you/y_qi.png\",\n    \"d6a74371-7ebf-4940-8a5c-6d28e20469d5\": \"./resources/spine/you/y_tan.atlas\",\n    \"c3d3ee02-2adb-4f93-927a-bfa2b6f31f6d\": \"./resources/spine/you/y_tan.json\",\n    \"8196b422-d426-40e3-86b5-af8093f95558\": \"./resources/spine/you/y_tan.png\",\n    \"ba6c7efe-15de-49c4-adb6-daf8c1ceabc5\": \"./resources/texture/effects/dissolve.effect\",\n    \"4cd24669-e56c-45c7-bd29-b7f868a4666f\": \"./resources/texture/materials/dissolve.mtl\"\n}","cc.Class({\r\n    extends: cc.Component,\r\n    //根据子节点的占用空间 重新设计宽高\r\n    properties: {\r\n        childNode: cc.Node\r\n    },\r\n    onLoad() {\r\n        this.node.width = this.childNode.width;\r\n        this.node.height = this.childNode.height;\r\n    },\r\n    start() {\r\n    },\r\n    onDestroy() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        //     tooltip: \"描述tips\"\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //当该组件被启用，并且它的节点也激活时。\r\n    // onEnable() {\r\n    // },\r\n    // //当该组件被禁用或节点变为无效时调用。\r\n    // onDisable() {\r\n    // },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        //     tooltip: \"描述tips\"\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //当该组件被启用，并且它的节点也激活时。\r\n    // onEnable() {\r\n    // },\r\n    // //当该组件被禁用或节点变为无效时调用。\r\n    // onDisable() {\r\n    // },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        //     tooltip: \"描述tips\"\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //当该组件被启用，并且它的节点也激活时。\r\n    // onEnable() {\r\n    // },\r\n    // //当该组件被禁用或节点变为无效时调用。\r\n    // onDisable() {\r\n    // },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        //     tooltip: \"描述tips\"\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //当该组件被启用，并且它的节点也激活时。\r\n    // onEnable() {\r\n    // },\r\n    // //当该组件被禁用或节点变为无效时调用。\r\n    // onDisable() {\r\n    // },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        //     tooltip: \"描述tips\"\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //当该组件被启用，并且它的节点也激活时。\r\n    // onEnable() {\r\n    // },\r\n    // //当该组件被禁用或节点变为无效时调用。\r\n    // onDisable() {\r\n    // },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        //     tooltip: \"描述tips\"\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //当该组件被启用，并且它的节点也激活时。\r\n    // onEnable() {\r\n    // },\r\n    // //当该组件被禁用或节点变为无效时调用。\r\n    // onDisable() {\r\n    // },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        //     tooltip: \"描述tips\"\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //当该组件被启用，并且它的节点也激活时。\r\n    // onEnable() {\r\n    // },\r\n    // //当该组件被禁用或节点变为无效时调用。\r\n    // onDisable() {\r\n    // },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    start() {\r\n    },\r\n    // update (dt) {},\r\n});\r\n","module.exports = {\r\n    hp: 2500, //初始血量\r\n    \"1\": {\r\n        name: \"weapons1\", //武器皮肤名称\r\n        rotation: 20,\r\n        sendTime: 0.3,//子弹发射时间\r\n        attackId: 1,//攻击动作id\r\n        attack: 13,//攻击力\r\n        bid: 1,\r\n        aimY: 0\r\n    },//手枪\r\n    \"2\": {\r\n        name: \"weapons2\",\r\n        rotation: 22,\r\n        sendTime: 0.6,\r\n        attackId: 2,\r\n        attack: 20,\r\n        bid: 1,\r\n        aimY: 0\r\n    },//来福枪\r\n    \"3\": {\r\n        name: \"weapons3\",\r\n        rotation: 25,\r\n        sendTime: 0.6,\r\n        attackId: 2,\r\n        attack: 28, //\r\n        bid: 1,\r\n        aimY: -50\r\n    },//闪电枪\r\n    \"4\": {\r\n        name: \"weapons4\",\r\n        rotation: 25,\r\n        sendTime: 0.6, //子弹发射时间\r\n        attackId: 2,   //攻击动作id\r\n        attack: 37,  //攻击力\r\n        bid: 1,       //子弹id\r\n        aimY: 0\r\n    }//火箭筒\r\n};"],"file":"index.js"}