{"version":3,"sources":["assets\\Script\\enemy\\enemySpine.js"],"names":["PoolComponent","require","cc","Class","properties","onDestroy","unuse","parent","off","setRoleState","node","death","game","gameOver","shoot_start","shoot_end","collision_shoot_start","reuse","data","shootIng","getComponent","Collider","enabled","isDeath","on","attack","y","zy","sp","timeScale","value","update","changeAction","onLoad","Skeleton","spine","setStartListener","trackEntry","animationName","animation","name","emit","bind","setCompleteListener","pool","put","removeFromParent","destroy","setAnimation","curAction","setMix","anim1","anim2","mixTime","pos","targetPos","roleState","self"],"mappings":"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","sourceRoot":"/","sourcesContent":["let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    //骨骼动画精灵组件\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    onDestroy() {\r\n    },\r\n    unuse: function () {\r\n        //this.clearTracks();\r\n        this.parent.off(\"roleState\", this.setRoleState, this);\r\n        this.parent.off(\"attack\", this.setRoleState, this);\r\n        this.node.off(\"death\", this.death, this);\r\n        game.off(\"gameOver\", this.gameOver, this);\r\n        this.node.off(\"shoot_start\", this.shoot_start, this);\r\n        this.node.off(\"shoot_end\", this.shoot_end, this);\r\n        this.node.off(\"collision_shoot_start\", this.collision_shoot_start, this);\r\n        this.node.off(\"collision_shoot_end\", this.shoot_end, this);\r\n    },\r\n    reuse: function (data) {\r\n        this.shootIng = false;\r\n        if (!this.parent) this.parent = this.node.parent;\r\n        this.node.getComponent(cc.Collider).enabled = true;\r\n        this.parent.isDeath = this.node.isDeath = false;\r\n        this.parent.on(\"roleState\", this.setRoleState, this);\r\n        this.parent.on(\"attack\", this.attack, this);\r\n        this.node.on(\"death\", this.death, this);\r\n        this.node.on(\"shoot_start\", this.shoot_start, this);\r\n        this.node.on(\"collision_shoot_start\", this.collision_shoot_start, this);\r\n        this.node.on(\"collision_shoot_end\", this.shoot_end, this);\r\n        this.node.on(\"shoot_end\", this.shoot_end, this);\r\n        game.on(\"gameOver\", this.gameOver, this);\r\n        this.node.y = data.zy;\r\n    },\r\n    shoot_end() {\r\n        this.sp.timeScale = 1;\r\n    },\r\n    shoot_start() {\r\n        this.sp.timeScale = 0.5;\r\n    },\r\n    collision_shoot_start(value) {\r\n        value = value || 0.1;\r\n        this.sp.timeScale = 0.1;\r\n    },\r\n    update() {\r\n        if (this.sp.timeScale < 1)\r\n            this.sp.timeScale += 0.02\r\n    },\r\n    gameOver() {\r\n        this.changeAction(\"idle\");\r\n    },\r\n    //死亡\r\n    death() {\r\n        this.changeAction(\"death\");\r\n        this.parent.isDeath = this.node.isDeath = true;\r\n        this.node.getComponent(cc.Collider).enabled = false;\r\n    },\r\n    onLoad() {\r\n        if (!this.parent) this.parent = this.node.parent;\r\n        this.sp = this.getComponent(sp.Skeleton); //获取骨骼动画组件\r\n        // this.sp_skeleton_data = this.sp._skeleton.data;\r\n        // this.sp_state = this.sp.getState();\r\n        // this.sp_state_data = this.sp_state.data;\r\n        // this.sp_state_data.defaultMix = 0.3;\r\n        //  this.setMix('run', 'attack', 0.1);\r\n        //  this.setMix('idle', 'attack', 0.1); //移动射击\r\n        let spine = this.sp;\r\n        this.shootIng = false;\r\n        spine.setStartListener(function (trackEntry) {\r\n            let animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            if (animationName == \"attack\") {\r\n                this.shootIng = true;\r\n                this.node.emit(\"shoot_start\");\r\n            }\r\n        }.bind(this));\r\n        spine.setCompleteListener(function (trackEntry) {\r\n            let animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            if (animationName === 'death') {\r\n                // this.parent.removeFromParent();\r\n                var pool = this.parent.pool;\r\n                if (pool) {\r\n                    pool.put(this.parent);\r\n                }\r\n                else {\r\n                    this.parent.removeFromParent(true);\r\n                    this.parent.destroy();\r\n                }\r\n            }\r\n            if (animationName === \"attack\") {\r\n                //this.node.emit(\"attackShoot\", 2);\r\n                this.shootIng = false;\r\n                this.node.emit(\"shoot_end\");\r\n                this.sp.setAnimation(0, this.curAction, true);\r\n            }\r\n        }.bind(this));\r\n    },\r\n    //setMix 为所有关键帧设定混合及混合时间（从当前值开始差值）。\r\n    setMix(anim1, anim2, mixTime) {\r\n        // this.sp.setMix(anim1, anim2, mixTime);\r\n        // this.sp.setMix(anim2, anim1, mixTime);\r\n    },\r\n    attack(pos) {\r\n        this.targetPos = pos;//目标位置\r\n        this.changeAction(\"attack\");\r\n    },\r\n    setRoleState(value) {\r\n        this.roleState = value;//角色状态  0=静止 1=移动 2=跳跃\r\n        switch (value) {\r\n            case 0: //静止\r\n                this.changeAction(\"idle\");\r\n                break;\r\n            case 1://移动\r\n                this.changeAction(\"run\");\r\n                break;\r\n            case 2: //跳跃\r\n                //  this.changeAction(\"jump\");\r\n                break;\r\n        }\r\n    },\r\n    changeAction(value) {\r\n        if (!this.node) return;\r\n        if (this.node.isDeath) return;\r\n        if (this.sp.animation == value) return;\r\n        let self = this;\r\n        switch (value) {\r\n            case \"death\":\r\n                this.sp.timeScale = 1;\r\n                this.sp.setAnimation(0, \"death\", false);\r\n                break;\r\n            case \"run\":\r\n                this.sp.timeScale = 1;\r\n                this.sp.setAnimation(0, \"run\", true);\r\n                this.curAction = \"run\";\r\n                break;\r\n            case \"idle\":\r\n                this.sp.timeScale = 1;\r\n                this.curAction = \"idle\";\r\n                if (!this.shootIng)\r\n                    this.sp.setAnimation(0, \"idle\", true);\r\n                break;\r\n            case \"attack\":\r\n                this.sp.setAnimation(0, \"attack\", false);\r\n                // this.sp.setTrackEventListener(entry, function (trackIndex, event) {\r\n                //     //   console.log(\"TrackEventListener :\", event.data.name, Date.now());\r\n                //     // let weapon = this.sp.findBone(\"root_qiang\");\r\n                //     // let weaponPos = cc.v2(weapon.worldX, weapon.worldY);\r\n                //     // let worldPos = this.node.convertToWorldSpaceAR(weaponPos);\r\n                //     // let rotation = gameUtils.getRotation(worldPos, this.targetPos);\r\n                //     //self.node.emit(\"attack\", 1, worldPos, 180, \"enbull\");\r\n                //     this.node.emit(\"attackShoot\", 3);\r\n                // }.bind(this));\r\n                break;\r\n        }\r\n    }\r\n});\r\n"]}