{"version":3,"sources":["assets\\Script\\enemy\\enemyFind.js"],"names":["PoolComponent","require","cc","Class","properties","onEnable","onDisable","onDestroy","unuse","reuse","data","node","x","Math","random","findX","onLoad","parent","onCollisionEnter","other","self","game","isOver","emit","onCollisionStay","onCollisionExit"],"mappings":";;;;;;AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA3B,EAA8C;;;AAC9CC,EAAE,CAACC,KAAH,CAAS;AACL,aAASH,aADJ;AAELI,EAAAA,UAAU,EAAE,EAFP;AAGLC,EAAAA,QAHK,sBAGM,CACV,CAJI;AAKL;AACAC,EAAAA,SANK,uBAMO,CACX,CAPI;AAQL;AACAC,EAAAA,SATK,uBASO,CACX,CAVI;AAWLC,EAAAA,KAAK,EAAE,iBAAY,CAClB,CAZI;AAaLC,EAAAA,KAAK,EAAE,eAAUC,IAAV,EAAgB;AACnB,SAAKC,IAAL,CAAUC,CAAV,GAAY,KAAKA,CAAL,GAAOC,IAAI,CAACC,MAAL,KAAcJ,IAAI,CAACK,KAAtC;AACH,GAfI;AAgBLC,EAAAA,MAhBK,oBAgBI;AACL,SAAKC,MAAL,GAAc,KAAKN,IAAL,CAAUM,MAAV,CAAiBA,MAA/B;AACA,SAAKL,CAAL,GAAS,KAAKD,IAAL,CAAUC,CAAnB;AACH,GAnBI;AAoBL;AACAM,EAAAA,gBAAgB,EAAE,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrC,QAAIC,IAAI,CAACC,MAAT,EAAiB;AACjB,SAAKL,MAAL,CAAYM,IAAZ,CAAiB,kBAAjB,EAAqCJ,KAArC,EAA4CC,IAA5C;AACH,GAxBI;AAyBL;AACAI,EAAAA,eAAe,EAAE,yBAAUL,KAAV,EAAiBC,IAAjB,EAAuB,CACvC,CA3BI;AA4BL;AACAK,EAAAA,eAAe,EAAE,yBAAUN,KAAV,EAAiBC,IAAjB,EAAuB;AACpC,QAAIC,IAAI,CAACC,MAAT,EAAiB;AACjB,SAAKL,MAAL,CAAYM,IAAZ,CAAiB,iBAAjB,EAAoCJ,KAApC,EAA2CC,IAA3C;AACH;AAhCI,CAAT","sourceRoot":"/","sourcesContent":["let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {},\r\n    onEnable() {\r\n    },\r\n    //当该组件被禁用或节点变为无效时调用。\r\n    onDisable() {\r\n    },\r\n    //该方法为生命周期方法，父类未必会有实现。\r\n    onDestroy() {\r\n    },\r\n    unuse: function () {\r\n    },\r\n    reuse: function (data) {\r\n        this.node.x=this.x-Math.random()*data.findX;\r\n    },\r\n    onLoad() {\r\n        this.parent = this.node.parent.parent;\r\n        this.x = this.node.x;\r\n    },\r\n    //碰撞进入\r\n    onCollisionEnter: function (other, self) {\r\n        if (game.isOver) return;\r\n        this.parent.emit(\"onCollisionEnter\", other, self)\r\n    },\r\n    //碰撞停留\r\n    onCollisionStay: function (other, self) {\r\n    },\r\n    //碰撞退出\r\n    onCollisionExit: function (other, self) {\r\n        if (game.isOver) return;\r\n        this.parent.emit(\"onCollisionExit\", other, self)\r\n    }\r\n});\r\n"]}