{"version":3,"sources":["assets\\Script\\pool\\NodePool.js"],"names":["module","exports","cc","Class","name","properties","prefab","Prefab","ctor","nodePool","NodePool","getNode","data","parent","node","size","get","instantiate","pool","addChild","poolComponents","getComponentsInChildren","i","poolComponent","reuse","put","removeFromParent","unuse"],"mappings":";;;;;;AAAAA,MAAM,CAACC,OAAP,GAAiBC,EAAE,CAACC,KAAH,CAAS;AACtBC,EAAAA,IAAI,EAAE,UADgB;AAEtBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAEJ,EAAE,CAACK;AADH,GAFU;AAKtBC,EAAAA,IALsB,kBAKf;AACH,SAAKC,QAAL,GAAgB,IAAIP,EAAE,CAACQ,QAAP,EAAhB;AACH,GAPqB;AAQtB;AACAC,EAAAA,OAAO,EAAE,iBAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC7B,QAAIC,IAAI,GAAG,IAAX;;AACA,QAAI,KAAKL,QAAL,CAAcM,IAAd,KAAuB,CAA3B,EAA8B;AAAE;AAC5BD,MAAAA,IAAI,GAAG,KAAKL,QAAL,CAAcO,GAAd,EAAP;AACH,KAFD,MAEO;AAAE;AACLF,MAAAA,IAAI,GAAGZ,EAAE,CAACe,WAAH,CAAe,KAAKX,MAApB,CAAP;AACAQ,MAAAA,IAAI,CAACI,IAAL,GAAY,IAAZ;AACH;;AACD,QAAIL,MAAJ,EAAYA,MAAM,CAACM,QAAP,CAAgBL,IAAhB;AACZ,QAAIM,cAAc,GAAGN,IAAI,CAACO,uBAAL,CAA6B,eAA7B,CAArB;;AACA,SAAK,IAAIC,CAAT,IAAcF,cAAd,EAA8B;AAC1B,UAAIG,aAAa,GAAGH,cAAc,CAACE,CAAD,CAAlC;AACAC,MAAAA,aAAa,CAACC,KAAd,CAAoBZ,IAApB,EAF0B,CAEC;AAC9B;;AACD,WAAOE,IAAP;AACH,GAxBqB;AAyBtBW,EAAAA,GAAG,EAAE,aAAUX,IAAV,EAAgB;AACjBA,IAAAA,IAAI,CAACY,gBAAL;AACA,SAAKjB,QAAL,CAAcgB,GAAd,CAAkBX,IAAlB,EAFiB,CAEQ;;AACzB,QAAIM,cAAc,GAAGN,IAAI,CAACO,uBAAL,CAA6B,eAA7B,CAArB;;AACA,SAAK,IAAIC,CAAT,IAAcF,cAAd,EAA8B;AAC1B,UAAIG,aAAa,GAAGH,cAAc,CAACE,CAAD,CAAlC;AACAC,MAAAA,aAAa,CAACI,KAAd,GAF0B,CAEH;AAC1B;AACJ;AAjCqB,CAAT,CAAjB","sourceRoot":"/","sourcesContent":["module.exports = cc.Class({\r\n    name: 'NodePool',\r\n    properties: {\r\n        prefab: cc.Prefab\r\n    },\r\n    ctor() {\r\n        this.nodePool = new cc.NodePool();\r\n    },\r\n    //获取一个节点\r\n    getNode: function (data, parent) {\r\n        let node = null;\r\n        if (this.nodePool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\r\n            node = this.nodePool.get();\r\n        } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\r\n            node = cc.instantiate(this.prefab);\r\n            node.pool = this;\r\n        }\r\n        if (parent) parent.addChild(node);\r\n        let poolComponents = node.getComponentsInChildren(\"PoolComponent\");\r\n        for (let i in poolComponents) {\r\n            let poolComponent = poolComponents[i];\r\n            poolComponent.reuse(data); //启用\r\n        }\r\n        return node;\r\n    },\r\n    put: function (node) {\r\n        node.removeFromParent();\r\n        this.nodePool.put(node); // 通过之前传入的管理类实例回收子弹\r\n        let poolComponents = node.getComponentsInChildren(\"PoolComponent\");\r\n        for (let i in poolComponents) {\r\n            let poolComponent = poolComponents[i];\r\n            poolComponent.unuse(); //启用\r\n        }\r\n    }\r\n});"]}