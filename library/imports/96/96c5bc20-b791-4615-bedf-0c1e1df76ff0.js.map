{"version":3,"sources":["assets\\Script\\bullet\\bullet6.js"],"names":["PoolComponent","require","cc","Class","properties","speed","range","onLoad","start","unuse","reuse","data","game","soundManager","playEffect","gameSound","gong_fu_bo_dong_quan","init","state","idx","curRange","group","node","angle","hd","Math","PI","speedX","cos","width","speedY","sin","x","v","y","animation","getComponent","Animation","_isInit","spriteFrames","gameUtils","getSpriteFrames","bullet_atlas","prefabName","readyClip","AnimationClip","createWithSpriteFrames","name","wrapMode","WrapMode","Loop","addClip","play","playAdditive","end","pool","put","removeFromParent","destroy","curPos","v2","emit","aniName","onDestroy","onCollisionEnter","other","self","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        speed: 1000,\r\n        range: 1000\r\n    },\r\n    onLoad() {\r\n    },\r\n    start() {\r\n    },\r\n\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.gong_fu_bo_dong_quan,false);\r\n        this.init(data);\r\n    },\r\n\r\n    init(data) {\r\n\r\n        this.state = \"ready\";\r\n        this.idx = 0;\r\n        this.curRange = this.range;\r\n        //game.emit(\"shootFire\", \"fire\", \"eff1\", v, angle);//开火动画\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        this.speedX = Math.cos(hd) * this.speed;\r\n        this.speedY = Math.sin(hd) * this.speed;\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isInit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, data.prefabName);\r\n            let readyClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            readyClip.name = 'move';\r\n            readyClip.wrapMode = cc.WrapMode.Loop;\r\n            animation.addClip(readyClip);\r\n            animation.play(\"move\");\r\n            this._isInit = true;\r\n        }\r\n        else {\r\n            animation.playAdditive('move', 0);\r\n        }\r\n        this.state = \"move\";\r\n    },\r\n    end() {\r\n        if (this.state == \"end\") return;\r\n        this.state = \"end\";\r\n        var pool = this.node.pool;\r\n        if (pool) {\r\n            pool.put(this.node);\r\n        }\r\n        else {\r\n            this.node.removeFromParent(true);\r\n            this.node.destroy();\r\n        }\r\n        var curPos = cc.v2(this.node.x, this.node.y);\r\n        var angle = this.node.angle;\r\n\r\n        //\r\n        // this.data = _.assign(this.data, {\r\n        //     aniName: \"bomb1\",//预制体名称\r\n        //     v: cc.v2(this.node.x, this.node.y), //位置\r\n        //     angle: 0,//角度\r\n        //     group: this.node.group //组\r\n        // });\r\n        // game.emit(\"bomb1\", this.data);//爆炸\r\n\r\n\r\n        //game.emit(\"shootFire\", \"fire\", \"eff2\", curPos, angle);//开火动画\r\n        game.emit(\"shootFire\", {aniName: \"eff2\",v: curPos, angle: angle});//开火动画\r\n\r\n\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onCollisionEnter: function (other, self) {\r\n        this.end();\r\n    },\r\n    update(dt) {\r\n        if (this.state != \"move\") {\r\n            return;\r\n        }\r\n        this.idx++;\r\n        this.curRange -= this.speed * dt;\r\n        if (this.curRange <= 0) {\r\n            this.end();\r\n            return;\r\n        }\r\n        this.node.x += this.speedX * dt;\r\n        this.node.y += this.speedY * dt;\r\n    },\r\n});\r\n"]}