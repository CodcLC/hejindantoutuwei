{"version":3,"sources":["assets\\Script\\game\\gameUtils.js"],"names":["module","exports","getRotation","start","end","angle","Math","atan2","y","x","PI","rotation","standardRotation","limitRotation","a","abs","b","getNextPos","pos","len","cos","sin","cc","v2","getLength","p1","p2","sqrt","pow","getSpriteFrames","atlas","textName","frames","i","frameName","jm","sprintf","frame","getSpriteFrame","push"],"mappings":"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","sourceRoot":"/","sourcesContent":["module.exports = {\r\n//获取两点之间的角\r\n    getRotation: function (start, end) {\r\n        //算好初始位置和初始角度\r\n        var angle = Math.atan2(end.y - start.y, end.x - start.x);\r\n        if (angle < 0)\r\n            angle = angle + Math.PI * 2;\r\n        else if (angle > Math.PI * 2)\r\n            angle = angle - Math.PI * 2;\r\n        //var rotation = 360.0-angle * 180.0 / Math.PI;//原图的初始角度是向右用360- 向左则用180-\r\n        var rotation = angle * 180.0 / Math.PI;//原图的初始角度是向右用360- 向左则用180-\r\n        return rotation;\r\n    },\r\n    standardRotation: function (rotation) {\r\n        while (rotation > 180) {\r\n            rotation = rotation - 360;\r\n        }\r\n        while (rotation < -180) {\r\n            rotation = rotation + 360;\r\n        }\r\n        return rotation;\r\n    },\r\n    limitRotation: function (rotation, start, end) {\r\n        var a = Math.abs(rotation - start);\r\n        var b = Math.abs(end - rotation);\r\n        return a < 180 && b < 180;\r\n    },\r\n    getNextPos: function (pos, len, rotation) {\r\n        var angle = rotation * Math.PI / 180;\r\n        var x = pos.x + Math.cos(angle) * len;\r\n        var y = pos.x + Math.sin(angle) * len;\r\n        return cc.v2(x, y);\r\n    },\r\n    getLength: function (p1, p2) {\r\n        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n    },\r\n    getSpriteFrames: function (atlas, textName) {\r\n        textName = textName + \"_\"\r\n        var frames = [];\r\n        var i = 0;\r\n        while (true) {\r\n            var frameName = jm.sprintf('%s%d', textName, i);\r\n            var frame = atlas.getSpriteFrame(frameName);\r\n            if (!frame) {\r\n                frameName = jm.sprintf('%s%02d', textName, i);\r\n                frame = atlas.getSpriteFrame(frameName);\r\n            }\r\n            if (frame) {\r\n                frames.push(frame);\r\n            }\r\n            else if (i > 1) {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        return frames;\r\n    },\r\n}\r\n"]}