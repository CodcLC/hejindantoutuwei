{"version":3,"sources":["assets\\Script\\zhujie\\roleSpine.js"],"names":["cc","Class","Component","properties","onDestroy","parent","off","setRoleState","changeDirection","switchSkin","game","stageTouch","gameOver","node","aimPos","addEvent","on","onLoad","animationName","roleState","scaleX","Math","abs","sp","getComponent","Skeleton","sp_skeleton_data","_skeleton","data","animations","i","animation","name","trackIndex","parseInt","duration","idle","trackIndex2","action","changeAction","setMix","ia1","attack1","ia2","attack2","weaponData","require","weaponIndex","setTimeout","init","bind","value","gameAction","clearTrack","addAnimation","run","jump","attack","weapon","attackId","arm","findBone","armPos","v2","worldX","worldY","armRotation","gameUtils","standardRotation","rotation","rotationLimit","rotationLimit1","rotationLimit2","sendTime","self","spine","setStartListener","trackEntry","setCompleteListener","_isinit","pos","isOver","p","convertToWorldSpaceAR","getRotation","limitRotation","y","aimY","idx","emit","setSkin","weaponPos","anim1","anim2","mixTime","start","update","dt","touchDown","bulletName","shootData","prefabName","v","angle","group"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n    //角色类\r\n    properties: {},\r\n    onDestroy() {\r\n        if (!this.parent) return;\r\n        this.parent.off(\"roleState\", this.setRoleState, this);\r\n        this.parent.off(\"changeDirection\", this.changeDirection, this);\r\n        this.parent.off(\"switchSkin\", this.switchSkin, this);\r\n        game.off(\"stage.touch\", this.stageTouch, this);\r\n        game.off(\"gameOver\", this.gameOver, this);\r\n        this.node.off(\"aimPos\", this.aimPos, this);\r\n    },\r\n    addEvent() {\r\n        this.parent.on(\"roleState\", this.setRoleState, this);\r\n        this.parent.on(\"changeDirection\", this.changeDirection, this);\r\n        this.parent.on(\"switchSkin\", this.switchSkin, this);\r\n        game.on(\"stage.touch\", this.stageTouch, this);\r\n        game.on(\"gameOver\", this.gameOver, this);\r\n        this.node.on(\"aimPos\", this.aimPos, this);\r\n    },\r\n    onLoad() {\r\n        if (!this.parent) this.parent = this.node.parent;\r\n        if (!this.parent) return;\r\n        this.animationName = \"\";\r\n        this.roleState = 0;//角色状态  0=静止 1=移动 2=跳跃\r\n        this.scaleX = Math.abs(this.node.scaleX);\r\n        this.sp = this.getComponent(sp.Skeleton);\r\n        let sp_skeleton_data = this.sp._skeleton.data;\r\n        this.animations = {};\r\n        for (let i in sp_skeleton_data.animations) {\r\n            let animation = sp_skeleton_data.animations[i];\r\n            this.animations[animation.name] = {\r\n                trackIndex: parseInt(i),\r\n                name: animation.name,\r\n                duration: animation.duration\r\n            };\r\n        }\r\n        this.trackIndex = this.animations.idle.trackIndex;\r\n        this.trackIndex2 = 0;\r\n        this.action = \"idle\";\r\n        this.changeAction(this.action);\r\n        // let ra1 = this.animations.run.duration > this.animations.attack1.duration ? this.animations.attack1.duration : this.animations.run.duration;\r\n        // let ra2 = this.animations.run.duration > this.animations.attack2.duration ? this.animations.attack2.duration : this.animations.run.duration;\r\n        this.setMix('run', 'attack2', 0.1);\r\n        this.setMix('run', 'attack1', 0.1);\r\n        // this.setMix('run', 'attack2', ra1);\r\n        // this.setMix('run', 'attack1', ra2);\r\n        let ia1 = this.animations.idle.duration > this.animations.attack1.duration ? this.animations.attack1.duration : this.animations.idle.duration;\r\n        let ia2 = this.animations.idle.duration > this.animations.attack2.duration ? this.animations.attack2.duration : this.animations.idle.duration;\r\n        this.setMix('idle', 'attack2', 0.2);\r\n        this.setMix('idle', 'attack1', 0.2);\r\n        // this.setMix('idle', 'attack2', ia1);\r\n        // this.setMix('idle', 'attack1', ia2);\r\n        this.weaponData = require(\"zhujueConfig\");\r\n        this.weaponIndex = 1;\r\n        setTimeout(this.init.bind(this), 100);\r\n    },\r\n    //设置角色状态\r\n    setRoleState(value) {\r\n        this.roleState = value;//角色状态  0=静止 1=移动 2=跳跃\r\n        switch (value) {\r\n            case 0: //静止\r\n                this.action = \"idle\";\r\n                this.changeAction(this.action);\r\n                break;\r\n            case 1://移动\r\n                this.action = \"run\";\r\n                this.changeAction(this.action);\r\n                break;\r\n            case 2: //跳跃\r\n                this.action = \"jump\";\r\n                this.changeAction(\"jump\");\r\n                break;\r\n        }\r\n    },\r\n    changeAction(value) {\r\n        if (this.sp.animation == value) return;\r\n        switch (value) {\r\n            case  game.gameAction.idle:\r\n                this.sp.clearTrack(this.trackIndex);\r\n                this.sp.clearTrack(this.trackIndex2);\r\n                this.trackIndex = this.animations.idle.trackIndex;\r\n                this.sp.addAnimation(this.trackIndex, \"idle\", true);\r\n                break;\r\n            case   game.gameAction.run:\r\n                this.sp.clearTrack(this.trackIndex);\r\n                this.sp.clearTrack(this.trackIndex2);\r\n                this.trackIndex = this.animations.run.trackIndex;\r\n                this.sp.addAnimation(this.trackIndex, \"run\", true);\r\n                break;\r\n            case   game.gameAction.jump:\r\n                // this.sp.clearTrack(this.trackIndex);\r\n                // this.trackIndex = this.animations.jump.trackIndex;\r\n                this.sp.clearTrack(this.trackIndex);\r\n                this.trackIndex = this.animations.jump.trackIndex;\r\n                this.sp.addAnimation(this.trackIndex, \"jump\", false);\r\n                break;\r\n            case   game.gameAction.attack:\r\n                // if (this.sp.animation == \"jump\" || this.sp.animation == \"run\")\r\n                //     return;\r\n                // this.sp.clearTrack(this.trackIndex);\r\n                this.sp.clearTrack(this.trackIndex2);\r\n                if (this.trackIndex == this.animations.idle.trackIndex || this.trackIndex == this.animations.jump.trackIndex) {\r\n                    this.sp.clearTrack(this.trackIndex);\r\n                }\r\n                let weapon = this.weaponData[this.weaponIndex];\r\n                if (weapon.attackId == 1) {\r\n                    this.trackIndex2 = this.animations.attack1.trackIndex;\r\n                    this.sp.addAnimation(this.trackIndex2, \"attack1\", false);\r\n                }\r\n                else if (weapon.attackId == 2) {\r\n                    this.trackIndex2 = this.animations.attack2.trackIndex;\r\n                    this.sp.addAnimation(this.trackIndex2, \"attack2\", false);\r\n                }\r\n                break;\r\n        }\r\n    },\r\n    gameOver() {\r\n        this.changeAction(\"idle\");\r\n    },\r\n    init: function () {\r\n        this.arm = this.sp.findBone(\"root_qiang\");\r\n        this.armPos = cc.v2(this.arm.worldX, this.arm.worldY);\r\n        this.switchSkin(this.weaponIndex);\r\n        this.armRotation = game.gameUtils.standardRotation(this.arm.rotation);\r\n        this.rotationLimit = -65;\r\n        this.rotationLimit1 = game.gameUtils.standardRotation(this.rotationLimit - 90);\r\n        this.rotationLimit2 = game.gameUtils.standardRotation(this.rotationLimit + 90);\r\n        this.sendTime = 0;\r\n        // this.curAction = \"idle\";\r\n        let self = this;\r\n        let spine = this.sp;\r\n        // //动画开始\r\n        // let weapon = this.weaponData[this.weaponIndex];\r\n        // this.attackTimeScale1 = 230 / (weapon.sendTime * 1000);\r\n        // this.attackTimeScale2 = 450 / (weapon.sendTime * 1000);\r\n        spine.setStartListener(function (trackEntry) {\r\n            let animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            switch (animationName) {\r\n                case \"attack1\":\r\n                    break;\r\n            }\r\n            // if (self.animationName === 'attack1') {\r\n            //     spine.timeScale = self.attackTimeScale1;\r\n            // }\r\n            // else if (self.animationName === 'attack2') {\r\n            //     spine.timeScale = self.attackTimeScale2;\r\n            // }\r\n            // else {\r\n            //     spine.timeScale = 1;\r\n            // }\r\n        }.bind(this));\r\n        spine.setCompleteListener(function (trackEntry) {\r\n            let animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            switch (animationName) {\r\n                case \"attack1\":\r\n                case \"attack2\":\r\n                    this.sp.clearTrack(this.trackIndex);\r\n                    this.changeAction(this.action);\r\n                    break;\r\n            }\r\n        }.bind(this));\r\n        this._isinit = true;\r\n        this.addEvent();\r\n    },\r\n    stageTouch(pos) {\r\n        if (!this._isinit) return;\r\n        if (game.isOver) return;\r\n        let p = this.node.convertToWorldSpaceAR(this.armPos);\r\n        let rotation = game.gameUtils.getRotation(p, pos);\r\n        if (this.node.scaleX < 0) {\r\n            rotation = rotation - 90 - this.weaponData[this.weaponIndex].rotation;\r\n            rotation = 360 - rotation\r\n        }\r\n        else {\r\n            rotation = rotation - 90 + this.weaponData[this.weaponIndex].rotation;\r\n        }\r\n        rotation = game.gameUtils.standardRotation(rotation);\r\n        if (game.gameUtils.limitRotation(rotation, this.rotationLimit1, this.rotationLimit2)) {\r\n            this.arm.rotation = rotation;\r\n            this.armRotation = game.gameUtils.standardRotation(this.arm.rotation);\r\n        }\r\n        else {\r\n            this.changeDirection(this.node.scaleX * -1)\r\n        }\r\n    },\r\n    aimPos(pos) {\r\n        if (!this._isinit) return;\r\n        if (game.isOver) return;\r\n        pos.y += this.weaponData[this.weaponIndex].aimY;\r\n        let p = this.node.convertToWorldSpaceAR(this.armPos);\r\n        let rotation = game.gameUtils.getRotation(p, pos);\r\n        if (this.node.scaleX < 0) {\r\n            rotation = rotation - 90 - this.weaponData[this.weaponIndex].rotation;\r\n            rotation = 360 - rotation\r\n        }\r\n        else {\r\n            rotation = rotation - 90 + this.weaponData[this.weaponIndex].rotation;\r\n        }\r\n        rotation = game.gameUtils.standardRotation(rotation);\r\n        if (game.gameUtils.limitRotation(rotation, this.rotationLimit1, this.rotationLimit2)) {\r\n            this.arm.rotation = rotation;\r\n            this.armRotation = game.gameUtils.standardRotation(this.arm.rotation);\r\n        }\r\n    },\r\n    changeDirection(value) {\r\n        this.node.scaleX = this.scaleX * value;\r\n    },\r\n    //切换皮肤 武器\r\n    switchSkin(idx) {\r\n        if (game.isOver) return;\r\n        if (!idx) {\r\n            this.weaponIndex += 1;\r\n            if (this.weaponIndex > 4) this.weaponIndex = 1;\r\n            idx = this.weaponIndex;\r\n        }\r\n        this.weaponIndex = idx;\r\n        game.emit(\"weaponIndex\", this.weaponIndex);\r\n        let weapon = this.weaponData[this.weaponIndex]\r\n        this.sp.setSkin(weapon.name);\r\n        this.weapon = this.sp.findBone(\"root_weapons\" + idx);\r\n        this.weaponPos = cc.v2(this.weapon.worldX, this.weapon.worldY);\r\n        // this.attackTimeScale1 = 230 / (weapon.sendTime * 1000);\r\n        // this.attackTimeScale2 = 450 / (weapon.sendTime * 1000);\r\n    },\r\n    //setMix 为所有关键帧设定混合及混合时间（从当前值开始差值）。\r\n    setMix(anim1, anim2, mixTime) {\r\n        // this.sp.setMix(anim1, anim2, mixTime);\r\n        // this.sp.setMix(anim2, anim1, mixTime);\r\n    },\r\n    start() {\r\n    },\r\n    update(dt) {\r\n        if (game.isOver) return;\r\n        if (!this._isinit) return;\r\n        this.sendTime += dt;\r\n        if (!game.touchDown) {\r\n            return;\r\n        }\r\n        let weapon = this.weaponData[this.weaponIndex];\r\n        if (this.sendTime > weapon.sendTime) {\r\n            this.sendTime = 0;\r\n            this.changeAction(game.gameAction.attack);\r\n            let armPos = this.node.convertToWorldSpaceAR(this.armPos);\r\n            this.weaponPos = cc.v2(this.weapon.worldX, this.weapon.worldY);\r\n            let weaponPos = this.node.convertToWorldSpaceAR(this.weaponPos);\r\n            let rotation = game.gameUtils.getRotation(armPos, weaponPos);\r\n            let bulletName = \"bullet\" + this.weaponIndex;\r\n            if (!this.shootData) this.shootData = {};\r\n            this.shootData.prefabName = bulletName;//预制体名称\r\n            this.shootData.v = weaponPos; //位置\r\n            this.shootData.angle = rotation;//角度\r\n            this.shootData.group = \"mybull\"; //组\r\n            this.shootData.attack = weapon.attack;\r\n            game.emit(\"shoot\", this.shootData);\r\n            //game.emit(\"shoot\", bulletName, weaponPos, rotation, \"mybull\");\r\n        }\r\n    },\r\n});\r\n"]}