{"version":3,"sources":["assets\\Script\\zhujie\\roleFind.js"],"names":["PoolComponent","require","cc","Class","Component","properties","hero","Node","unuse","game","off","aim","reuse","data","targets","onLoad","on","flg","aimFlg","onCollisionEnter","other","self","isOver","node","isDeath","indexOf","push","aimPos","length","pos","convertToWorldSpaceAR","v2","sort","a","b","pos1","pos2","len1","gameUtils","getLength","len2","target","emit","onCollisionStay","onCollisionExit","idx","splice"],"mappings":"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","sourceRoot":"/","sourcesContent":["let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        hero: cc.Node\r\n    },\r\n    unuse: function () {\r\n        game.off(\"aim\", this.aim, this);\r\n    },\r\n    reuse: function (data) {\r\n        this.targets = [];\r\n        //game.off(\"aim\", this.aim, this);\r\n    },\r\n    onLoad() {\r\n        this.targets = [];\r\n        game.on(\"aim\", this.aim, this);\r\n    },\r\n    aim(flg) {\r\n        this.aimFlg = flg;\r\n    },\r\n    //碰撞进入\r\n    onCollisionEnter: function (other, self) {\r\n        if (game.isOver) return;\r\n        if (this.node.isDeath) return;\r\n        let node = other.node;\r\n        if (this.targets.indexOf(node) < 0) {\r\n            this.targets.push(node);\r\n        }\r\n        this.aimPos();\r\n    },\r\n    aimPos() {\r\n        if (!this.hero || !this.aimFlg || !this.targets || this.targets.length == 0) return;\r\n        let pos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        this.targets.sort(function (a, b) {\r\n            let pos1 = a.convertToWorldSpaceAR(cc.v2(0, 0));\r\n            let pos2 = b.convertToWorldSpaceAR(cc.v2(0, 0));\r\n            let len1 = game.gameUtils.getLength(pos1, pos);\r\n            let len2 = game.gameUtils.getLength(pos2, pos);\r\n            return len1 - len2;\r\n        });\r\n        let target = this.targets[0];\r\n        pos = target.convertToWorldSpaceAR(cc.v2(0, 50));\r\n        this.hero.emit(\"aimPos\", pos);\r\n    },\r\n    //碰撞停留\r\n    onCollisionStay: function (other, self) {\r\n        this.aimPos();\r\n    },\r\n    //碰撞退出\r\n    onCollisionExit: function (other, self) {\r\n        if (game.isOver) return;\r\n        if (this.node.isDeath) return;\r\n        let node = other.node;\r\n        let idx = this.targets.indexOf(node);\r\n        if (idx >= 0) {\r\n            this.targets.splice(idx, 1);\r\n        }\r\n        this.aimPos();\r\n    }\r\n});\r\n"]}