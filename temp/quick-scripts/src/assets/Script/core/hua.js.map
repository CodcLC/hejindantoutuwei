{"version":3,"sources":["assets\\Script\\core\\hua.js"],"names":["cc","Class","Component","properties","huaValue","huaLevel","onDestroy","onLoad","updateHua","setHua","value","hueValue","Math","PI","mat","hueMatrix","red","v4","green","blue","renderComponents","node","getComponents","RenderComponent","renderComponent","material","getMaterial","isLua","name","indexOf","setProperty","xRotateMat","rs","rc","yRotateMat","zRotateMat","matrixMult","a","b","c","x","y","temp","mat1000","i","length","j","hue","rot","seq2","sqrt","seq3","mag","xrs","xrc","yrs","yrc","zrs","zrc","sin","cos","start"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        huaValue: 100,\r\n        huaLevel: 1\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onLoad() {\r\n        this.updateHua();\r\n    },\r\n    setHua(value) {\r\n        this.huaValue = value;\r\n        this.updateHua();\r\n    },\r\n    updateHua() {\r\n        let hueValue = Math.PI * 2 * this.huaValue / 255;\r\n        let mat = this.hueMatrix(hueValue);\r\n        let red = cc.v4(mat[0][0], mat[0][1], mat[0][2], 1);\r\n        let green = cc.v4(mat[1][0], mat[1][1], mat[1][2], 1);\r\n        let blue = cc.v4(mat[2][0], mat[2][1], mat[2][2], 1);\r\n        let renderComponents = this.node.getComponents(cc.RenderComponent);\r\n        let renderComponent = renderComponents[0];\r\n        let material = renderComponent.getMaterial(0);\r\n        let isLua = (material.name.indexOf(\"hua\") >= 0)\r\n        if (isLua) {\r\n            material.setProperty(\"red\", red);\r\n            material.setProperty(\"green\", green);\r\n            material.setProperty(\"blue\", blue);\r\n            material.setProperty(\"huaLevel\", this.huaLevel);\r\n        }\r\n    },\r\n    xRotateMat: function (mat, rs, rc) {\r\n        mat[0][0] = 1.0;\r\n        mat[0][1] = 0.0;\r\n        mat[0][2] = 0.0;\r\n        mat[1][0] = 0.0;\r\n        mat[1][1] = rc;\r\n        mat[1][2] = rs;\r\n        mat[2][0] = 0.0;\r\n        mat[2][1] = -rs;\r\n        mat[2][2] = rc;\r\n    },\r\n    yRotateMat: function (mat, rs, rc) {\r\n        mat[0][0] = rc;\r\n        mat[0][1] = 0.0;\r\n        mat[0][2] = -rs;\r\n        mat[1][0] = 0.0;\r\n        mat[1][1] = 1.0;\r\n        mat[1][2] = 0.0;\r\n        mat[2][0] = rs;\r\n        mat[2][1] = 0.0;\r\n        mat[2][2] = rc;\r\n    },\r\n    zRotateMat: function (mat, rs, rc) {\r\n        mat[0][0] = rc;\r\n        mat[0][1] = rs;\r\n        mat[0][2] = 0.0;\r\n        mat[1][0] = -rs;\r\n        mat[1][1] = rc;\r\n        mat[1][2] = 0.0;\r\n        mat[2][0] = 0.0;\r\n        mat[2][1] = 0.0;\r\n        mat[2][2] = 1.0;\r\n    },\r\n    matrixMult: function (a, b, c) {\r\n        var x, y;\r\n        var temp = [];\r\n        for (y = 0; y < 3; y++) {\r\n            temp[y] = [];\r\n            for (x = 0; x < 3; x++) {\r\n                temp[y][x] = b[y][0] * a[0][x] + b[y][1] * a[1][x] + b[y][2] * a[2][x];\r\n            }\r\n        }\r\n        for (y = 0; y < 3; y++) {\r\n            for (x = 0; x < 3; x++) {\r\n                c[y][x] = temp[y][x];\r\n            }\r\n        }\r\n    },\r\n    mat1000: function (mat) {\r\n        for (var i = 0; i < mat.length; i++) {\r\n            for (var j = 0; j < mat[i].length; j++) {\r\n                var temp = mat[i][j];\r\n                mat[i][j] = temp * 1000;\r\n            }\r\n        }\r\n    },\r\n    //色调矩阵\r\n    hueMatrix: function (hue) {\r\n        var mat = [];\r\n        mat[0] = [];\r\n        mat[1] = [];\r\n        mat[2] = [];\r\n        var rot = [];\r\n        rot[0] = [];\r\n        rot[1] = [];\r\n        rot[2] = [];\r\n        var seq2 = Math.sqrt(2);\r\n        var seq3 = Math.sqrt(3);\r\n        var mag, xrs, xrc, yrs, yrc, zrs, zrc;\r\n        mag = seq2;\r\n        xrs = 1.0 / mag;\r\n        xrc = 1.0 / mag;\r\n        this.xRotateMat(mat, xrs, xrc);\r\n        mag = seq3;\r\n        yrs = -1.0 / mag;\r\n        yrc = seq2 / mag;\r\n        this.yRotateMat(rot, yrs, yrc);\r\n        this.matrixMult(rot, mat, mat);\r\n        zrs = Math.sin(hue);\r\n        zrc = Math.cos(hue);\r\n        this.zRotateMat(rot, zrs, zrc);\r\n        this.matrixMult(rot, mat, mat);\r\n        this.yRotateMat(rot, -yrs, yrc);\r\n        this.matrixMult(rot, mat, mat);\r\n        this.xRotateMat(rot, -xrs, xrc);\r\n        this.matrixMult(rot, mat, mat);\r\n        return mat;\r\n    },\r\n    start() {\r\n    },\r\n// update (dt) {},\r\n})\r\n;\r\n"]}