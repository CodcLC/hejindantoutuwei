{"version":3,"sources":["assets\\Script\\scene\\gameOver.js"],"names":["cc","Class","Component","properties","onDestroy","node","off","death","addEvent","on","isDeath","game","isOver","win","group","emit","physicsManager","director","getPhysicsManager","enabled","getCollisionManager","gameEvent","popup_prefab","gamePopup","gameOver_win","test","parseInt","Math","random","soundManager","playMusic","gameSound","bgm_win","gameOver_loss","bgm_lose","onLoad","start"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAELC,EAAAA,UAAU,EAAE,EAFP;AAGLC,EAAAA,SAHK,uBAGO;AACR,SAAKC,IAAL,CAAUC,GAAV,CAAc,OAAd,EAAuB,KAAKC,KAA5B,EAAmC,IAAnC;AACH,GALI;AAMLC,EAAAA,QANK,sBAMM;AACP,SAAKH,IAAL,CAAUI,EAAV,CAAa,OAAb,EAAsB,KAAKF,KAA3B,EAAkC,IAAlC;AACH,GARI;AASLA,EAAAA,KATK,mBASG;AACJ,QAAI,KAAKG,OAAT,EAAkB;AAClBC,IAAAA,IAAI,CAACC,MAAL,GAAc,IAAd;AACA,SAAKP,IAAL,CAAUK,OAAV,GAAoB,KAAKA,OAAL,GAAe,IAAnC;AACA,QAAIG,GAAG,GAAG,IAAV;;AACA,QAAI,KAAKR,IAAL,CAAUS,KAAV,IAAmB,QAAvB,EAAiC;AAC7BD,MAAAA,GAAG,GAAG,KAAN;AACH;;AACDF,IAAAA,IAAI,CAACI,IAAL,CAAU,UAAV;AACA,QAAIC,cAAc,GAAGhB,EAAE,CAACiB,QAAH,CAAYC,iBAAZ,EAArB;AACAF,IAAAA,cAAc,CAACG,OAAf,GAAyB,KAAzB;AACAnB,IAAAA,EAAE,CAACiB,QAAH,CAAYG,mBAAZ,GAAkCD,OAAlC,GAA4C,KAA5C;;AACA,QAAIN,GAAJ,EAAS;AACLF,MAAAA,IAAI,CAACI,IAAL,CAAUJ,IAAI,CAACU,SAAL,CAAeC,YAAzB,EAAuCX,IAAI,CAACY,SAAL,CAAeC,YAAtD,EAAoE;AAChEC,QAAAA,IAAI,EAAEC,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAgB,IAAjB,CADkD;AAEhEf,QAAAA,GAAG,EAAEA;AAF2D,OAApE;AAIAF,MAAAA,IAAI,CAACkB,YAAL,CAAkBC,SAAlB,CAA4BnB,IAAI,CAACoB,SAAL,CAAeC,OAA3C,EAAoD,KAApD,EALK,CAKsD;AAC9D,KAND,MAOK;AACDrB,MAAAA,IAAI,CAACI,IAAL,CAAUJ,IAAI,CAACU,SAAL,CAAeC,YAAzB,EAAuCX,IAAI,CAACY,SAAL,CAAeU,aAAtD,EAAqE;AACjER,QAAAA,IAAI,EAAEC,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAgB,IAAjB,CADmD;AAEjEf,QAAAA,GAAG,EAAEA;AAF4D,OAArE;AAIAF,MAAAA,IAAI,CAACkB,YAAL,CAAkBC,SAAlB,CAA4BnB,IAAI,CAACoB,SAAL,CAAeG,QAA3C,EAAqD,KAArD,EALC,CAK2D;AAC/D;AACJ,GAnCI;AAoCLC,EAAAA,MApCK,oBAoCI;AACL,SAAKzB,OAAL,GAAe,KAAf;AACA,SAAKF,QAAL;AACH,GAvCI;AAwCL4B,EAAAA,KAxCK,mBAwCG,CACP;AAzCI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n    properties: {},\r\n    onDestroy() {\r\n        this.node.off(\"death\", this.death, this);\r\n    },\r\n    addEvent() {\r\n        this.node.on(\"death\", this.death, this);\r\n    },\r\n    death() {\r\n        if (this.isDeath) return;\r\n        game.isOver = true;\r\n        this.node.isDeath = this.isDeath = true;\r\n        var win = true;\r\n        if (this.node.group == \"myrole\") {\r\n            win = false;\r\n        }\r\n        game.emit(\"gameOver\");\r\n        let physicsManager = cc.director.getPhysicsManager();\r\n        physicsManager.enabled = false;\r\n        cc.director.getCollisionManager().enabled = false;\r\n        if (win) {\r\n            game.emit(game.gameEvent.popup_prefab, game.gamePopup.gameOver_win, {\r\n                test: parseInt(Math.random() * 1000),\r\n                win: win\r\n            });\r\n            game.soundManager.playMusic(game.gameSound.bgm_win, false);//停止播放音乐\r\n        }\r\n        else {\r\n            game.emit(game.gameEvent.popup_prefab, game.gamePopup.gameOver_loss, {\r\n                test: parseInt(Math.random() * 1000),\r\n                win: win\r\n            });\r\n            game.soundManager.playMusic(game.gameSound.bgm_lose, false);//停止播放音乐\r\n        }\r\n    },\r\n    onLoad() {\r\n        this.isDeath = false;\r\n        this.addEvent();\r\n    },\r\n    start() {\r\n    },\r\n});\r\n"]}