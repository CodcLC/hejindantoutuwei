{"version":3,"sources":["assets\\Script\\bullet\\bullet5.js"],"names":["PoolComponent","require","cc","Class","properties","speed","range","onLoad","start","unuse","reuse","data","game","soundManager","playEffect","gameSound","qing_xing_qiang_jie1","init","state","idx","curRange","emit","aniName","v","angle","group","node","hd","Math","PI","speedX","cos","width","speedY","sin","x","y","animation","getComponent","Animation","_isInit","spriteFrames","gameUtils","getSpriteFrames","bullet_atlas","prefabName","readyClip","AnimationClip","createWithSpriteFrames","name","wrapMode","WrapMode","Loop","addClip","play","playAdditive","end","pool","put","removeFromParent","destroy","curPos","v2","onDestroy","onCollisionEnter","other","self","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["let PoolComponent = require(\"PoolComponent\"); //池子组件\r\ncc.Class({\r\n    extends: PoolComponent,\r\n    properties: {\r\n        speed: 1000,\r\n        range: 1000\r\n    },\r\n    onLoad() {\r\n    },\r\n    start() {\r\n    },\r\n    //回收\r\n    unuse: function () {\r\n    },\r\n    //重用\r\n    reuse: function (data) {\r\n        game.soundManager.playEffect(game.gameSound.qing_xing_qiang_jie1,false);\r\n        this.init(data);\r\n    },\r\n    init(data) {\r\n        this.state = \"ready\";\r\n        this.idx = 0;\r\n        this.curRange = this.range;\r\n        game.emit(\"shootFire\", {aniName: \"eff2\",v: data.v, angle: data.angle});//开火动画\r\n        if (data.group) this.node.group = data.group;\r\n        this.node.angle = data.angle;\r\n\r\n        let hd = this.node.angle * Math.PI / 180;\r\n        this.speedX = Math.cos(hd) * this.node.width / 2;\r\n        this.speedY = Math.sin(hd) * this.node.width / 2;\r\n        this.node.x = data.v.x + this.speedX;\r\n        this.node.y = data.v.y + this.speedY;\r\n        this.speedX = Math.cos(hd) * this.speed;\r\n        this.speedY = Math.sin(hd) * this.speed;\r\n        let animation = this.node.getComponent(cc.Animation);//动画组件\r\n        if (!this._isInit) {\r\n            let spriteFrames = game.gameUtils.getSpriteFrames(game.bullet_atlas, data.prefabName);\r\n            let readyClip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 20);\r\n            readyClip.name = 'move';\r\n            readyClip.wrapMode = cc.WrapMode.Loop;\r\n            animation.addClip(readyClip);\r\n            animation.play(\"move\");\r\n            this._isInit = true;\r\n        }\r\n        else {\r\n            animation.playAdditive('move', 0);\r\n        }\r\n        this.state = \"move\";\r\n    },\r\n    end() {\r\n        if (this.state == \"end\") return;\r\n        this.state = \"end\";\r\n        var pool = this.node.pool;\r\n        if (pool) {\r\n            pool.put(this.node);\r\n        }\r\n        else {\r\n            this.node.removeFromParent(true);\r\n            this.node.destroy();\r\n        }\r\n        var curPos = cc.v2(this.node.x, this.node.y);\r\n        var angle = this.node.angle;\r\n        //game.emit(\"shootFire\", \"fire\", \"eff5\", curPos, angle);//开火动画\r\n        game.emit(\"shootFire\", {aniName: \"eff5\",v: curPos, angle: angle});//开火动画\r\n    },\r\n    onDestroy() {\r\n    },\r\n    onCollisionEnter: function (other, self) {\r\n        this.end();\r\n    },\r\n    update(dt) {\r\n        if (this.state != \"move\") {\r\n            return;\r\n        }\r\n        this.idx++;\r\n        this.curRange -= this.speed * dt;\r\n        if (this.curRange <= 0) {\r\n            this.end();\r\n            return;\r\n        }\r\n        this.node.x += this.speedX * dt;\r\n        this.node.y += this.speedY * dt;\r\n    },\r\n});\r\n"]}